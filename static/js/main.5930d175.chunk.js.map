{"version":3,"sources":["index.js"],"names":["GraphLoader","lazy","rootElement","document","getElementById","ReactDOM","render","props","num_versions","length","routes","links","i","path","push","tag","Link","to","exact","component","useState","dropdownOpen","setOpen","isOpen","toggle","caret","fallback"],"mappings":"yOAWMA,G,kBAAc,CACpBC,gBAAK,kBAAM,uDACXA,gBAAK,kBAAM,sDACXA,gBAAK,kBAAM,uDACXA,gBAAK,kBAAM,sDACXA,gBAAK,kBAAM,uDACXA,gBAAK,kBAAM,8DACXA,gBAAK,kBAAM,4EACXA,gBAAK,kBAAM,sEA+CX,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,mBA7ChB,SAAaC,GAMb,IALA,IAAIC,EAAeR,EAAYS,OAE3BC,EAAS,GACTC,EAAQ,GAEHC,EAAE,EAAGA,EAAEJ,IAAgBI,EAChC,CACA,IAAMC,EAAO,MAAQD,EAAE,GACvBD,EAAMG,KACN,kBAAC,IAAD,CAAcC,IAAKC,IAAMC,GAAIJ,GAA7B,WAA4CD,EAAE,IAE9CF,EAAOI,KACP,kBAAC,IAAD,CAAOI,OAAK,EAACL,KAAMA,EAAMM,UAAWnB,EAAYY,MAb7B,MAiBaQ,oBAAS,GAjBtB,mBAiBZC,EAjBY,KAiBEC,EAjBF,KAqBnB,OACE,kBAAC,IAAD,KACA,6BACA,kBAAC,IAAD,CAAgBC,OAAQF,EAAcG,OALzB,kBAAMF,GAASD,KAM5B,kBAAC,IAAD,CAAgBI,OAAK,GAArB,qBAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcV,IAAKC,IAAMC,GAAG,KAA5B,UACCN,IAGH,kBAAC,WAAD,CAAUe,SAAU,4CACpB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOR,OAAK,EAACL,KAAK,IAAIM,UAAWnB,EAAYQ,EAAa,KACzDE,QASW,MAASR,I","file":"static/js/main.5930d175.chunk.js","sourcesContent":["import { BrowserRouter as Router, Link,\n  Route, Switch } from 'react-router-dom';\nimport React, { Suspense, lazy, useState } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { ButtonDropdown, DropdownToggle,\n  DropdownMenu, DropdownItem } from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'vis-network/dist/vis-network.min.css';\nimport './index.css';\n\nconst GraphLoader = [\nlazy(() => import('./version1/GraphLoader')),\nlazy(() => import('./version2/GraphLoader')),\nlazy(() => import('./version3/GraphLoader')),\nlazy(() => import('./version4/GraphLoader')),\nlazy(() => import('./version5/GraphLoader')),\nlazy(() => import('./version6/SocialApp')),\nlazy(() => import('./version7/SocialApp')),\nlazy(() => import('./version8/SocialApp')),\n];\n\nfunction App(props){\nvar num_versions = GraphLoader.length;\n\nvar routes = []\nvar links = []\n\nfor (var i=0; i<num_versions; ++i)\n{\nconst path = \"/v\" + (i+1);\nlinks.push(\n<DropdownItem tag={Link} to={path}>Version {i+1}</DropdownItem>\n);\nroutes.push(\n<Route exact path={path} component={GraphLoader[i]}/>\n);\n}\n\nconst [dropdownOpen, setOpen] = useState(false);\n\nconst toggle = () => setOpen(!dropdownOpen);\n\nreturn (\n  <Router>\n  <div>\n  <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n  <DropdownToggle caret>\n    Choose version...\n  </DropdownToggle>\n  <DropdownMenu>\n    <DropdownItem tag={Link} to=\"/\">Latest</DropdownItem>\n    {links}\n  </DropdownMenu>\n  </ButtonDropdown>\n  <Suspense fallback={<div>Loading...</div>}>\n  <Switch>\n    <Route exact path=\"/\" component={GraphLoader[num_versions-1]}/>\n    {routes}\n  </Switch>\n  </Suspense>\n  </div>\n  </Router>\n);\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);"],"sourceRoot":""}