{"version":3,"sources":["version7/SocialGraph.js","version7/InfoBox.js","version7/TimeLineBox.js","version7/Person.js","version7/Errors.js","version7/People.js","version7/Business.js","version7/Businesses.js","version7/Message.js","version7/Messages.js","version7/Position.js","version7/Positions.js","version7/Affiliation.js","version7/Affiliations.js","version7/Source.js","version7/Sources.js","version7/Note.js","version7/Notes.js","version7/DateRange.js","version7/Social.js","version7/SocialApp.js"],"names":["fast_physics","enabled","timestep","options","height","width","layout","randomSeed","manipulation","initiallyActive","interaction","navigationButtons","edges","shadow","smooth","type","roundness","physics","SocialGraph","props","state","network","updateWindowDimensions","bind","this","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","params","emitClicked","graph","id","nodes","length","get","fit","my_options","events","click","handleClick","resize","handleResize","getNetwork","React","Component","InfoBox","Card","body","outline","color","style","overflowY","CardHeader","align","title","CardImg","top","src","image","CardBody","text","basicExample","start","end","items","content","TimeLineBox","selectedIds","val","def","Person","titles","firstnames","surnames","suffixes","positions","affiliations","projects","sources","scores","alive","gender","notes","_getHook","hook","getName","join","parts","part","getTitle","push","getFirstName","getSurname","getSuffix","group","result","key","value","getStart","getEnd","is_anchor","node","getID","label","shape","weight","keys","Object","sort","unDry","Dry","registerClass","KeyError","args","Error","captureStackTrace","MissingError","_generate_person_uid","uid","uuidv4","substring","People","registry","load","_updateHooks","name","search","person","anchor","group_filter","node_filter","vis","DataSet","p","add","getNode","inGroup","data","array","forEach","element","people","Business","_generate_business_uid","Businesses","business","b","businesses","Message","date","sender","receiver","from","to","size","_generate_message_uid","Messages","message","item","connections","seen","n","n_id","toEdge","messages","Position","_generate_position_uid","Positions","position","Affiliation","_generate_affiliation_uid","Affiliations","affiliation","Source","_generate_source_uid","Sources","source","Note","getText","_generate_note_uid","Notes","note","DateRange","Social","getHook","getMessages","getConnectionsTo","getPeople","find","connection","getNodes","getBusinesses","getEdges","getPositions","getAffiliations","getSources","getNotes","social","ConnectionList","listitems","map","i","href","onClick","GroupsList","groups","SocialApp","resetFilters","parse","graph_data","console","log","default_data","infobox_data","getGraph","person_filter","isInfoPaneOpen","isTimeLinePaneOpen","timeline","Modal","setAppElement","el","a","selectNode","selectGroup","showInfo","newdata","getBiography","getSender","getReceiver","filter_text","ref","isOpen","onRequestClose","render","Container","Row","Col","slotClicked"],"mappings":"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","file":"static/js/14.f29ded01.chunk.js","sourcesContent":["import React from \"react\";\nimport Graph from \"react-graph-vis\";\n\nconst fast_physics = {\n  enabled: true,\n  timestep: 0.5,\n};\n\nconst slow_physics = {...fast_physics};\nslow_physics.timestep = 0.1;\n\nconst options = {\n  height: \"200px\",\n  width: \"200px\",\n  layout:{\n    randomSeed: 42,\n  },\n  manipulation:{\n    enabled: false,\n    initiallyActive: false,\n  },\n  interaction:{\n    navigationButtons: true,\n  },\n  edges:{\n    shadow: false,\n    smooth: {\n      enabled: true,\n      type: \"continuous\",\n      roundness: 0.3,\n    },\n    width: 0.5,\n  },\n  physics: fast_physics,\n};\n\nclass SocialGraph extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      network: {},\n      width: 0,\n      height: 0,\n    };\n\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  handleClick(params) {\n    let emitClicked = this.props.emitClicked;\n\n    if (emitClicked)\n    {\n      let graph = this.props.graph;\n\n      let id = null;\n\n      if (params.nodes.length > 0)\n      {\n        let node = graph.nodes.get(params.nodes[0]);\n        id = node.id;\n      }\n      else if (params.edges.length > 0)\n      {\n        let edge = graph.edges.get(params.edges[0]);\n        id = edge.id;\n      }\n\n      emitClicked(id);\n    }\n  }\n\n  handleResize(params){\n    // need to do this or else the network is rendered off-screen!\n    let network = this.state.network;\n    network.fit();\n  }\n\n  render(){\n    let graph = this.props.graph;\n    let my_options = {...options};\n\n    // seem to need to do this so that the network will auto-scale\n    // as the screen is redrawn\n    my_options[\"height\"] = `${0.9*this.state.height}px`;\n    my_options[\"width\"] = `${0.95*this.state.width}px`;\n\n    if (graph){\n      let events = {click: (params) => {this.handleClick(params)},\n                    resize: (params) => {this.handleResize(params)}};\n\n      return (<div>\n              <Graph graph={{nodes:graph.nodes.get(),\n                             edges:graph.edges.get()}}\n                     options={my_options}\n                     events={events}\n                     getNetwork={network =>\n                                  this.setState({network:network})} />\n             </div>);\n    }\n    else{\n      return (<div>No data to display!!!</div>);\n    }\n  }\n};\n\nexport default SocialGraph;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, CardImg } from 'reactstrap';\n\nfunction InfoBox(props) {\n  return (\n    <Card body outline color=\"secondary\" style={{height:\"100%\", overflowY:\"scroll\"}}>\n        <CardHeader align=\"center\">{props.title}</CardHeader>\n        <CardImg top width=\"100%\" src={props.image} />\n        <CardBody>\n        {props.text}\n        </CardBody>\n    </Card>\n  );\n};\n\nexport default InfoBox;\n","import React, { Component } from 'react'\nimport Timeline from 'react-visjs-timeline'\n\nconst basicExample = {\n  options: {\n    start: '2014-04-10',\n    end: '2014-04-30',\n  },\n  items: [\n    { id: 1, content: 'item 1', start: '2014-04-20' },\n    { id: 2, content: 'item 2', start: '2014-04-14' },\n    { id: 3, content: 'item 3', start: '2014-04-18' },\n    { id: 4, content: 'item 4', start: '2014-04-16', end: '2014-04-19' },\n    { id: 5, content: 'item 5', start: '2014-04-25' },\n    { id: 6, content: 'item 6', start: '2014-04-27', type: 'point' },\n  ],\n}\n\nclass TimeLineBox extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selectedIds: [],\n    }\n  }\n\n  render() {\n    return (\n        <Timeline {...basicExample} />\n    )\n  }\n}\n\nexport default TimeLineBox\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Person {\n  constructor(props){\n    this.state = {\n      titles: [],\n      firstnames: [],\n      surnames: [],\n      suffixes: [],\n      id: null,\n      positions: {},\n      affiliations: {},\n      projects: {},\n      sources: [],\n      scores: {},\n      alive: null,\n      gender: null,\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.titles = setState(state.titles);\n      this.state.firstnames = setState(state.firstnames);\n      this.state.surnames = setState(state.surnames);\n      this.state.suffixes = setState(state.suffixes);\n      this.state.id = setState(state.id);\n      this.state.positions = setState(state.positions, {});\n      this.state.affiliations = setState(state.affiliations, {});\n      this.state.projects = setState(state.projects, {});\n      this.state.sources = setState(state.sources, []);\n      this.state.alive = setState(state.alive);\n      this.state.gender = setState(state.gender);\n      this.state.scores = setState(state.scores, {});\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Person(${this.getName()})`;\n  }\n\n  getFirstName(){\n    if (this.state.firstnames){\n      return this.state.firstnames.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getTitle(){\n    if (this.state.titles){\n      return this.state.titles.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getSurname(){\n    if (this.state.surnames){\n      return this.state.surnames.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getSuffix(){\n    if (this.state.suffixes){\n      return this.state.suffixes.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getName(){\n    var parts = [];\n\n    let part = this.getTitle();\n    if (part){\n      parts.push(part);\n    }\n\n    part = this.getFirstName();\n    if (part){\n      parts.push(part);\n    }\n\n    part = this.getSurname();\n    if (part){\n      parts.push(part);\n    }\n\n    part = this.getSuffix();\n    if (part){\n      parts.push(part);\n    }\n\n    if (parts.length > 0){\n       return parts.join(\" \");\n    }\n    else{\n      return \"null\";\n    }\n  }\n\n  inGroup(group){\n    return (group in this.state.positions || group in this.state.affiliations);\n  }\n\n  getPositions(){\n    let result = [];\n\n    for (let key in this.state.positions){\n      let value = this.state.positions[key];\n      if (this._getHook){\n        result.push( [this._getHook(key), value] );\n      }\n      else{\n        result.push( [key, value] );\n      }\n    }\n\n    return result;\n  }\n\n  getAffiliations(){\n    let result = [];\n\n    for (let key in this.state.affiliations){\n      let value = this.state.affiliations[key];\n      if (this._getHook){\n        result.push( [this._getHook(key), value] );\n      }\n      else{\n        result.push( [key, value] );\n      }\n    }\n\n    return result;\n  }\n\n  getScores(){\n    return this.state.scores;\n  }\n\n  getBorn(){\n    if (this.state.alive){\n      return this.state.alive.getStart();\n    }\n    else{\n      return null;\n    }\n  }\n\n  getDied(){\n    if (this.state.alive){\n      return this.state.alive.getEnd();\n    }\n    else{\n      return null;\n    }\n  }\n\n  getNode(is_anchor=false){\n    let node = {id: this.getID(),\n                label: this.getName(),\n                title: this.getName(),\n                shape: \"dot\",\n               };\n\n    let weight = 10.0;\n\n    if (this.state.scores){\n      weight = this.state.scores.weight;\n      if (!weight){\n        weight = 10.0;\n      }\n    }\n\n    if (weight < 5.0){\n      weight = 5.0;\n    }\n    else if (weight > 20.0){\n      weight = 20.0;\n    }\n\n    node[\"size\"] = weight;\n\n    let keys = Object.keys(this.state.affiliations);\n\n    if (keys.length > 0){\n      node[\"group\"] = keys.sort().join(\":\");\n    }\n    else{\n      node[\"group\"] = \"unknown\";\n    }\n\n    if (is_anchor){\n      node[\"shape\"] = \"star\";\n      node[\"physics\"] = false;\n      node[\"group\"] = \"anchor\";\n      node[\"size\"] = 20.0;\n    }\n\n    return node;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPerson.unDry = function(value){\n  return new Person(value);\n}\n\nDry.registerClass(\"Person\", Person);\n\nexport default Person;\n","\nclass KeyError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, KeyError)\n    }\n}\n\nclass ValueError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, ValueError)\n    }\n}\n\nclass DuplicateError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, DuplicateError)\n    }\n}\n\nclass MissingError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, MissingError)\n    }\n}\n\nexport {KeyError, ValueError, DuplicateError, MissingError};\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\nimport vis from \"vis-network\";\n\nimport Person from \"./Person\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_person_uid(){\n  let uid = uuidv4();\n  return \"P\" + uid.substring(uid.length-7);\n}\n\nclass People {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n\n    this._getHook = null;\n\n    this.load(props);\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  find(name){\n    for (let key in this.state.registry){\n      let person = this.state.registry[key];\n      if (person.getName().search(name) !== -1){\n        return key;\n      }\n    }\n\n    return null;\n  }\n\n  add(person){\n    if (!(person instanceof Person)){ return;}\n\n    let id = person.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Person ID ${person}`);\n      }\n\n      this.state.registry[id] = person;\n    }\n    else{\n      let uid = _generate_person_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_person_uid();\n      }\n\n      person.state.id = uid;\n      this.state.registry[uid] = person;\n    }\n  }\n\n  getNodes({anchor=null, group_filter=null, node_filter=null} = {}){\n    let nodes = new vis.DataSet();\n\n    if (group_filter){\n      group_filter = group_filter.getID();\n    }\n\n    for (let person in this.state.registry){\n      let p = this.state.registry[person];\n      if (person === anchor){\n        nodes.add(p.getNode({is_anchor:true}));\n      }\n      else if (node_filter){\n        if (p.getID() in node_filter){\n          if (group_filter){\n            if (p.inGroup(group_filter)){\n              nodes.add(p.getNode());\n            }\n          }\n          else{\n            nodes.add(p.getNode());\n          }\n        }\n      }\n      else if (group_filter){\n        if (p.inGroup(group_filter)){\n          nodes.add(p.getNode());\n        }\n      }\n      else{\n        nodes.add(p.getNode());\n      }\n    }\n\n    return nodes;\n  }\n\n  get(id){\n    let person = this.state.registry[id];\n\n    if (person === null){\n      throw MissingError(`No Person with ID ${id}`);\n    }\n\n    return person;\n  }\n\n  load(data){\n    if (data){\n      if (data.array){ data = data.array; }\n      data.forEach(element => {\n        let person = Person.load(element);\n        this.add(person);\n      });\n    }\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPeople.unDry = function(value){\n  let people = new People();\n  people.state = value;\n  return people;\n}\n\nDry.registerClass(\"People\", People);\n\nexport default People;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Business {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      projects: {},\n      sources: [],\n      scores: {},\n      affiliations: {},\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.affiliations = setState(state.affiliations, {});\n      this.state.projects = setState(state.projects, {});\n      this.state.sources = setState(state.sources, []);\n      this.state.scores = setState(state.scores, {});\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Business(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  inGroup(group){\n    return group in this.state.affiliations;\n  }\n\n  getAffiliations(){\n    let result = [];\n\n    for (let key in this.state.affiliations){\n      let value = this.state.affiliations[key];\n      if (this._getHook){\n        result.push( [this._getHook(key), value] );\n      }\n      else{\n        result.push( [key, value] );\n      }\n    }\n\n    return result;\n  }\n\n  getScores(){\n    return this.state.scores;\n  }\n\n  getNode(is_anchor=false){\n    let node = {\n      id: this.getID(),\n      label: this.getName(),\n      title: this.getName(),\n      shape: \"dot\",\n     };\n\n    let weight = 1.0;\n\n    if (this.state.scores){\n      weight = this.state.scores.weight;\n      if (!weight){\n        weight = 1.0;\n      }\n    }\n\n    if (weight < 5.0){\n      weight = 5.0;\n    }\n    else if (weight > 20.0){\n      weight = 20.0;\n    }\n\n    node[\"size\"] = weight;\n\n    let keys = Object.keys(this.state.affiliations);\n\n    if (keys.length > 0){\n      node[\"group\"] = keys.sort().join(\":\");\n    }\n\n    if (is_anchor){\n      node[\"shape\"] = \"star\";\n      node[\"physics\"] = false;\n      node[\"group\"] = \"anchor\";\n      node[\"size\"] = 20.0;\n    }\n\n    return node;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nBusiness.unDry = function(value){\n  return new Business(value);\n}\n\nDry.registerClass(\"Business\", Business);\n\nexport default Business;\n","\nimport Dry from 'json-dry';\nimport vis from 'vis-network';\nimport uuidv4 from 'uuid';\n\nimport Business from \"./Business\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_business_uid(){\n  let uid = uuidv4();\n  return \"B\" + uid.substring(uid.length-7);\n}\n\nclass Businesses {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(business){\n    if (!(business instanceof Business)){ return;}\n\n    let id = business.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Business ID ${Business}`);\n      }\n\n      this.state.registry[id] = business;\n    }\n    else{\n      let uid = _generate_business_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_business_uid();\n      }\n\n      business.state.id = uid;\n      this.state.registry[uid] = business;\n    }\n  }\n\n  get(id){\n    let business = this.state.registry[id];\n\n    if (business === null){\n      throw MissingError(`No Business with ID ${id}`);\n    }\n\n    return business;\n  }\n\n\n  getNodes({anchor=null, group_filter=null, node_filter=null} = {}){\n    let nodes = new vis.DataSet();\n\n    if (group_filter){\n      group_filter = group_filter.getID();\n    }\n\n    for (let business in this.state.registry){\n      let b = this.state.registry[business];\n      if (business === anchor){\n        nodes.add(b.getNode({is_anchor:true}));\n      }\n      else if (node_filter){\n        if (b.getID() in node_filter){\n          if (group_filter){\n            if (b.inGroup(group_filter)){\n              nodes.add(b.getNode());\n            }\n          }\n          else{\n            nodes.add(b.getNode());\n          }\n        }\n      }\n      else if (group_filter){\n        if (b.inGroup(group_filter)){\n          nodes.add(b.getNode());\n        }\n      }\n      else{\n        nodes.add(b.getNode());\n      }\n    }\n\n    return nodes;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nBusinesses.unDry = function(value){\n  let businesses = new Businesses();\n  businesses.state = value;\n  return businesses;\n}\n\nDry.registerClass(\"Businesses\", Businesses);\n\nexport default Businesses;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Message {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      date: null,\n      sender: null,\n      receiver: null,\n      scores: {},\n    };\n\n    this.setState(props);\n    this._getHook = null;\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  getSender(){\n    if (this._getHook){\n      return this._getHook(this.state.sender);\n    }\n    else {\n      return this.state.sender;\n    }\n  }\n\n  getReceiver(){\n    if (this._getHook){\n      return this._getHook(this.state.receiver);\n    }\n    else {\n      return this.state.receiver;\n    }\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.date = setState(state.date);\n      this.state.sender = setState(state.sender);\n      this.state.receiver = setState(state.receiver);\n      this.state.scores = setState(state.scores, {});\n    }\n  }\n\n  toString(){\n    return `Message(name=${this.state.name} ` +\n           `${this.state.sender}=>${this.state.receiver})`;\n  }\n\n  toEdge(){\n    let weight = 1.0;\n\n    if (this.state.scores){\n      weight = this.state.scores.weight;\n\n      if (!weight){\n        weight = 1.0;\n      }\n    }\n\n    let color = 'red';\n\n    if (weight > 10.0){\n      weight = 10.0;\n    }\n    else if (weight >= 4){\n      color = 'black';\n    }\n    else if (weight > 1.0){\n      color = 'gray';\n    }\n    else{\n      color = 'gray';\n      weight = 1.0;\n    }\n\n    let edge = {\n      id:this.getID(),\n      from:this.state.sender,\n      to:this.state.receiver,\n      size:weight,\n      color:color,\n    };\n\n    return edge;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nMessage.unDry = function(value){\n  return new Message(value);\n}\n\nMessage.load = function(data, people=null){\n  return new Message({name: data.name});\n}\n\nDry.registerClass(\"Message\", Message);\n\nexport default Message;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\nimport vis from \"vis-network\";\n\nimport Message from \"./Message\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_message_uid(){\n  let uid = uuidv4();\n  return \"M\" + uid.substring(uid.length-7);\n}\n\nclass Messages {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(message){\n    if (!(message instanceof Message)){ return;}\n\n    let id = message.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Message ID ${message}`);\n      }\n\n      this.state.registry[id] = message;\n    }\n    else{\n      let uid = _generate_message_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_message_uid();\n      }\n\n      message.state.id = uid;\n      this.state.registry[uid] = message;\n    }\n  }\n\n  get(id){\n    let message = this.state.registry[id];\n\n    if (message === null){\n      throw MissingError(`No Message with ID ${id}`);\n    }\n\n    return message;\n  }\n\n  getConnectionsTo(item){\n    let id = item.getID();\n\n    let connections = [];\n    let seen = {};\n\n    for (let key in this.state.registry){\n      let message = this.state.registry[key];\n      let n = null;\n\n      if (message.state.sender === id){\n        n = this._getHook(message.state.receiver);\n      }\n      else if (message.state.receiver === id){\n        n = this._getHook(message.state.sender);\n      }\n\n      if (n){\n        let n_id = n.getID();\n        if (!(n_id in seen)){\n          connections.push(n);\n          seen[n_id] = 1;\n        }\n      }\n    }\n\n    return connections;\n  }\n\n  getEdges(){\n    let edges = new vis.DataSet();\n\n    for (let key in this.state.registry){\n      let message = this.state.registry[key];\n      edges.add(message.toEdge());\n    }\n\n    return edges;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nMessages.unDry = function(value){\n  let messages = new Messages();\n  messages.state = value;\n  return messages;\n}\n\nDry.registerClass(\"Messages\", Messages);\n\nexport default Messages;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Position {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      sources: [],\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.sources = setState(state.sources, []);\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Position(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPosition.unDry = function(value){\n  return new Position(value);\n}\n\nDry.registerClass(\"Position\", Position);\n\nexport default Position;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Position from \"./Position\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_position_uid(){\n  let uid = uuidv4();\n  return \"Q\" + uid.substring(uid.length-7);\n}\n\nclass Positions {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(position){\n    if (!(position instanceof Position)){ return;}\n\n    let id = position.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Position ID ${position}`);\n      }\n\n      this.state.registry[id] = position;\n    }\n    else{\n      let uid = _generate_position_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_position_uid();\n      }\n\n      position.state.id = uid;\n      this.state.registry[uid] = position;\n    }\n  }\n\n  get(id){\n    let position = this.state.registry[id];\n\n    if (position === null){\n      throw MissingError(`No Position with ID ${id}`);\n    }\n\n    return position;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nPositions.unDry = function(value){\n  let positions = new Positions();\n  positions.state = value;\n  return positions;\n}\n\nDry.registerClass(\"Positions\", Positions);\n\nexport default Positions;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Affiliation {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      sources: [],\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.sources = setState(state.sources, []);\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Affiliation(${this.getName()})`;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nAffiliation.unDry = function(value){\n  return new Affiliation(value);\n}\n\nDry.registerClass(\"Affiliation\", Affiliation);\n\nexport default Affiliation;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Affiliation from \"./Affiliation\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_affiliation_uid(){\n  let uid = uuidv4();\n  return \"A\" + uid.substring(uid.length-7);\n}\n\nclass Affiliations {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(affiliation){\n    if (!(affiliation instanceof Affiliation)){ return;}\n\n    let id = affiliation.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Affiliation ID ${affiliation}`);\n      }\n\n      this.state.registry[id] = affiliation;\n    }\n    else{\n      let uid = _generate_affiliation_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_affiliation_uid();\n      }\n\n      affiliation.state.id = uid;\n      this.state.registry[uid] = affiliation;\n    }\n  }\n\n  get(id){\n    let affiliation = this.state.registry[id];\n\n    if (affiliation === null){\n      throw MissingError(`No Affiliation with ID ${id}`);\n    }\n\n    return affiliation;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nAffiliations.unDry = function(value){\n  let affiliations = new Affiliations();\n  affiliations.state = value;\n  return affiliations;\n}\n\nDry.registerClass(\"Affiliations\", Affiliations);\n\nexport default Affiliations;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Source {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Source(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nSource.unDry = function(value){\n  return new Source(value);\n}\n\nDry.registerClass(\"Source\", Source);\n\nexport default Source;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Source from \"./Source\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_source_uid(){\n  let uid = uuidv4();\n  return \"S\" + uid.substring(uid.length-7);\n}\n\nclass Sources {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(source){\n    if (!(source instanceof Source)){ return;}\n\n    let id = source.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Source ID ${source}`);\n      }\n\n      this.state.registry[id] = source;\n    }\n    else{\n      let uid = _generate_source_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_source_uid();\n      }\n\n      source.state.id = uid;\n      this.state.registry[uid] = source;\n    }\n  }\n\n  get(id){\n    let source = this.state.registry[id];\n\n    if (source === null){\n      throw MissingError(`No Source with ID ${id}`);\n    }\n\n    return source;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nSources.unDry = function(value){\n  let sources = new Sources();\n  sources.state = value;\n  return sources;\n}\n\nDry.registerClass(\"Sources\", Sources);\n\nexport default Sources;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Note {\n  constructor(props){\n    this.state = {\n      text: null,\n      id: null,\n      sources: [],\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.text = setState(state.text);\n      this.state.id = setState(state.id);\n      this.state.sources = setState(state.sources, []);\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Note(${this.getText()})`;\n  }\n\n  getText(){\n    return this.state.text;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nNote.unDry = function(value){\n  return new Note(value);\n}\n\nDry.registerClass(\"Note\", Note);\n\nexport default Note;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Note from \"./Note\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_note_uid(){\n  let uid = uuidv4();\n  return \"N\" + uid.substring(uid.length-7);\n}\n\nclass Notes {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(note){\n    if (!(note instanceof Note)){ return;}\n\n    let id = note.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Note ID ${note}`);\n      }\n\n      this.state.registry[id] = note;\n    }\n    else{\n      let uid = _generate_note_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_note_uid();\n      }\n\n      note.state.id = uid;\n      this.state.registry[uid] = note;\n    }\n  }\n\n  get(id){\n    let note = this.state.registry[id];\n\n    if (note === null){\n      throw MissingError(`No Note with ID ${id}`);\n    }\n\n    return note;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nNotes.unDry = function(value){\n  let notes = new Notes();\n  notes.state.registry = value;\n  return notes;\n}\n\nDry.registerClass(\"Notes\", Notes);\n\nexport default Notes;\n","\nimport Dry from 'json-dry';\n\nfunction setState(val, def=null){\n    if (val){\n      return val;\n    } else {\n      return def;\n    }\n  }\n\nclass DateRange{\n  constructor(value){\n    this.state = {\n      start: null,\n      end: null\n    }\n\n    this.setState(value);\n  }\n\n  setState(state){\n    if (state){\n      if (state === \"null\"){ return; }\n      this.state.start = setState(state.start);\n      this.state.end = setState(state.end);\n    }\n  }\n\n  toDry(){\n    return this.state;\n  }\n}\n\nDateRange.unDry = function(value){\n  return new DateRange(value);\n}\n\nDry.registerClass(\"DateRange\", DateRange);\n\nexport default DateRange;\n","\nimport Dry from 'json-dry';\nimport People from './People';\nimport Businesses from './Businesses';\nimport Messages from './Messages';\nimport Positions from './Positions';\nimport Affiliations from './Affiliations';\nimport Sources from './Sources';\nimport Notes from './Notes';\nimport DateRange from './DateRange';\n\nclass Social {\n    constructor(props){\n        this.state = props;\n    }\n\n    _updateHooks(){\n        let getHook = (id)=>{return this.get(id);};\n\n        let state = {};\n\n        if (!(this.state.people instanceof People)){\n           state.people = new People();\n        }\n        else{\n            state.people = this.state.people;\n        }\n\n        if (!(this.state.businesses instanceof Businesses)){\n            state.businesses = new Businesses();\n        }\n        else{\n            state.businesses = this.state.businesses;\n        }\n\n        if (!(this.state.messages instanceof Messages)){\n            state.messages = new Messages();\n        }else{\n            state.messages = this.state.messages;\n        }\n\n        if (!(this.state.positions instanceof Positions)){\n            state.positions = new Positions();\n        }\n        else{\n            state.positions = this.state.positions;\n        }\n\n        if (!(this.state.affiliations instanceof Affiliations)){\n            state.affiliations = new Affiliations();\n        }\n        else{\n            state.affiliations = this.state.affiliations;\n        }\n\n        if (!(this.state.sources instanceof Sources)){\n            state.sources = new Sources();\n        }\n        else{\n            state.sources = this.state.sources;\n        }\n\n        if (!(this.state.notes instanceof Notes)){\n            state.notes = new Notes();\n        }\n        else{\n            state.notes = this.state.notes;\n        }\n\n        this.state = state;\n\n        for (let key in this.state){\n          this.state[key]._updateHooks(getHook);\n        }\n    }\n\n    getPeople(){\n        return this.state.people;\n    }\n\n    getBusinesses(){\n        return this.state.businesses;\n    }\n\n    getMessages(){\n      return this.state.messages;\n    }\n\n    getAffiliations(){\n      return this.state.affiliations;\n    }\n\n    getPositions(){\n      return this.state.positions;\n    }\n\n    getSources(){\n      return this.state.sources;\n    }\n\n    getNotes(){\n      return this.state.notes;\n    }\n\n    getConnectionsTo(item){\n      return this.getMessages().getConnectionsTo(item);\n    }\n\n    getGraph({anchor=null, node_filter=null, group_filter=null} = {}){\n      if (anchor){\n        anchor = this.getPeople().find(anchor);\n      }\n\n      if (node_filter){\n          let id = node_filter.getID();\n          let connections = this.getConnectionsTo(node_filter);\n          node_filter = {};\n          node_filter[id] = 1;\n          for (let connection in connections){\n              let node = connections[connection];\n              node_filter[node.getID()] = 1;\n          }\n      }\n\n      let nodes = this.getPeople().getNodes({anchor:anchor,\n                                             node_filter:node_filter,\n                                             group_filter:group_filter});\n      nodes.add(this.getBusinesses().getNodes({group_filter:group_filter,\n                                               node_filter:node_filter}).get());\n\n      let edges = this.getMessages().getEdges();\n\n      return {\"nodes\": nodes, \"edges\": edges};\n    }\n\n    get(id){\n        if (id[0] === \"M\"){\n            return this.getMessages().get(id);\n        }\n        else if (id[0] === \"P\"){\n            return this.getPeople().get(id);\n        }\n        else if (id[0] === \"B\"){\n            return this.getBusinesses().get(id);\n        }\n        else if (id[0] === \"Q\"){\n            return this.getPositions().get(id);\n        }\n        else if (id[0] === \"A\"){\n            return this.getAffiliations().get(id);\n        }\n        else if (id[0] === \"S\"){\n            return this.getSources().get(id);\n        }\n        else if (id[0] === \"N\"){\n            return this.getNotes().get(id);\n        }\n        else {\n            return id;\n        }\n    }\n\n    toDry(){\n        return {value: this.state};\n    }\n}\n\nSocial.unDry = function(value){\n    let social = new Social();\n    social.state = value;\n    social._updateHooks();\n\n    return social;\n}\n\nDry.registerClass(\"Social\", Social);\n\nexport default Social;\n","import React from 'react';\nimport Modal from 'react-modal';\nimport { Container, Row, Col } from 'reactstrap';\nimport SlidingPane from 'react-sliding-pane';\n\nimport Dry from 'json-dry';\nimport SocialGraph from \"./SocialGraph\";\nimport InfoBox from \"./InfoBox\";\nimport TimeLineBox from './TimeLineBox';\n\nimport graph_data from './data.json';\nimport Social from './Social';\nimport Person from './Person';\nimport Business from './Business';\nimport Message from './Message';\n\nfunction ConnectionList(props){\n  const connections = props.connections;\n  const title = props.title;\n  const emitClicked = props.emitClicked;\n  if (!connections || connections.length === 0){\n    return null;\n  }\n\n  const listitems = connections.map((item) =>{\n    let i = item;\n    let name = item.getName();\n\n    if (emitClicked){\n      return (<li key={name}>\n                <button href=\"#\" onClick={()=>{emitClicked(i);}}>\n                  {name}</button></li>);\n    }\n    else{\n      return (<li key={name}>{name}</li>);\n    }\n  });\n\n  return (<div>{title}<br/><ul>{listitems}</ul></div>);\n}\n\nfunction GroupsList(props){\n  const groups = props.groups;\n  const title = props.title;\n  const emitClicked = props.emitClicked;\n  if (!groups || groups.length === 0){\n    return null;\n  }\n\n  const listitems = groups.map((item) => {\n    let i = item;\n    let name = item;\n\n    if (item.getName){\n      name = item.getName();\n    }\n    else if (item.getID){\n      name = item.getID();\n    }\n\n    if (emitClicked){\n      return (<li key={name}>\n                <button href=\"#\" onClick={()=>{emitClicked(i);}}>\n                  {name}</button></li>);\n    }\n    else{\n      return (<li key={name}>{name}</li>);\n    }\n  });\n\n  return (<div>{title}<br/><ul>{listitems}</ul></div>);\n}\n\nclass SocialApp extends React.Component {\n  constructor(props){\n    super(props);\n\n    let title = \"Isambard's Social Network\";\n    let image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Robert_Howlett_-_Isambard_Kingdom_Brunel_and_the_launching_chains_of_the_Great_Eastern_-_Google_Art_Project.jpg/256px-Robert_Howlett_-_Isambard_Kingdom_Brunel_and_the_launching_chains_of_the_Great_Eastern_-_Google_Art_Project.jpg\";\n    let text = (<div><div>This is an interactive viewer of Isambard Kingdom Brunel's\n                     social network. Please click in the nodes and have fun!</div>\n                     <button href=\"#\" onClick={()=>{this.resetFilters()}}>Reset Filters</button>\n                </div>);\n\n    let social = Dry.parse(graph_data);\n    console.log(social);\n\n    if (!(social instanceof Social )){\n      console.log(\"Could not parse!\");\n      social = new Social();\n    }\n\n    let group_filter = null;\n    let person_filter = null;\n    let anchor = \"Brunel\";\n\n    this.state = {\n      default_data: {\"title\": title, \"image\": image, \"text\": text},\n      infobox_data: {\"title\": title, \"image\": image, \"text\": text},\n      social: social,\n      graph: social.getGraph({anchor:anchor, group_filter:group_filter,\n                              person_filter: person_filter}),\n      group_filter: group_filter,\n      person_filter: person_filter,\n      anchor: anchor,\n      isInfoPaneOpen: false,\n      isTimeLinePaneOpen: false,\n      timeline: new TimeLineBox(),\n    };\n  }\n\n  componentDidMount(){\n    Modal.setAppElement(this.el);\n  }\n\n  resetFilters(node){\n    let node_filter = null;\n    let group_filter = null;\n    let anchor = this.state.anchor;\n    let social = this.state.social;\n\n    let graph = social.getGraph({anchor:anchor, node_filter:node_filter,\n                                 group_filter:group_filter});\n\n    this.setState({graph:graph, node_filter:node_filter,\n                   group_filter:group_filter});\n  }\n\n  selectNode(node){\n    let group_filter = this.state.group_filter;\n    let node_filter = this.state.node_filter;\n    let anchor = this.state.anchor;\n    let social = this.state.social;\n\n    if (node === node_filter){\n      // switch off the current filter\n      node_filter = null;\n    }\n    else{\n      node_filter = node;\n    }\n\n    //create a new graph with this filter\n    let graph = social.getGraph({anchor:anchor,\n                                 group_filter:group_filter,\n                                 node_filter: node_filter});\n\n    this.setState({node_filter: node_filter, graph: graph});\n  }\n\n  selectGroup(group){\n    let group_filter = this.state.group_filter;\n    let node_filter = this.state.node_filter;\n    let anchor = this.state.anchor;\n    let social = this.state.social;\n\n    if (group === group_filter){\n      // switch off the current filter\n      group_filter = null;\n    }\n    else{\n      group_filter = group;\n    }\n\n    //create a new graph with this filter\n    let graph = social.getGraph({anchor:anchor,\n                                 group_filter:group_filter,\n                                 node_filter: node_filter});\n\n    this.setState({group_filter: group_filter, graph: graph});\n  }\n\n  getBiography(item){\n    let name = \"unknown\";\n    let affiliations = [];\n    let positions = [];\n\n    let social = this.state.social;\n    let connections = social.getConnectionsTo(item);\n\n    if (item.getAffiliations){\n      let a = item.getAffiliations();\n      for (let val in a){\n        affiliations.push(a[val][0]);\n      }\n    }\n\n    if (item.getPositions){\n      let p = item.getPositions();\n      for (let val in p){\n        positions.push(p[val][0]);\n      }\n    }\n\n    if (item.getName){\n      name = item.getName();\n    }\n\n    return (\n      <div>\n        <button href=\"#\" onClick={()=>{this.selectNode(item);}}>\n          {name}\n        </button>\n        <GroupsList title=\"Affiliations\"\n                    groups={affiliations}\n                    emitClicked={(item)=>{this.selectGroup(item);}}/>\n        <GroupsList title=\"Positions\"\n                    groups={positions}\n                    emitClicked={(item)=>{this.selectGroup(item);}}/>\n        <ConnectionList title=\"Connections\"\n                  connections={connections}\n                  emitClicked={(item)=>{this.showInfo(item);}}/>\n      </div>\n    );\n  }\n\n  showInfo(item){\n    console.log(\"showInfo\");\n    console.log(item);\n    let newdata = {...this.state.default_data};\n\n    if (item instanceof Person){\n      newdata.title = \"Person\";\n      newdata.text = this.getBiography(item);\n      newdata.image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Illustrirte_Zeitung_%281843%29_21_332_1_Das_vom_Stapellaufen_des_Great-Britain.PNG/640px-Illustrirte_Zeitung_%281843%29_21_332_1_Das_vom_Stapellaufen_des_Great-Britain.PNG\";\n    }\n    else if (item instanceof Business){\n      newdata.title = \"Business\";\n      newdata.text = this.getBiography(item);\n      newdata.image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0d/SS_Great_Britain_diagram.jpg/320px-SS_Great_Britain_diagram.jpg\";\n    }\n    else if (item instanceof Message){\n      newdata.title = \"Message\";\n\n      let sender = item.getSender();\n      if (sender.getName){\n        let node = sender;\n        sender = <button href=\"#\" onClick={()=>this.showInfo(node)}>\n                    {sender.getName()}\n                 </button>;\n      }\n\n      let receiver = item.getReceiver();\n      if (receiver.getName){\n        let node = receiver;\n        receiver = <button href=\"#\" onClick={()=>this.showInfo(node)}>\n                     {receiver.getName()}\n                   </button>;\n      }\n\n      newdata.text = <span>Message from {sender} to {receiver}</span>;\n      newdata.image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/SS_Great_Britain_transverse_section.jpg/320px-SS_Great_Britain_transverse_section.jpg\";\n    }\n\n    this.setState({infobox_data:newdata,\n                   isInfoPaneOpen:true});\n  }\n\n  slotClicked(id){\n    if (!id){\n      this.setState({infobox_data:this.state.default_data});\n      return;\n    }\n\n    const social = this.state.social;\n\n    const item = social.get(id);\n\n    this.showInfo(item);\n  }\n\n  render(){\n    let data = this.state.infobox_data;\n    let node_filter = this.state.node_filter;\n    let group_filter = this.state.group_filter;\n\n    let filter_text = null;\n\n    if (node_filter){\n      filter_text = `${node_filter}`;\n    }\n\n    if (group_filter){\n      let text = `${group_filter}`;\n      if (filter_text){\n        filter_text = `${filter_text} and ${text}`;\n      }\n      else{\n        filter_text = text;\n      }\n    }\n\n    if (filter_text){\n      filter_text = `Filtered by ${filter_text}.`;\n    }\n\n    return (\n      <div ref={ref => this.el = ref}\n           style={{position:\"absolute\", \"left\": 0, \"bottom\": 0}}>\n        <SlidingPane\n          isOpen={ this.state.isInfoPaneOpen }\n          from=\"right\"\n          title='Information'\n          width=\"300px\"\n          onRequestClose={()=>{this.setState({ isInfoPaneOpen: false });} }>\n          <InfoBox title={data.title} text={data.text}\n                   image={data.image} />\n        </SlidingPane>\n        <SlidingPane\n          isOpen={ this.state.isTimeLinePaneOpen }\n          title='Timeline'\n          from='bottom'\n          width=\"100%\"\n          onRequestClose={() => this.setState({isTimeLinePaneOpen: false})}>\n          {this.state.timeline.render()}\n        </SlidingPane>\n        <Container>\n          <Row>\n            <Col>\n              <span>\n                <button onClick={() => this.setState({ isInfoPaneOpen: true })}>\n                  Info\n                </button> | <button onClick={ () => this.setState({ isTimeLinePaneOpen: true }) }>\n                  Timeline\n                </button> | <button onClick={ () => this.resetFilters() }>\n                  Reset Filters\n                </button>\n              </span>\n              <span style={{position:\"absolute\", \"right\": 0}}>\n                {filter_text} See the\n                source <a href=\"https://github.com/chryswoods/brunel\">\n                on GitHub</a>\n              </span>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <SocialGraph graph={this.state.graph}\n                           emitClicked={(id)=>this.slotClicked(id)}\n                           anchor={this.state.anchor} />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n};\n\nexport default SocialApp;\n"],"sourceRoot":""}