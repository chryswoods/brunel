{"version":3,"sources":["version7/SocialGraph.js","version7/InfoBox.js","version7/Person.js","version7/Errors.js","version7/People.js","version7/Business.js","version7/Businesses.js","version7/Message.js","version7/Messages.js","version7/Position.js","version7/Positions.js","version7/Affiliation.js","version7/Affiliations.js","version7/Source.js","version7/Sources.js","version7/Note.js","version7/Notes.js","version7/DateRange.js","version7/Social.js","version7/SocialApp.js"],"names":["fast_physics","enabled","timestep","slow_physics","options","height","width","layout","randomSeed","manipulation","initiallyActive","interaction","navigationButtons","edges","shadow","smooth","type","roundness","physics","SocialGraph","props","state","network","params","getClickedData","this","graph","data","nodes","length","node","get","title","JSON","stringify","edge","view_position","getViewPosition","view_scale","getScale","setOptions","positions","getPositions","filters","filter","Math","floor","random","nodesView","vis","DataView","group","edgesView","setData","Object","entries","key","value","moveNode","x","y","moveTo","position","scale","setTimeout","events","click","handleClick","getNetwork","setState","className","onClick","React","Component","InfoBox","Card","body","outline","color","style","CardHeader","align","CardImg","top","src","image","CardBody","CardText","text","val","def","Person","titles","firstnames","surnames","suffixes","id","affiliations","projects","sources","scores","alive","gender","notes","_getHook","hook","getName","join","parts","part","getTitle","push","getFirstName","getSurname","getSuffix","result","getStart","getEnd","is_anchor","getID","label","shape","weight","keys","sort","unDry","Dry","registerClass","KeyError","args","Error","captureStackTrace","MissingError","_generate_person_uid","uid","uuidv4","substring","People","registry","load","_updateHooks","name","search","person","anchor","DataSet","add","getNode","array","forEach","element","people","Business","_generate_business_uid","Businesses","business","businesses","Message","date","sender","receiver","from","to","size","_generate_message_uid","Messages","message","toEdge","messages","Position","_generate_position_uid","Positions","Affiliation","_generate_affiliation_uid","Affiliations","affiliation","Source","_generate_source_uid","Sources","source","Note","getText","_generate_note_uid","Notes","note","DateRange","start","end","Social","getHook","getPeople","find","getNodes","getBusinesses","getMessages","getEdges","getAffiliations","getSources","getNotes","social","SocialApp","parse","graph_data","console","log","default_data","infobox_data","getGraph","newdata","Container","Row","Col","setInfoBoxData","xs","href"],"mappings":"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","file":"static/js/11.206d5c53.chunk.js","sourcesContent":["import React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport vis from \"vis-network\";\n\nconst fast_physics = {\n  enabled: true,\n  timestep: 0.5,\n};\n\nconst slow_physics = {...fast_physics};\nslow_physics.timestep = 0.1;\n\nconst options = {\n  height: \"600px\",\n  width: \"100%\",\n  layout:{\n    randomSeed: 42,\n  },\n  manipulation:{\n    enabled: false,\n    initiallyActive: false,\n  },\n  interaction:{\n    navigationButtons: true,\n  },\n  edges:{\n    shadow: false,\n    smooth: {\n      enabled: true,\n      type: \"continuous\",\n      roundness: 0.3,\n    },\n    width: 0.5,\n  },\n  physics: fast_physics,\n};\n\nclass SocialGraph extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      network: {},\n    };\n  }\n\n  handleClick(params) {\n    let getClickedData = this.props.getClickedData;\n\n    if (getClickedData)\n    {\n      let graph = this.props.graph;\n\n      let data = {};\n\n      if (params.nodes.length > 0)\n      {\n        let node = graph.nodes.get(params.nodes[0]);\n        data[\"title\"] = node.title;\n        data[\"text\"] = JSON.stringify(node);\n        data[\"image\"] = \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Illustrirte_Zeitung_%281843%29_21_332_1_Das_vom_Stapellaufen_des_Great-Britain.PNG/640px-Illustrirte_Zeitung_%281843%29_21_332_1_Das_vom_Stapellaufen_des_Great-Britain.PNG\";\n      }\n      else if (params.edges.length > 0)\n      {\n        let edge = graph.edges.get(params.edges[0]);\n        data[\"title\"] = \"EDGE\";\n        data[\"text\"] = JSON.stringify(edge);\n        data[\"image\"] = \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/SS_Great_Britain_transverse_section.jpg/320px-SS_Great_Britain_transverse_section.jpg\";\n      }\n\n      getClickedData(data);\n    }\n  }\n\n  onClick(){\n    let network = this.state.network;\n    let graph = this.props.graph;\n\n    const view_position = network.getViewPosition();\n    const view_scale = network.getScale();\n\n    network.setOptions( { physics: false } );\n\n    let positions = network.getPositions();\n\n    let data = {};\n\n    let filters = [\"director\", \"investor\", \"unknown\", null];\n\n    var filter = filters[Math.floor(Math.random() * filters.length)];\n\n    const nodesFilter = node => {\n      if (node.group === \"brunel\"){ return true;}\n      if (filter){\n        return node.group === filter;\n      }\n      else{\n        return true;\n      }\n    };\n\n    const edgesFilter = edge => {\n      return true;\n    };\n\n    const nodesView = new vis.DataView(graph.nodes, { filter:nodesFilter} );\n    const edgesView = new vis.DataView(graph.edges, { filter:edgesFilter} );\n\n    if (nodesView.length > 0){\n      data[\"nodes\"] = nodesView.get();\n    }\n    else{\n      data[\"nodes\"] = [];\n    }\n\n    if (edgesView.length > 0){\n      data[\"edges\"] = edgesView.get();\n    }\n    else {\n      data[\"edges\"] = [];\n    }\n\n    network.setData(data);\n\n    for (const [key, value] of Object.entries(positions))\n    {\n      network.moveNode(key, value.x, value.y);\n    }\n\n    network.moveTo({position:view_position, scale:view_scale});\n\n    setTimeout(function()\n               {network.setOptions({physics: slow_physics})}, 100 );\n\n    setTimeout(function()\n               {network.setOptions({physics: fast_physics})}, 350 );\n  }\n\n  render(){\n    let graph = this.props.graph;\n\n    if (graph){\n      let events = {click: (params) => {this.handleClick(params)}};\n\n      return (<div>\n              <Graph graph={{nodes:graph.nodes.get(),\n                             edges:graph.edges.get()}}\n                     options={options}\n                     events={events}\n                     getNetwork={network =>\n                                  this.setState({network:network})} />\n              <button className='graph-buttton'\n                      onClick={() => {this.onClick()}}>\n                Click Me! Hello\n              </button>\n            </div>);\n    }\n    else{\n      return (<div>No data to display!!!</div>);\n    }\n  }\n};\n\nexport default SocialGraph;\n","import React from \"react\";\nimport { Card, CardText, CardHeader, CardBody, CardImg } from 'reactstrap';\n\nfunction InfoBox(props) {\n  return (\n    <Card body outline color=\"secondary\" style={{height:\"600px\"}}>\n        <CardHeader align=\"center\">{props.title}</CardHeader>\n        <CardImg top width=\"100%\" src={props.image} />\n        <CardBody>\n        <CardText>\n            {props.text}\n        </CardText>\n        </CardBody>\n    </Card>\n  );\n};\n\nexport default InfoBox;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Person {\n  constructor(props){\n    this.state = {\n      titles: [],\n      firstnames: [],\n      surnames: [],\n      suffixes: [],\n      id: null,\n      positions: {},\n      affiliations: {},\n      projects: {},\n      sources: [],\n      scores: {},\n      alive: null,\n      gender: null,\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.titles = setState(state.titles);\n      this.state.firstnames = setState(state.firstnames);\n      this.state.surnames = setState(state.surnames);\n      this.state.suffixes = setState(state.suffixes);\n      this.state.id = setState(state.id);\n      this.state.positions = setState(state.positions, {});\n      this.state.affiliations = setState(state.affiliations, {});\n      this.state.projects = setState(state.projects, {});\n      this.state.sources = setState(state.sources, []);\n      this.state.alive = setState(state.alive);\n      this.state.gender = setState(state.gender);\n      this.state.scores = setState(state.scores, {});\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Person(${this.getName()})`;\n  }\n\n  getFirstName(){\n    if (this.state.firstnames){\n      return this.state.firstnames.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getTitle(){\n    if (this.state.titles){\n      return this.state.titles.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getSurname(){\n    if (this.state.surnames){\n      return this.state.surnames.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getSuffix(){\n    if (this.state.suffixes){\n      return this.state.suffixes.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getName(){\n    var parts = [];\n\n    let part = this.getTitle();\n    if (part){\n      parts.push(part);\n    }\n\n    part = this.getFirstName();\n    if (part){\n      parts.push(part);\n    }\n\n    part = this.getSurname();\n    if (part){\n      parts.push(part);\n    }\n\n    part = this.getSuffix();\n    if (part){\n      parts.push(part);\n    }\n\n    if (parts.length > 0){\n       return parts.join(\" \");\n    }\n    else{\n      return \"null\";\n    }\n  }\n\n  getPositions(){\n    let result = [];\n\n    for (let [key, value] in Object.entries(this.state.positions)){\n      result.push( [this._getHook(key), value] );\n    }\n\n    return result;\n  }\n\n  getAffiliations(){\n    let result = [];\n\n    for (let [key, value] in Object.entries(this.state.affiliations)){\n      result.push( [this._getHook(key), value] );\n    }\n\n    return result;\n  }\n\n  getScores(){\n    return this.state.scores;\n  }\n\n  getBorn(){\n    if (this.state.alive){\n      return this.state.alive.getStart();\n    }\n    else{\n      return null;\n    }\n  }\n\n  getDied(){\n    if (this.state.alive){\n      return this.state.alive.getEnd();\n    }\n    else{\n      return null;\n    }\n  }\n\n  getNode(is_anchor=false){\n    let node = {id: this.getID(),\n                label: this.getName(),\n                title: this.getName(),\n                shape: \"dot\",\n               };\n\n    let weight = 10.0;\n\n    if (this.state.scores){\n      weight = this.state.scores.weight;\n      if (!weight){\n        weight = 10.0;\n      }\n    }\n\n    if (weight < 5.0){\n      weight = 5.0;\n    }\n    else if (weight > 20.0){\n      weight = 20.0;\n    }\n\n    node[\"size\"] = weight;\n\n    let keys = Object.keys(this.state.affiliations);\n\n    if (keys.length > 0){\n      node[\"group\"] = keys.sort().join(\":\");\n    }\n    else{\n      node[\"group\"] = \"unknown\";\n    }\n\n    if (is_anchor){\n      node[\"shape\"] = \"star\";\n      node[\"physics\"] = false;\n      node[\"group\"] = \"anchor\";\n      node[\"size\"] = 20.0;\n    }\n\n    return node;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPerson.unDry = function(value){\n  return new Person(value);\n}\n\nDry.registerClass(Person);\n\nexport default Person;\n","\nclass KeyError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, KeyError)\n    }\n}\n\nclass ValueError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, ValueError)\n    }\n}\n\nclass DuplicateError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, DuplicateError)\n    }\n}\n\nclass MissingError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, MissingError)\n    }\n}\n\nexport {KeyError, ValueError, DuplicateError, MissingError};\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\nimport vis from \"vis-network\";\n\nimport Person from \"./Person\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_person_uid(){\n  let uid = uuidv4();\n  return \"P\" + uid.substring(uid.length-7);\n}\n\nclass People {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n\n    this._getHook = null;\n\n    this.load(props);\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  find(name){\n    for (let key in this.state.registry){\n      let person = this.state.registry[key];\n      if (person.getName().search(name) !== -1){\n        return key;\n      }\n    }\n\n    return null;\n  }\n\n  add(person){\n    if (!(person instanceof Person)){ return;}\n\n    let id = person.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Person ID ${person}`);\n      }\n\n      this.state.registry[id] = person;\n    }\n    else{\n      let uid = _generate_person_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_person_uid();\n      }\n\n      person.state.id = uid;\n      this.state.registry[uid] = person;\n    }\n  }\n\n  getNodes(anchor=null){\n    let nodes = new vis.DataSet();\n\n    for (let person in this.state.registry){\n      if (person === anchor){\n        nodes.add(this.state.registry[person].getNode({is_anchor:true}));\n      }\n      else{\n        nodes.add(this.state.registry[person].getNode());\n      }\n    }\n\n    return nodes;\n  }\n\n  get(id){\n    let person = this.state.registry[id];\n\n    if (person === null){\n      throw MissingError(`No Person with ID ${id}`);\n    }\n\n    return person;\n  }\n\n  load(data){\n    if (data){\n      if (data.array){ data = data.array; }\n      data.forEach(element => {\n        let person = Person.load(element);\n        this.add(person);\n      });\n    }\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPeople.unDry = function(value){\n  let people = new People();\n  people.state = value;\n  return people;\n}\n\nDry.registerClass(People);\n\nexport default People;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Business {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      projects: {},\n      sources: [],\n      scores: {},\n      affiliations: {},\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.affiliations = setState(state.affiliations, {});\n      this.state.projects = setState(state.projects, {});\n      this.state.sources = setState(state.sources, []);\n      this.state.scores = setState(state.scores, {});\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Business(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  getAffiliations(){\n    let result = [];\n\n    for (let [key, value] in Object.entries(this.state.affiliations)){\n      result.push( [this._getHook(key), value] );\n    }\n\n    return result;\n  }\n\n  getScores(){\n    return this.state.scores;\n  }\n\n  getNode(){\n    let node = {\n      id: this.getID(),\n      label: this.getName(),\n      title: this.getName(),\n      shape: \"dot\",\n     };\n\n    let weight = 1.0;\n\n    if (this.state.scores){\n      weight = this.state.scores.weight;\n      if (!weight){\n        weight = 1.0;\n      }\n    }\n\n    if (weight < 5.0){\n      weight = 5.0;\n    }\n    else if (weight > 20.0){\n      weight = 20.0;\n    }\n\n    node[\"size\"] = weight;\n\n    let keys = Object.keys(this.state.affiliations);\n\n    if (keys.length > 0){\n      node[\"group\"] = keys.sort().join(\":\");\n    }\n\n    return node;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nBusiness.unDry = function(value){\n  return new Business(value);\n}\n\nDry.registerClass(Business);\n\nexport default Business;\n","\nimport Dry from 'json-dry';\nimport vis from 'vis-network';\nimport uuidv4 from 'uuid';\n\nimport Business from \"./Business\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_business_uid(){\n  let uid = uuidv4();\n  return \"B\" + uid.substring(uid.length-7);\n}\n\nclass Businesses {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(business){\n    if (!(business instanceof Business)){ return;}\n\n    let id = business.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Business ID ${Business}`);\n      }\n\n      this.state.registry[id] = business;\n    }\n    else{\n      let uid = _generate_business_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_business_uid();\n      }\n\n      business.state.id = uid;\n      this.state.registry[uid] = business;\n    }\n  }\n\n  get(id){\n    let business = this.state.registry[id];\n\n    if (business === null){\n      throw MissingError(`No Business with ID ${id}`);\n    }\n\n    return business;\n  }\n\n  getNodes(){\n    let nodes = new vis.DataSet();\n\n    for (let business in this.state.registry){\n      nodes.add(this.state.registry[business].getNode());\n    }\n\n    return nodes;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nBusinesses.unDry = function(value){\n  let businesses = new Businesses();\n  businesses.state = value;\n  return businesses;\n}\n\nDry.registerClass(Businesses);\n\nexport default Businesses;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Message {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      date: null,\n      sender: null,\n      receiver: null,\n      scores: {},\n    };\n\n    this.setState(props);\n    this._getHook = null;\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.date = setState(state.date);\n      this.state.sender = setState(state.sender);\n      this.state.receiver = setState(state.receiver);\n      this.state.scores = setState(state.scores, {});\n    }\n  }\n\n  toString(){\n    return `Message(name=${this.state.name} ` +\n           `${this.state.sender}=>${this.state.receiver})`;\n  }\n\n  toEdge(){\n    let weight = 1.0;\n\n    if (this.state.scores){\n      weight = this.state.scores.weight;\n\n      if (!weight){\n        weight = 1.0;\n      }\n    }\n\n    let color = 'red';\n\n    if (weight > 10.0){\n      weight = 10.0;\n    }\n    else if (weight >= 4){\n      color = 'black';\n    }\n    else if (weight > 1.0){\n      color = 'gray';\n    }\n    else{\n      color = 'gray';\n      weight = 1.0;\n    }\n\n    let edge = {\n      id:this.getID(),\n      from:this.state.sender,\n      to:this.state.receiver,\n      size:weight,\n      color:color,\n    };\n\n    return edge;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nMessage.unDry = function(value){\n  return new Message(value);\n}\n\nMessage.load = function(data, people=null){\n  return new Message({name: data.name});\n}\n\nDry.registerClass(Message);\n\nexport default Message;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\nimport vis from \"vis-network\";\n\nimport Message from \"./Message\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_message_uid(){\n  let uid = uuidv4();\n  return \"M\" + uid.substring(uid.length-7);\n}\n\nclass Messages {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(message){\n    if (!(message instanceof Message)){ return;}\n\n    let id = message.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Message ID ${message}`);\n      }\n\n      this.state.registry[id] = message;\n    }\n    else{\n      let uid = _generate_message_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_message_uid();\n      }\n\n      message.state.id = uid;\n      this.state.registry[uid] = message;\n    }\n  }\n\n  get(id){\n    let message = this.state.registry[id];\n\n    if (message === null){\n      throw MissingError(`No Message with ID ${id}`);\n    }\n\n    return message;\n  }\n\n  getEdges(){\n    let edges = new vis.DataSet();\n\n    for (let key in this.state.registry){\n      let message = this.state.registry[key];\n      edges.add(message.toEdge());\n    }\n\n    return edges;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nMessages.unDry = function(value){\n  let messages = new Messages();\n  messages.state = value;\n  return messages;\n}\n\nDry.registerClass(Messages);\n\nexport default Messages;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Position {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      sources: [],\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.sources = setState(state.sources, []);\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Position(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPosition.unDry = function(value){\n  return new Position(value);\n}\n\nDry.registerClass(Position);\n\nexport default Position;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Position from \"./Position\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_position_uid(){\n  let uid = uuidv4();\n  return \"Q\" + uid.substring(uid.length-7);\n}\n\nclass Positions {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(position){\n    if (!(position instanceof Position)){ return;}\n\n    let id = position.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Position ID ${position}`);\n      }\n\n      this.state.registry[id] = position;\n    }\n    else{\n      let uid = _generate_position_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_position_uid();\n      }\n\n      position.state.id = uid;\n      this.state.registry[uid] = position;\n    }\n  }\n\n  get(id){\n    let position = this.state.registry[id];\n\n    if (position === null){\n      throw MissingError(`No Position with ID ${id}`);\n    }\n\n    return position;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nPositions.unDry = function(value){\n  let positions = new Positions();\n  positions.state = value;\n  return positions;\n}\n\nDry.registerClass(Positions);\n\nexport default Positions;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Affiliation {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      sources: [],\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.sources = setState(state.sources, []);\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Affiliation(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nAffiliation.unDry = function(value){\n  return new Affiliation(value);\n}\n\nDry.registerClass(Affiliation);\n\nexport default Affiliation;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Affiliation from \"./Affiliation\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_affiliation_uid(){\n  let uid = uuidv4();\n  return \"A\" + uid.substring(uid.length-7);\n}\n\nclass Affiliations {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(affiliation){\n    if (!(affiliation instanceof Affiliation)){ return;}\n\n    let id = affiliation.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Affiliation ID ${affiliation}`);\n      }\n\n      this.state.registry[id] = affiliation;\n    }\n    else{\n      let uid = _generate_affiliation_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_affiliation_uid();\n      }\n\n      affiliation.state.id = uid;\n      this.state.registry[uid] = affiliation;\n    }\n  }\n\n  get(id){\n    let affiliation = this.state.registry[id];\n\n    if (affiliation === null){\n      throw MissingError(`No Affiliation with ID ${id}`);\n    }\n\n    return affiliation;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nAffiliations.unDry = function(value){\n  let affiliations = new Affiliations();\n  affiliations.state = value;\n  return affiliations;\n}\n\nDry.registerClass(Affiliations);\n\nexport default Affiliations;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Source {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Source(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nSource.unDry = function(value){\n  return new Source(value);\n}\n\nDry.registerClass(Source);\n\nexport default Source;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Source from \"./Source\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_source_uid(){\n  let uid = uuidv4();\n  return \"S\" + uid.substring(uid.length-7);\n}\n\nclass Sources {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(source){\n    if (!(source instanceof Source)){ return;}\n\n    let id = source.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Source ID ${source}`);\n      }\n\n      this.state.registry[id] = source;\n    }\n    else{\n      let uid = _generate_source_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_source_uid();\n      }\n\n      source.state.id = uid;\n      this.state.registry[uid] = source;\n    }\n  }\n\n  get(id){\n    let source = this.state.registry[id];\n\n    if (source === null){\n      throw MissingError(`No Source with ID ${id}`);\n    }\n\n    return source;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nSources.unDry = function(value){\n  let sources = new Sources();\n  sources.state = value;\n  return sources;\n}\n\nDry.registerClass(Sources);\n\nexport default Sources;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Note {\n  constructor(props){\n    this.state = {\n      text: null,\n      id: null,\n      sources: [],\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.text = setState(state.text);\n      this.state.id = setState(state.id);\n      this.state.sources = setState(state.sources, []);\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Note(${this.getText()})`;\n  }\n\n  getText(){\n    return this.state.text;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nNote.unDry = function(value){\n  return new Note(value);\n}\n\nDry.registerClass(Note);\n\nexport default Note;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Note from \"./Note\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_note_uid(){\n  let uid = uuidv4();\n  return \"N\" + uid.substring(uid.length-7);\n}\n\nclass Notes {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(note){\n    if (!(note instanceof Note)){ return;}\n\n    let id = note.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Note ID ${note}`);\n      }\n\n      this.state.registry[id] = note;\n    }\n    else{\n      let uid = _generate_note_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_note_uid();\n      }\n\n      note.state.id = uid;\n      this.state.registry[uid] = note;\n    }\n  }\n\n  get(id){\n    let note = this.state.registry[id];\n\n    if (note === null){\n      throw MissingError(`No Note with ID ${id}`);\n    }\n\n    return note;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nNotes.unDry = function(value){\n  let notes = new Notes();\n  notes.state.registry = value;\n  return notes;\n}\n\nDry.registerClass(Notes);\n\nexport default Notes;\n","\nimport Dry from 'json-dry';\n\nfunction setState(val, def=null){\n    if (val){\n      return val;\n    } else {\n      return def;\n    }\n  }\n\nclass DateRange{\n  constructor(value){\n    this.state = {\n      start: null,\n      end: null\n    }\n\n    this.setState(value);\n  }\n\n  setState(state){\n    if (state){\n      if (state === \"null\"){ return; }\n      this.state.start = setState(state.start);\n      this.state.end = setState(state.end);\n    }\n  }\n\n  toDry(){\n    return this.state;\n  }\n}\n\nDateRange.unDry = function(value){\n  return new DateRange(value);\n}\n\nDry.registerClass(DateRange);\n\nexport default DateRange;\n","\nimport Dry from 'json-dry';\nimport People from './People';\nimport Businesses from './Businesses';\nimport Messages from './Messages';\nimport Positions from './Positions';\nimport Affiliations from './Affiliations';\nimport Sources from './Sources';\nimport Notes from './Notes';\nimport DateRange from './DateRange';\n\nclass Social {\n    constructor(props){\n        this.state = props;\n    }\n\n    _updateHooks(){\n        let getHook = (id)=>{return this.get(id);};\n\n        let state = {};\n\n        if (!(this.state.people instanceof People)){\n           state.people = new People();\n        }\n        else{\n            state.people = this.state.people;\n        }\n\n        if (!(this.state.businesses instanceof Businesses)){\n            state.businesses = new Businesses();\n        }\n        else{\n            state.businesses = this.state.businesses;\n        }\n\n        if (!(this.state.messages instanceof Messages)){\n            state.messages = new Messages();\n        }else{\n            state.messages = this.state.messages;\n        }\n\n        if (!(this.state.positions instanceof Positions)){\n            state.positions = new Positions();\n        }\n        else{\n            state.positions = this.state.positions;\n        }\n\n        if (!(this.state.affiliations instanceof Affiliations)){\n            state.affiliations = new Affiliations();\n        }\n        else{\n            state.affiliations = this.state.affiliations;\n        }\n\n        if (!(this.state.sources instanceof Sources)){\n            state.sources = new Sources();\n        }\n        else{\n            state.sources = this.state.sources;\n        }\n\n        if (!(this.state.notes instanceof Notes)){\n            state.notes = new Notes();\n        }\n        else{\n            state.notes = this.state.notes;\n        }\n\n        this.state = state;\n\n        for (let key in this.state){\n          this.state[key]._updateHooks(getHook);\n        }\n    }\n\n    getPeople(){\n        return this.state.people;\n    }\n\n    getBusinesses(){\n        return this.state.businesses;\n    }\n\n    getMessages(){\n        return this.state.messages;\n    }\n\n    getAffiliations(){\n        return this.state.affiliations;\n    }\n\n    getPositions(){\n        return this.state.positions;\n    }\n\n    getSources(){\n      return this.state.sources;\n    }\n\n    getNotes(){\n      return this.state.notes;\n    }\n\n    getGraph(){\n      let anchor = this.getPeople().find(\"Brunel\");\n\n      let nodes = this.getPeople().getNodes(anchor);\n      nodes.add(this.getBusinesses().getNodes().get());\n\n      let edges = this.getMessages().getEdges();\n\n      return {\"nodes\": nodes, \"edges\": edges};\n    }\n\n    get(id){\n        if (id[0] === \"M\"){\n            return this.getMessages().get(id);\n        }\n        else if (id[0] === \"P\"){\n            return this.getPeople().get(id);\n        }\n        else if (id[0] === \"B\"){\n            return this.getBusinesses().get(id);\n        }\n        else if (id[0] === \"Q\"){\n            return this.getPositions().get(id);\n        }\n        else if (id[0] === \"A\"){\n            return this.getAffiliations().get(id);\n        }\n        else if (id[0] === \"S\"){\n            return this.getSources().get(id);\n        }\n        else if (id[0] === \"N\"){\n            return this.getNotes().get(id);\n        }\n        else {\n            return id;\n        }\n    }\n\n    toDry(){\n        return {value: this.state};\n    }\n}\n\nSocial.unDry = function(value){\n    let social = new Social();\n    social.state = value;\n    social._updateHooks();\n\n    return social;\n}\n\nDry.registerClass(Social);\n\nexport default Social;\n","import React from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\n\nimport Dry from 'json-dry';\nimport SocialGraph from \"./SocialGraph\";\nimport InfoBox from \"./InfoBox\";\n\nimport graph_data from './data.json';\nimport Social from './Social';\n\nDry.registerClass(Social);\n\nclass SocialApp extends React.Component {\n  constructor(props){\n    super(props);\n\n    let title = \"Isambard's Social Network\";\n    let image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Robert_Howlett_-_Isambard_Kingdom_Brunel_and_the_launching_chains_of_the_Great_Eastern_-_Google_Art_Project.jpg/256px-Robert_Howlett_-_Isambard_Kingdom_Brunel_and_the_launching_chains_of_the_Great_Eastern_-_Google_Art_Project.jpg\";\n    let text = \"This is an interactive viewer of Isambard Kingdom Brunel's social network. Please click on the nodes and have fun!\";\n\n    let social = Dry.parse(graph_data);\n    if (!(social instanceof Social )){\n      console.log(\"Could not parse!\");\n      console.log(social);\n      social = new Social();\n    }\n\n    console.log(social);\n\n    this.state = {\n      default_data: {\"title\": title, \"image\": image, \"text\": text},\n      infobox_data: {\"title\": title, \"image\": image, \"text\": text},\n      social: social,\n      graph: social.getGraph(),\n    };\n  }\n\n  setInfoBoxData(data){\n    let newdata = {...this.state.default_data};\n\n    if (data.text)\n    {\n      newdata.text = data.text;\n    }\n\n    if (data.image)\n    {\n      newdata.image = data.image;\n    }\n\n    if (data.title)\n    {\n      newdata.title = data.title;\n    }\n\n    this.setState({infobox_data:newdata});\n  }\n\n  render(){\n    let data = this.state.infobox_data;\n\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <SocialGraph graph={this.state.graph}\n                           getClickedData={(data)=>this.setInfoBoxData(data)} />\n            </Col>\n            <Col xs=\"4\">\n              <InfoBox title={data.title}\n                       image={data.image}\n                       text={data.text} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <p align=\"center\">\n                See the source <a href=\"https://github.com/chryswoods/brunel\">on GitHub</a>\n              </p>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n};\n\nexport default SocialApp;\n"],"sourceRoot":""}