{"version":3,"sources":["version2/MultiGraph.js","version2/GraphLoader.js"],"names":["MultiGraph","props","graphs","current_graph","slow_physics","fast_physics","this","length","view_position","Network","getViewPosition","view_scale","getScale","setOptions","physics","positions","getPositions","setData","Object","entries","key","value","moveNode","x","y","moveTo","position","scale","setTimeout","bind","className","onClick","Graph","people","nodes","id","label","title","edges","from","to","dashes","color","smooth","width","enabled","barnesHut","gravitationalConstant","centralGravity","springLength","springConstant","damping","avoidOverlap","maxVelocity","minVelocity","solver","stabilization","iterations","updateInterval","onlyDynamicEdges","fit","timestep","adaptiveTimestep","options","height","layout","randomSeed","manipulation","initiallyActive","interaction","navigationButtons","shadow","type","roundness","events","select","event","console","log","GraphLoader","graph","getNetwork","network"],"mappings":"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","file":"static/js/5.ee7d3287.chunk.js","sourcesContent":["import React from \"react\";\nimport Graph from \"react-graph-vis\";\n\nclass MultiGraph extends Graph {\n  constructor(props) {\n    super(props);\n    this.graphs = props.graphs;\n    this.current_graph = 0;\n    this.slow_physics = props.slow_physics;\n    this.fast_physics = props.fast_physics;\n  }\n\n  onClick(){\n    let current_graph = this.current_graph;\n    let graphs = this.graphs;\n\n    current_graph += 1;\n\n    if (current_graph > graphs.length-1)\n    {\n      current_graph = 0;\n    }\n\n    const view_position = this.Network.getViewPosition();\n    const view_scale = this.Network.getScale();\n\n    this.Network.setOptions( { physics: false } );\n\n    let positions = this.Network.getPositions();\n\n    this.Network.setData(graphs[current_graph]);\n\n    for (const [key, value] of Object.entries(positions))\n    {\n      this.Network.moveNode(key, value.x, value.y);\n    }\n\n    this.Network.moveTo({position:view_position, scale:view_scale});\n\n    setTimeout(function()\n               {\n                   this.Network.setOptions({physics: this.slow_physics})\n               }.bind(this), 100 );\n\n    setTimeout(function()\n               {\n                 this.Network.setOptions({physics: this.fast_physics})\n               }.bind(this), 350 );\n\n    this.current_graph = current_graph;\n }\n\n  render(){\n    return (<div>\n              <button className='graph-buttton'\n                      onClick={() => {this.onClick()}}>\n                Click Me!\n              </button>\n              {super.render()}\n            </div>);\n  }\n};\n\nexport default MultiGraph;\n","import React from \"react\";\nimport MultiGraph from \"./MultiGraph\";\n\nconst people = [\"John\", \"James\", \"Jane\", \"Janet\", \"Jason\"];\n\nconst graphs = [\n  {\n    nodes: [\n      { id: people[0], label: people[0], title: \"{people[0]} tootip text\" },\n      { id: people[1], label: people[1], title: \"node 2 tootip text\" },\n      { id: people[2], label: people[2], title: \"node 3 tootip text\" },\n      { id: people[3], label: people[3], title: \"node 4 tootip text\" },\n      { id: people[4], label: people[4], title: \"node 5 tootip text\" }\n    ],\n    edges: [\n      { from: people[0], to: people[1] },\n      { from: people[1], to: people[2] },\n      { from: people[2], to: people[3] },\n      { from: people[3], to: people[4] }\n    ]\n  },\n  {\n    nodes: [\n      { id: people[0], label: people[0], title: \"node 1 tootip text\" },\n      { id: people[1], label: people[1], title: \"node 2 tootip text\" },\n      { id: people[2], label: people[2], title: \"node 2 tootip text\" },\n      { id: people[3], label: people[3], title: \"node 2 tootip text\" },\n      { id: people[4], label: people[4], title: \"node 2 tootip text\" },\n    ],\n    edges: [\n      { from: people[0], to: people[3] },\n      { from: people[2], to: people[4] },\n      { from: people[1], to: people[2] }\n    ]\n  },\n  {\n    nodes: [\n      { id: people[0], label: people[0], title: \"node 1 tootip text\" },\n      { id: people[1], label: people[1], title: \"node 1 tootip text\" },\n      { id: people[2], label: people[2], title: \"node 1 tootip text\" },\n      { id: people[3], label: people[3], title: \"node 1 tootip text\" },\n      { id: people[4], label: people[4], title: \"node 1 tootip text\" },\n    ],\n    edges: [\n      { from: people[0], to: people[3], dashes: true, color: \"red\", smooth: {\"type\": \"curvedCW\"}},\n      { from: people[3], to: people[0], width: 4.0, color: \"blue\", smooth: {\"type\": \"curvedCW\"}},\n      { from: people[0], to: people[4], dashes: true, color: \"red\" },\n      { from: people[1], to: people[2] }\n    ]\n  }\n];\n\nconst fast_physics = {\n  enabled: true,\n  barnesHut: {\n    gravitationalConstant: -50,\n    centralGravity: 0.0,\n    springLength: 50,\n    springConstant: 0.02,\n    damping: 0.2,\n    avoidOverlap: 0.5\n  },\n  maxVelocity: 30,\n  minVelocity: 0.2,\n  solver: 'barnesHut',\n  stabilization: {\n    enabled: true,\n    iterations: 100,\n    updateInterval: 10,\n    onlyDynamicEdges: false,\n    fit: true\n  },\n  timestep: 0.5,\n  adaptiveTimestep: true\n};\n\nconst slow_physics = {...fast_physics};\nslow_physics.timestep = 0.1;\n\nconst options = {\n  height: \"500px\",\n  width: \"100%\",\n  layout:{\n    randomSeed: 42,\n  },\n  manipulation:{\n    enabled: true,\n    initiallyActive: true,\n  },\n  interaction:{\n    navigationButtons: true,\n  },\n  edges:{\n    shadow: true,\n    smooth: {\n      enabled: true,\n      type: \"continuous\",\n      roundness: 0.3,\n    },\n    width: 0.5,\n  },\n  physics: fast_physics,\n};\n\nconst events = {\n  select: function(event) {\n    var { nodes, edges } = event;\n    console.log(nodes);\n    console.log(edges);\n  }\n};\n\nfunction GraphLoader(props){\n  return (\n    <MultiGraph\n      graph={graphs[0]}\n      graphs={graphs}\n      options={options}\n      events={events}\n      slow_physics={slow_physics}\n      fast_physics={fast_physics}\n      getNetwork={network => {\n        //  if you want access to vis.js network api you\n        //  can set the state in a parent component using\n        //  this property\n      }}\n    />\n  );\n}\n\nexport default GraphLoader;\n"],"sourceRoot":""}