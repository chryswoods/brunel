{"version":3,"sources":["index.js"],"names":["GraphLoader","lazy","rootElement","document","getElementById","ReactDOM","render","props","num_versions","length","routes","links","i","path","push","tag","Link","to","exact","component","useState","dropdownOpen","setOpen","fallback","isOpen","toggle","caret"],"mappings":"yOAYMA,G,kBAAc,CAClBC,gBAAK,kBAAM,sDACXA,gBAAK,kBAAM,sDACXA,gBAAK,kBAAM,sDACXA,gBAAK,kBAAM,sDACXA,gBAAK,kBAAM,sDACXA,gBAAK,kBAAM,8DACXA,gBAAK,kBAAM,gEA+Cb,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,mBA7ChB,SAAaC,GAMX,IALA,IAAIC,EAAeR,EAAYS,OAE3BC,EAAS,GACTC,EAAQ,GAEHC,EAAE,EAAGA,EAAEJ,IAAgBI,EAChC,CACE,IAAMC,EAAO,MAAQD,EAAE,GACvBD,EAAMG,KACJ,kBAAC,IAAD,CAAcC,IAAKC,IAAMC,GAAIJ,GAA7B,WAA4CD,EAAE,IAEhDF,EAAOI,KACL,kBAAC,IAAD,CAAOI,OAAK,EAACL,KAAMA,EAAMM,UAAWnB,EAAYY,MAbnC,MAiBeQ,oBAAS,GAjBxB,mBAiBVC,EAjBU,KAiBIC,EAjBJ,KAqBjB,OACE,kBAAC,IAAD,KACA,6BACE,kBAAC,WAAD,CAAUC,SAAU,4CAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOL,OAAK,EAACL,KAAK,IAAIM,UAAWnB,EAAYQ,EAAa,KACzDE,IAGL,kBAAC,IAAD,CAAgBc,OAAQH,EAAcI,OAX3B,kBAAMH,GAASD,KAYxB,kBAAC,IAAD,CAAgBK,OAAK,GAArB,qBAGA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcX,IAAKC,IAAMC,GAAG,KAA5B,UACCN,QASK,MAAST,I","file":"static/js/main.85657f63.chunk.js","sourcesContent":["\nimport { BrowserRouter as Router, Link,\n         Route, Switch } from 'react-router-dom';\nimport React, { Suspense, lazy, useState } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { ButtonDropdown, DropdownToggle,\n         DropdownMenu, DropdownItem } from 'reactstrap';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'vis-network/dist/vis-network.min.css';\nimport './index.css';\n\nconst GraphLoader = [\n  lazy(() => import('./version1/GraphLoader')),\n  lazy(() => import('./version2/GraphLoader')),\n  lazy(() => import('./version3/GraphLoader')),\n  lazy(() => import('./version4/GraphLoader')),\n  lazy(() => import('./version5/GraphLoader')),\n  lazy(() => import('./version6/SocialApp')),\n  lazy(() => import('./version7/SocialApp')),\n];\n\nfunction App(props){\n  var num_versions = GraphLoader.length;\n\n  var routes = []\n  var links = []\n\n  for (var i=0; i<num_versions; ++i)\n  {\n    const path = \"/v\" + (i+1);\n    links.push(\n      <DropdownItem tag={Link} to={path}>Version {i+1}</DropdownItem>\n    );\n    routes.push(\n      <Route exact path={path} component={GraphLoader[i]}/>\n    );\n  }\n\n  const [dropdownOpen, setOpen] = useState(false);\n\n  const toggle = () => setOpen(!dropdownOpen);\n\n  return (\n    <Router>\n    <div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n          <Route exact path=\"/\" component={GraphLoader[num_versions-1]}/>\n          {routes}\n        </Switch>\n      </Suspense>\n      <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}>\n        <DropdownToggle caret>\n          Choose version...\n        </DropdownToggle>\n        <DropdownMenu>\n          <DropdownItem tag={Link} to=\"/\">Latest</DropdownItem>\n          {links}\n        </DropdownMenu>\n      </ButtonDropdown>\n      </div>\n    </Router>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}