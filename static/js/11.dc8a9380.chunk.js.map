{"version":3,"sources":["version7/SocialGraph.js","version7/InfoBox.js","version7/Person.js","version7/Errors.js","version7/People.js","version7/Business.js","version7/Businesses.js","version7/Message.js","version7/Messages.js","version7/Position.js","version7/Positions.js","version7/Affiliation.js","version7/Affiliations.js","version7/Source.js","version7/Sources.js","version7/Note.js","version7/Notes.js","version7/DateRange.js","version7/Social.js","version7/SocialApp.js"],"names":["fast_physics","enabled","timestep","slow_physics","options","height","width","layout","randomSeed","manipulation","initiallyActive","interaction","navigationButtons","edges","shadow","smooth","type","roundness","physics","SocialGraph","props","state","network","params","emitClicked","this","graph","id","nodes","length","get","view_position","getViewPosition","view_scale","getScale","setOptions","positions","getPositions","data","filters","filter","Math","floor","random","nodesView","vis","DataView","node","group","edgesView","edge","setData","Object","entries","key","value","moveNode","x","y","moveTo","position","scale","setTimeout","events","click","handleClick","getNetwork","setState","React","Component","InfoBox","Card","body","outline","color","style","overflowY","CardHeader","align","title","CardImg","top","src","image","CardBody","text","val","def","Person","titles","firstnames","surnames","suffixes","affiliations","projects","sources","scores","alive","gender","notes","_getHook","hook","getName","join","parts","part","getTitle","push","getFirstName","getSurname","getSuffix","result","getStart","getEnd","is_anchor","getID","label","shape","weight","keys","sort","unDry","Dry","registerClass","KeyError","args","Error","captureStackTrace","MissingError","_generate_person_uid","uid","uuidv4","substring","People","registry","load","_updateHooks","name","search","person","anchor","group_filter","node_filter","DataSet","p","add","getNode","inGroup","array","forEach","element","people","Business","_generate_business_uid","Businesses","business","b","businesses","Message","date","sender","receiver","from","to","size","_generate_message_uid","Messages","message","item","connections","seen","n","n_id","toEdge","messages","Position","_generate_position_uid","Positions","Affiliation","_generate_affiliation_uid","Affiliations","affiliation","Source","_generate_source_uid","Sources","source","Note","getText","_generate_note_uid","Notes","note","DateRange","start","end","Social","getHook","getMessages","getConnectionsTo","getPeople","find","connection","getNodes","getBusinesses","getEdges","getAffiliations","getSources","getNotes","social","ConnectionList","listitems","map","i","href","onClick","GroupsList","groups","SocialApp","resetFilters","parse","graph_data","console","log","default_data","infobox_data","getGraph","person_filter","a","selectNode","selectGroup","showInfo","newdata","getBiography","getSender","getReceiver","filter_text","Container","Row","Col","slotClicked","xs"],"mappings":"grhIAIA,IAAMA,EAAe,CACnBC,SAAS,EACTC,SAAU,IAGNC,E,yWAAY,IAAOH,GACzBG,EAAaD,SAAW,GAExB,IAAME,EAAU,CACdC,OAAQ,QACRC,MAAO,OACPC,OAAO,CACLC,WAAY,IAEdC,aAAa,CACXR,SAAS,EACTS,iBAAiB,GAEnBC,YAAY,CACVC,mBAAmB,GAErBC,MAAM,CACJC,QAAQ,EACRC,OAAQ,CACNd,SAAS,EACTe,KAAM,aACNC,UAAW,IAEbX,MAAO,IAETY,QAASlB,GAyHImB,E,YArHb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,QAAS,IAJM,E,yEAQPC,GACV,IAAIC,EAAcC,KAAKL,MAAMI,YAE7B,GAAIA,EACJ,CACE,IAAIE,EAAQD,KAAKL,MAAMM,MAEnBC,EAAK,KAET,GAAIJ,EAAOK,MAAMC,OAAS,EAGxBF,EADWD,EAAME,MAAME,IAAIP,EAAOK,MAAM,IAC9BD,QAEP,GAAIJ,EAAOV,MAAMgB,OAAS,EAC/B,CAEEF,EADWD,EAAMb,MAAMiB,IAAIP,EAAOV,MAAM,IAC9Bc,GAGZH,EAAYG,M,gCAKd,IAAIL,EAAUG,KAAKJ,MAAMC,QACrBI,EAAQD,KAAKL,MAAMM,MAEjBK,EAAgBT,EAAQU,kBACxBC,EAAaX,EAAQY,WAE3BZ,EAAQa,WAAY,CAAEjB,SAAS,IAE/B,IAAIkB,EAAYd,EAAQe,eAEpBC,EAAO,GAEPC,EAAU,CAAC,WAAY,WAAY,UAAW,MAE9CC,EAASD,EAAQE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAQV,SAgBlDe,EAAY,IAAIC,UAAIC,SAASpB,EAAME,MAAO,CAAEY,OAd9B,SAAAO,GAClB,MAAmB,WAAfA,EAAKC,SACLR,GACKO,EAAKC,QAAUR,MAYpBS,EAAY,IAAIJ,UAAIC,SAASpB,EAAMb,MAAO,CAAE2B,OAL9B,SAAAU,GAClB,OAAO,KAMLN,EAAUf,OAAS,EACrBS,EAAI,MAAYM,EAAUd,MAG1BQ,EAAI,MAAY,GAGdW,EAAUpB,OAAS,EACrBS,EAAI,MAAYW,EAAUnB,MAG1BQ,EAAI,MAAY,GAGlBhB,EAAQ6B,QAAQb,GAEhB,cAA2Bc,OAAOC,QAAQjB,GAA1C,eACA,CAAC,IAAD,0BADYkB,EACZ,KADiBC,EACjB,KACEjC,EAAQkC,SAASF,EAAKC,EAAME,EAAGF,EAAMG,GAGvCpC,EAAQqC,OAAO,CAACC,SAAS7B,EAAe8B,MAAM5B,IAE9C6B,YAAW,WACCxC,EAAQa,WAAW,CAACjB,QAASf,MAAiB,KAE1D2D,YAAW,WACCxC,EAAQa,WAAW,CAACjB,QAASlB,MAAiB,O,+BAGnD,IAAD,OACF0B,EAAQD,KAAKL,MAAMM,MAEvB,GAAIA,EAAM,CACR,IAAIqC,EAAS,CAACC,MAAO,SAACzC,GAAY,EAAK0C,YAAY1C,KAEnD,OAAQ,6BACA,kBAAC,IAAD,CAAOG,MAAO,CAACE,MAAMF,EAAME,MAAME,MAClBjB,MAAMa,EAAMb,MAAMiB,OAC1B1B,QAASA,EACT2D,OAAQA,EACRG,WAAY,SAAA5C,GAAO,OACN,EAAK6C,SAAS,CAAC7C,QAAQA,QAInD,OAAQ,0D,GAjHY8C,IAAMC,W,oCCtBjBC,MAZf,SAAiBlD,GACf,OACE,kBAACmD,EAAA,EAAD,CAAMC,MAAI,EAACC,SAAO,EAACC,MAAM,YAAYC,MAAO,CAACtE,OAAO,QAASuE,UAAU,WACnE,kBAACC,EAAA,EAAD,CAAYC,MAAM,UAAU1D,EAAM2D,OAClC,kBAACC,EAAA,EAAD,CAASC,KAAG,EAAC3E,MAAM,OAAO4E,IAAK9D,EAAM+D,QACrC,kBAACC,EAAA,EAAD,KACChE,EAAMiE,Q,0BCNf,SAASlB,EAASmB,GAAe,IAAVC,EAAS,uDAAL,KACzB,OAAID,GAGKC,E,IAILC,E,WACJ,WAAYpE,GAAO,oBACjBK,KAAKJ,MAAQ,CACXoE,OAAQ,GACRC,WAAY,GACZC,SAAU,GACVC,SAAU,GACVjE,GAAI,KACJS,UAAW,GACXyD,aAAc,GACdC,SAAU,GACVC,QAAS,GACTC,OAAQ,GACRC,MAAO,KACPC,OAAQ,KACRC,MAAO,IAGT1E,KAAK0C,SAAS/C,GAEdK,KAAK2E,SAAW,K,oDAIhB,OAAO3E,KAAKJ,MAAMM,K,+BAGXN,GACHA,IACFI,KAAKJ,MAAMoE,OAAStB,EAAS9C,EAAMoE,QACnChE,KAAKJ,MAAMqE,WAAavB,EAAS9C,EAAMqE,YACvCjE,KAAKJ,MAAMsE,SAAWxB,EAAS9C,EAAMsE,UACrClE,KAAKJ,MAAMuE,SAAWzB,EAAS9C,EAAMuE,UACrCnE,KAAKJ,MAAMM,GAAKwC,EAAS9C,EAAMM,IAC/BF,KAAKJ,MAAMe,UAAY+B,EAAS9C,EAAMe,UAAW,IACjDX,KAAKJ,MAAMwE,aAAe1B,EAAS9C,EAAMwE,aAAc,IACvDpE,KAAKJ,MAAMyE,SAAW3B,EAAS9C,EAAMyE,SAAU,IAC/CrE,KAAKJ,MAAM0E,QAAU5B,EAAS9C,EAAM0E,QAAS,IAC7CtE,KAAKJ,MAAM4E,MAAQ9B,EAAS9C,EAAM4E,OAClCxE,KAAKJ,MAAM6E,OAAS/B,EAAS9C,EAAM6E,QACnCzE,KAAKJ,MAAM2E,OAAS7B,EAAS9C,EAAM2E,OAAQ,IAC3CvE,KAAKJ,MAAM8E,MAAQhC,EAAS9C,EAAM8E,MAAO,O,mCAIhCE,GACX5E,KAAK2E,SAAWC,I,iCAIhB,MAAM,UAAN,OAAiB5E,KAAK6E,UAAtB,O,qCAIA,OAAI7E,KAAKJ,MAAMqE,WACNjE,KAAKJ,MAAMqE,WAAWa,KAAK,KAG3B,O,iCAKT,OAAI9E,KAAKJ,MAAMoE,OACNhE,KAAKJ,MAAMoE,OAAOc,KAAK,KAGvB,O,mCAKT,OAAI9E,KAAKJ,MAAMsE,SACNlE,KAAKJ,MAAMsE,SAASY,KAAK,KAGzB,O,kCAKT,OAAI9E,KAAKJ,MAAMuE,SACNnE,KAAKJ,MAAMuE,SAASW,KAAK,KAGzB,O,gCAKT,IAAIC,EAAQ,GAERC,EAAOhF,KAAKiF,WAoBhB,OAnBID,GACFD,EAAMG,KAAKF,IAGbA,EAAOhF,KAAKmF,iBAEVJ,EAAMG,KAAKF,IAGbA,EAAOhF,KAAKoF,eAEVL,EAAMG,KAAKF,IAGbA,EAAOhF,KAAKqF,cAEVN,EAAMG,KAAKF,GAGTD,EAAM3E,OAAS,EACT2E,EAAMD,KAAK,KAGZ,S,8BAIHvD,GACN,OAAQA,KAASvB,KAAKJ,MAAMe,WAAaY,KAASvB,KAAKJ,MAAMwE,e,qCAI7D,IAAIkB,EAAS,GAEb,IAAK,IAAIzD,KAAO7B,KAAKJ,MAAMe,UAAU,CACnC,IAAImB,EAAQ9B,KAAKJ,MAAMe,UAAUkB,GAC7B7B,KAAK2E,SACPW,EAAOJ,KAAM,CAAClF,KAAK2E,SAAS9C,GAAMC,IAGlCwD,EAAOJ,KAAM,CAACrD,EAAKC,IAIvB,OAAOwD,I,wCAIP,IAAIA,EAAS,GAEb,IAAK,IAAIzD,KAAO7B,KAAKJ,MAAMwE,aAAa,CACtC,IAAItC,EAAQ9B,KAAKJ,MAAMwE,aAAavC,GAChC7B,KAAK2E,SACPW,EAAOJ,KAAM,CAAClF,KAAK2E,SAAS9C,GAAMC,IAGlCwD,EAAOJ,KAAM,CAACrD,EAAKC,IAIvB,OAAOwD,I,kCAIP,OAAOtF,KAAKJ,MAAM2E,S,gCAIlB,OAAIvE,KAAKJ,MAAM4E,MACNxE,KAAKJ,MAAM4E,MAAMe,WAGjB,O,gCAKT,OAAIvF,KAAKJ,MAAM4E,MACNxE,KAAKJ,MAAM4E,MAAMgB,SAGjB,O,gCAIc,IAAjBC,EAAgB,wDAClBnE,EAAO,CAACpB,GAAIF,KAAK0F,QACTC,MAAO3F,KAAK6E,UACZvB,MAAOtD,KAAK6E,UACZe,MAAO,OAGfC,EAAS,GAET7F,KAAKJ,MAAM2E,UACbsB,EAAS7F,KAAKJ,MAAM2E,OAAOsB,UAEzBA,EAAS,KAITA,EAAS,EACXA,EAAS,EAEFA,EAAS,KAChBA,EAAS,IAGXvE,EAAI,KAAWuE,EAEf,IAAIC,EAAOnE,OAAOmE,KAAK9F,KAAKJ,MAAMwE,cAgBlC,OAdI0B,EAAK1F,OAAS,EAChBkB,EAAI,MAAYwE,EAAKC,OAAOjB,KAAK,KAGjCxD,EAAI,MAAY,UAGdmE,IACFnE,EAAI,MAAY,OAChBA,EAAI,SAAc,EAClBA,EAAI,MAAY,SAChBA,EAAI,KAAW,IAGVA,I,8BAIP,MAAO,CAACQ,MAAO9B,KAAKJ,W,KAIxBmE,EAAOiC,MAAQ,SAASlE,GACtB,OAAO,IAAIiC,EAAOjC,IAGpBmE,IAAIC,cAAc,SAAUnC,GAEbA,Q,gBCnPToC,E,YACF,aAAsB,IAAD,mDAANC,EAAM,yBAANA,EAAM,uBACjB,iEAASA,KACTC,MAAMC,kBAAN,eAA8BH,GAFb,E,uCADFE,QAqBjBE,G,YAdmBF,O,YAOIA,O,YAQzB,aAAsB,IAAD,mDAAND,EAAM,yBAANA,EAAM,uBACjB,iEAASA,KACTC,MAAMC,kBAAN,eAA8BC,GAFb,E,uCADEF,SCd3B,SAASG,IACP,IAAIC,EAAMC,MACV,MAAO,IAAMD,EAAIE,UAAUF,EAAIrG,OAAO,G,IAGlCwG,E,WACJ,WAAYjH,GAAO,oBACjBK,KAAKJ,MAAQ,CACXiH,SAAU,IAGZ7G,KAAK2E,SAAW,KAEhB3E,KAAK8G,KAAKnH,G,yDAGCiF,GAEX,IAAK,IAAI/C,KADT7B,KAAK2E,SAAWC,EACA5E,KAAKJ,MAAMiH,SACzB7G,KAAKJ,MAAMiH,SAAShF,GAAKkF,aAAanC,K,2BAIrCoC,GACH,IAAK,IAAInF,KAAO7B,KAAKJ,MAAMiH,SAAS,CAElC,IAAuC,IAD1B7G,KAAKJ,MAAMiH,SAAShF,GACtBgD,UAAUoC,OAAOD,GAC1B,OAAOnF,EAIX,OAAO,O,0BAGLqF,GACF,GAAMA,aAAkBnD,EAAxB,CAEA,IAAI7D,EAAKgH,EAAOxB,QAEhB,GAAIxF,EAAG,CACL,GAAIA,KAAMF,KAAKJ,MAAMiH,SACnB,MAAMV,EAAS,uBAAD,OAAwBe,IAGxClH,KAAKJ,MAAMiH,SAAS3G,GAAMgH,MAExB,CAGF,IAFA,IAAIT,EAAMD,IAEHC,KAAOzG,KAAKJ,MAAMiH,UACvBJ,EAAMD,IAGRU,EAAOtH,MAAMM,GAAKuG,EAClBzG,KAAKJ,MAAMiH,SAASJ,GAAOS,M,iCAImC,IAAD,yDAAH,GAAG,IAAvDC,cAAuD,MAAhD,KAAgD,MAA1CC,oBAA0C,MAA7B,KAA6B,MAAvBC,mBAAuB,MAAX,KAAW,EAC3DlH,EAAQ,IAAIiB,UAAIkG,QAMpB,IAAK,IAAIJ,KAJLE,IACFA,EAAeA,EAAa1B,SAGX1F,KAAKJ,MAAMiH,SAAS,CACrC,IAAIU,EAAIvH,KAAKJ,MAAMiH,SAASK,GACxBA,IAAWC,EACbhH,EAAMqH,IAAID,EAAEE,QAAQ,CAAChC,WAAU,KAExB4B,EACHE,EAAE7B,UAAW2B,IACXD,EACEG,EAAEG,QAAQN,IACZjH,EAAMqH,IAAID,EAAEE,WAIdtH,EAAMqH,IAAID,EAAEE,YAITL,EACHG,EAAEG,QAAQN,IACZjH,EAAMqH,IAAID,EAAEE,WAIdtH,EAAMqH,IAAID,EAAEE,WAIhB,OAAOtH,I,0BAGLD,GACF,IAAIgH,EAASlH,KAAKJ,MAAMiH,SAAS3G,GAEjC,GAAe,OAAXgH,EACF,MAAMX,EAAa,qBAAD,OAAsBrG,IAG1C,OAAOgH,I,2BAGJrG,GAAM,IAAD,OACJA,IACEA,EAAK8G,QAAQ9G,EAAOA,EAAK8G,OAC7B9G,EAAK+G,SAAQ,SAAAC,GACX,IAAIX,EAASnD,EAAO+C,KAAKe,GACzB,EAAKL,IAAIN,S,8BAMb,MAAO,CAACpF,MAAO9B,KAAKJ,W,KAIxBgH,EAAOZ,MAAQ,SAASlE,GACtB,IAAIgG,EAAS,IAAIlB,EAEjB,OADAkB,EAAOlI,MAAQkC,EACRgG,GAGT7B,IAAIC,cAAc,SAAUU,GAEbA,QCrIf,SAASlE,EAASmB,GAAe,IAAVC,EAAS,uDAAL,KACzB,OAAID,GAGKC,E,IAILiE,E,WACJ,WAAYpI,GAAO,oBACjBK,KAAKJ,MAAQ,CACXoH,KAAM,KACN9G,GAAI,KACJmE,SAAU,GACVC,QAAS,GACTC,OAAQ,GACRH,aAAc,GACdM,MAAO,IAGT1E,KAAK0C,SAAS/C,GAEdK,KAAK2E,SAAW,K,oDAIhB,OAAO3E,KAAKJ,MAAMM,K,+BAGXN,GACHA,IACFI,KAAKJ,MAAMoH,KAAOtE,EAAS9C,EAAMoH,MACjChH,KAAKJ,MAAMM,GAAKwC,EAAS9C,EAAMM,IAC/BF,KAAKJ,MAAMwE,aAAe1B,EAAS9C,EAAMwE,aAAc,IACvDpE,KAAKJ,MAAMyE,SAAW3B,EAAS9C,EAAMyE,SAAU,IAC/CrE,KAAKJ,MAAM0E,QAAU5B,EAAS9C,EAAM0E,QAAS,IAC7CtE,KAAKJ,MAAM2E,OAAS7B,EAAS9C,EAAM2E,OAAQ,IAC3CvE,KAAKJ,MAAM8E,MAAQhC,EAAS9C,EAAM8E,MAAO,O,mCAIhCE,GACX5E,KAAK2E,SAAWC,I,iCAIhB,MAAM,YAAN,OAAmB5E,KAAK6E,UAAxB,O,gCAIA,OAAO7E,KAAKJ,MAAMoH,O,8BAGZzF,GACN,OAAOA,KAASvB,KAAKJ,MAAMwE,e,wCAI3B,IAAIkB,EAAS,GAEb,IAAK,IAAIzD,KAAO7B,KAAKJ,MAAMwE,aAAa,CACtC,IAAItC,EAAQ9B,KAAKJ,MAAMwE,aAAavC,GAChC7B,KAAK2E,SACPW,EAAOJ,KAAM,CAAClF,KAAK2E,SAAS9C,GAAMC,IAGlCwD,EAAOJ,KAAM,CAACrD,EAAKC,IAIvB,OAAOwD,I,kCAIP,OAAOtF,KAAKJ,MAAM2E,S,gCAGK,IAAjBkB,EAAgB,wDAClBnE,EAAO,CACTpB,GAAIF,KAAK0F,QACTC,MAAO3F,KAAK6E,UACZvB,MAAOtD,KAAK6E,UACZe,MAAO,OAGLC,EAAS,EAET7F,KAAKJ,MAAM2E,UACbsB,EAAS7F,KAAKJ,MAAM2E,OAAOsB,UAEzBA,EAAS,IAITA,EAAS,EACXA,EAAS,EAEFA,EAAS,KAChBA,EAAS,IAGXvE,EAAI,KAAWuE,EAEf,IAAIC,EAAOnE,OAAOmE,KAAK9F,KAAKJ,MAAMwE,cAalC,OAXI0B,EAAK1F,OAAS,IAChBkB,EAAI,MAAYwE,EAAKC,OAAOjB,KAAK,MAG/BW,IACFnE,EAAI,MAAY,OAChBA,EAAI,SAAc,EAClBA,EAAI,MAAY,SAChBA,EAAI,KAAW,IAGVA,I,8BAIP,MAAO,CAACQ,MAAO9B,KAAKJ,W,KAIxBmI,EAAS/B,MAAQ,SAASlE,GACxB,OAAO,IAAIiG,EAASjG,IAGtBmE,IAAIC,cAAc,WAAY6B,GAEfA,QC7Hf,SAASC,IACP,IAAIvB,EAAMC,MACV,MAAO,IAAMD,EAAIE,UAAUF,EAAIrG,OAAO,G,IAGlC6H,E,WACJ,WAAYtI,GAAO,oBACjBK,KAAKJ,MAAQ,CACXiH,SAAU,I,yDAIDjC,GAEX,IAAK,IAAI/C,KADT7B,KAAK2E,SAAWC,EACA5E,KAAKJ,MAAMiH,SACzB7G,KAAKJ,MAAMiH,SAAShF,GAAKkF,aAAanC,K,0BAItCsD,GACF,GAAMA,aAAoBH,EAA1B,CAEA,IAAI7H,EAAKgI,EAASxC,QAElB,GAAIxF,EAAG,CACL,GAAIA,KAAMF,KAAKJ,MAAMiH,SACnB,MAAMV,EAAS,yBAAD,OAA0B4B,IAG1C/H,KAAKJ,MAAMiH,SAAS3G,GAAMgI,MAExB,CAGF,IAFA,IAAIzB,EAAMuB,IAEHvB,KAAOzG,KAAKJ,MAAMiH,UACvBJ,EAAMuB,IAGRE,EAAStI,MAAMM,GAAKuG,EACpBzG,KAAKJ,MAAMiH,SAASJ,GAAOyB,M,0BAI3BhI,GACF,IAAIgI,EAAWlI,KAAKJ,MAAMiH,SAAS3G,GAEnC,GAAiB,OAAbgI,EACF,MAAM3B,EAAa,uBAAD,OAAwBrG,IAG5C,OAAOgI,I,iCAIyD,IAAD,yDAAH,GAAG,IAAvDf,cAAuD,MAAhD,KAAgD,MAA1CC,oBAA0C,MAA7B,KAA6B,MAAvBC,mBAAuB,MAAX,KAAW,EAC3DlH,EAAQ,IAAIiB,UAAIkG,QAMpB,IAAK,IAAIY,KAJLd,IACFA,EAAeA,EAAa1B,SAGT1F,KAAKJ,MAAMiH,SAAS,CACvC,IAAIsB,EAAInI,KAAKJ,MAAMiH,SAASqB,GACxBA,IAAaf,EACfhH,EAAMqH,IAAIW,EAAEV,QAAQ,CAAChC,WAAU,KAExB4B,EACHc,EAAEzC,UAAW2B,IACXD,EACEe,EAAET,QAAQN,IACZjH,EAAMqH,IAAIW,EAAEV,WAIdtH,EAAMqH,IAAIW,EAAEV,YAITL,EACHe,EAAET,QAAQN,IACZjH,EAAMqH,IAAIW,EAAEV,WAIdtH,EAAMqH,IAAIW,EAAEV,WAIhB,OAAOtH,I,8BAIP,MAAO,CAAC2B,MAAO9B,KAAKJ,MAAMiH,c,KAI9BoB,EAAWjC,MAAQ,SAASlE,GAC1B,IAAIsG,EAAa,IAAIH,EAErB,OADAG,EAAWxI,MAAQkC,EACZsG,GAGTnC,IAAIC,cAAc,aAAc+B,GAEjBA,QC7Gf,SAASvF,EAASmB,GAAe,IAAVC,EAAS,uDAAL,KACzB,OAAID,GAGKC,E,IAILuE,E,WACJ,WAAY1I,GAAO,oBACjBK,KAAKJ,MAAQ,CACXoH,KAAM,KACN9G,GAAI,KACJoI,KAAM,KACNC,OAAQ,KACRC,SAAU,KACVjE,OAAQ,IAGVvE,KAAK0C,SAAS/C,GACdK,KAAK2E,SAAW,K,yDAGLC,GACX5E,KAAK2E,SAAWC,I,8BAIhB,OAAO5E,KAAKJ,MAAMM,K,kCAIlB,OAAIF,KAAK2E,SACA3E,KAAK2E,SAAS3E,KAAKJ,MAAM2I,QAGzBvI,KAAKJ,MAAM2I,S,oCAKpB,OAAIvI,KAAK2E,SACA3E,KAAK2E,SAAS3E,KAAKJ,MAAM4I,UAGzBxI,KAAKJ,MAAM4I,W,+BAIb5I,GACHA,IACFI,KAAKJ,MAAMoH,KAAOtE,EAAS9C,EAAMoH,MACjChH,KAAKJ,MAAMM,GAAKwC,EAAS9C,EAAMM,IAC/BF,KAAKJ,MAAM0I,KAAO5F,EAAS9C,EAAM0I,MACjCtI,KAAKJ,MAAM2I,OAAS7F,EAAS9C,EAAM2I,QACnCvI,KAAKJ,MAAM4I,SAAW9F,EAAS9C,EAAM4I,UACrCxI,KAAKJ,MAAM2E,OAAS7B,EAAS9C,EAAM2E,OAAQ,O,iCAK7C,MAAO,uBAAgBvE,KAAKJ,MAAMoH,KAA3B,eACGhH,KAAKJ,MAAM2I,OADd,aACyBvI,KAAKJ,MAAM4I,SADpC,O,+BAKP,IAAI3C,EAAS,EAET7F,KAAKJ,MAAM2E,UACbsB,EAAS7F,KAAKJ,MAAM2E,OAAOsB,UAGzBA,EAAS,IAIb,IAAI5C,EAAQ,MAwBZ,OAtBI4C,EAAS,GACXA,EAAS,GAEFA,GAAU,EACjB5C,EAAQ,QAED4C,EAAS,EAChB5C,EAAQ,QAGRA,EAAQ,OACR4C,EAAS,GAGA,CACT3F,GAAGF,KAAK0F,QACR+C,KAAKzI,KAAKJ,MAAM2I,OAChBG,GAAG1I,KAAKJ,MAAM4I,SACdG,KAAK9C,EACL5C,MAAMA,K,8BAOR,MAAO,CAACnB,MAAO9B,KAAKJ,W,KAIxByI,EAAQrC,MAAQ,SAASlE,GACvB,OAAO,IAAIuG,EAAQvG,IAGrBuG,EAAQvB,KAAO,SAASjG,GAAkB,wDACxC,OAAO,IAAIwH,EAAQ,CAACrB,KAAMnG,EAAKmG,QAGjCf,IAAIC,cAAc,UAAWmC,GAEdA,QCjHf,SAASO,IACP,IAAInC,EAAMC,MACV,MAAO,IAAMD,EAAIE,UAAUF,EAAIrG,OAAO,G,IAGlCyI,E,WACJ,WAAYlJ,GAAO,oBACjBK,KAAKJ,MAAQ,CACXiH,SAAU,I,yDAIDjC,GAEX,IAAK,IAAI/C,KADT7B,KAAK2E,SAAWC,EACA5E,KAAKJ,MAAMiH,SACzB7G,KAAKJ,MAAMiH,SAAShF,GAAKkF,aAAanC,K,0BAItCkE,GACF,GAAMA,aAAmBT,EAAzB,CAEA,IAAInI,EAAK4I,EAAQpD,QAEjB,GAAIxF,EAAG,CACL,GAAIA,KAAMF,KAAKJ,MAAMiH,SACnB,MAAMV,EAAS,wBAAD,OAAyB2C,IAGzC9I,KAAKJ,MAAMiH,SAAS3G,GAAM4I,MAExB,CAGF,IAFA,IAAIrC,EAAMmC,IAEHnC,KAAOzG,KAAKJ,MAAMiH,UACvBJ,EAAMmC,IAGRE,EAAQlJ,MAAMM,GAAKuG,EACnBzG,KAAKJ,MAAMiH,SAASJ,GAAOqC,M,0BAI3B5I,GACF,IAAI4I,EAAU9I,KAAKJ,MAAMiH,SAAS3G,GAElC,GAAgB,OAAZ4I,EACF,MAAMvC,EAAa,sBAAD,OAAuBrG,IAG3C,OAAO4I,I,uCAGQC,GACf,IAAI7I,EAAK6I,EAAKrD,QAEVsD,EAAc,GACdC,EAAO,GAEX,IAAK,IAAIpH,KAAO7B,KAAKJ,MAAMiH,SAAS,CAClC,IAAIiC,EAAU9I,KAAKJ,MAAMiH,SAAShF,GAC9BqH,EAAI,KASR,GAPIJ,EAAQlJ,MAAM2I,SAAWrI,EAC3BgJ,EAAIlJ,KAAK2E,SAASmE,EAAQlJ,MAAM4I,UAEzBM,EAAQlJ,MAAM4I,WAAatI,IAClCgJ,EAAIlJ,KAAK2E,SAASmE,EAAQlJ,MAAM2I,SAG9BW,EAAE,CACJ,IAAIC,EAAOD,EAAExD,QACPyD,KAAQF,IACZD,EAAY9D,KAAKgE,GACjBD,EAAKE,GAAQ,IAKnB,OAAOH,I,iCAIP,IAAI5J,EAAQ,IAAIgC,UAAIkG,QAEpB,IAAK,IAAIzF,KAAO7B,KAAKJ,MAAMiH,SAAS,CAClC,IAAIiC,EAAU9I,KAAKJ,MAAMiH,SAAShF,GAClCzC,EAAMoI,IAAIsB,EAAQM,UAGpB,OAAOhK,I,8BAIP,MAAO,CAAC0C,MAAO9B,KAAKJ,MAAMiH,c,KAI9BgC,EAAS7C,MAAQ,SAASlE,GACxB,IAAIuH,EAAW,IAAIR,EAEnB,OADAQ,EAASzJ,MAAQkC,EACVuH,GAGTpD,IAAIC,cAAc,WAAY2C,GAEfA,SC/Gf,SAASnG,GAASmB,GAAe,IAAVC,EAAS,uDAAL,KACzB,OAAID,GAGKC,E,IAILwF,G,WACJ,WAAY3J,GAAO,oBACjBK,KAAKJ,MAAQ,CACXoH,KAAM,KACN9G,GAAI,KACJoE,QAAS,GACTI,MAAO,IAGT1E,KAAK0C,SAAS/C,GAEdK,KAAK2E,SAAW,K,oDAIhB,OAAO3E,KAAKJ,MAAMM,K,+BAGXN,GACHA,IACFI,KAAKJ,MAAMoH,KAAOtE,GAAS9C,EAAMoH,MACjChH,KAAKJ,MAAMM,GAAKwC,GAAS9C,EAAMM,IAC/BF,KAAKJ,MAAM0E,QAAU5B,GAAS9C,EAAM0E,QAAS,IAC7CtE,KAAKJ,MAAM8E,MAAQhC,GAAS9C,EAAM8E,MAAO,O,mCAIhCE,GACX5E,KAAK2E,SAAWC,I,iCAIhB,MAAM,YAAN,OAAmB5E,KAAK6E,UAAxB,O,gCAIA,OAAO7E,KAAKJ,MAAMoH,O,8BAIlB,MAAO,CAAClF,MAAO9B,KAAKJ,W,KAIxB0J,GAAStD,MAAQ,SAASlE,GACxB,OAAO,IAAIwH,GAASxH,IAGtBmE,IAAIC,cAAc,WAAYoD,IAEfA,UCtDf,SAASC,KACP,IAAI9C,EAAMC,MACV,MAAO,IAAMD,EAAIE,UAAUF,EAAIrG,OAAO,G,IAGlCoJ,G,WACJ,WAAY7J,GAAO,oBACjBK,KAAKJ,MAAQ,CACXiH,SAAU,I,yDAIDjC,GAEX,IAAK,IAAI/C,KADT7B,KAAK2E,SAAWC,EACA5E,KAAKJ,MAAMiH,SACzB7G,KAAKJ,MAAMiH,SAAShF,GAAKkF,aAAanC,K,0BAItCzC,GACF,GAAMA,aAAoBmH,GAA1B,CAEA,IAAIpJ,EAAKiC,EAASuD,QAElB,GAAIxF,EAAG,CACL,GAAIA,KAAMF,KAAKJ,MAAMiH,SACnB,MAAMV,EAAS,yBAAD,OAA0BhE,IAG1CnC,KAAKJ,MAAMiH,SAAS3G,GAAMiC,MAExB,CAGF,IAFA,IAAIsE,EAAM8C,KAEH9C,KAAOzG,KAAKJ,MAAMiH,UACvBJ,EAAM8C,KAGRpH,EAASvC,MAAMM,GAAKuG,EACpBzG,KAAKJ,MAAMiH,SAASJ,GAAOtE,M,0BAI3BjC,GACF,IAAIiC,EAAWnC,KAAKJ,MAAMiH,SAAS3G,GAEnC,GAAiB,OAAbiC,EACF,MAAMoE,EAAa,uBAAD,OAAwBrG,IAG5C,OAAOiC,I,8BAIP,MAAO,CAACL,MAAO9B,KAAKJ,MAAMiH,c,KAI9B2C,GAAUxD,MAAQ,SAASlE,GACzB,IAAInB,EAAY,IAAI6I,GAEpB,OADA7I,EAAUf,MAAQkC,EACXnB,GAGTsF,IAAIC,cAAc,YAAasD,IAEhBA,UCtEf,SAAS9G,GAASmB,GAAe,IAAVC,EAAS,uDAAL,KACzB,OAAID,GAGKC,E,IAIL2F,G,WACJ,WAAY9J,GAAO,oBACjBK,KAAKJ,MAAQ,CACXoH,KAAM,KACN9G,GAAI,KACJoE,QAAS,GACTI,MAAO,IAGT1E,KAAK0C,SAAS/C,GAEdK,KAAK2E,SAAW,K,sDAIhB,OAAO3E,KAAKJ,MAAMoH,O,8BAIlB,OAAOhH,KAAKJ,MAAMM,K,+BAGXN,GACHA,IACFI,KAAKJ,MAAMoH,KAAOtE,GAAS9C,EAAMoH,MACjChH,KAAKJ,MAAMM,GAAKwC,GAAS9C,EAAMM,IAC/BF,KAAKJ,MAAM0E,QAAU5B,GAAS9C,EAAM0E,QAAS,IAC7CtE,KAAKJ,MAAM8E,MAAQhC,GAAS9C,EAAM8E,MAAO,O,mCAIhCE,GACX5E,KAAK2E,SAAWC,I,iCAIhB,MAAM,eAAN,OAAsB5E,KAAK6E,UAA3B,O,8BAIA,MAAO,CAAC/C,MAAO9B,KAAKJ,W,KAIxB6J,GAAYzD,MAAQ,SAASlE,GAC3B,OAAO,IAAI2H,GAAY3H,IAGzBmE,IAAIC,cAAc,cAAeuD,IAElBA,UCtDf,SAASC,KACP,IAAIjD,EAAMC,MACV,MAAO,IAAMD,EAAIE,UAAUF,EAAIrG,OAAO,G,IAGlCuJ,G,WACJ,WAAYhK,GAAO,oBACjBK,KAAKJ,MAAQ,CACXiH,SAAU,I,yDAIDjC,GAEX,IAAK,IAAI/C,KADT7B,KAAK2E,SAAWC,EACA5E,KAAKJ,MAAMiH,SACzB7G,KAAKJ,MAAMiH,SAAShF,GAAKkF,aAAanC,K,0BAItCgF,GACF,GAAMA,aAAuBH,GAA7B,CAEA,IAAIvJ,EAAK0J,EAAYlE,QAErB,GAAIxF,EAAG,CACL,GAAIA,KAAMF,KAAKJ,MAAMiH,SACnB,MAAMV,EAAS,4BAAD,OAA6ByD,IAG7C5J,KAAKJ,MAAMiH,SAAS3G,GAAM0J,MAExB,CAGF,IAFA,IAAInD,EAAMiD,KAEHjD,KAAOzG,KAAKJ,MAAMiH,UACvBJ,EAAMiD,KAGRE,EAAYhK,MAAMM,GAAKuG,EACvBzG,KAAKJ,MAAMiH,SAASJ,GAAOmD,M,0BAI3B1J,GACF,IAAI0J,EAAc5J,KAAKJ,MAAMiH,SAAS3G,GAEtC,GAAoB,OAAhB0J,EACF,MAAMrD,EAAa,0BAAD,OAA2BrG,IAG/C,OAAO0J,I,8BAIP,MAAO,CAAC9H,MAAO9B,KAAKJ,MAAMiH,c,KAI9B8C,GAAa3D,MAAQ,SAASlE,GAC5B,IAAIsC,EAAe,IAAIuF,GAEvB,OADAvF,EAAaxE,MAAQkC,EACdsC,GAGT6B,IAAIC,cAAc,eAAgByD,IAEnBA,UCtEf,SAASjH,GAASmB,GAAe,IAAVC,EAAS,uDAAL,KACzB,OAAID,GAGKC,E,IAIL+F,G,WACJ,WAAYlK,GAAO,oBACjBK,KAAKJ,MAAQ,CACXoH,KAAM,KACN9G,GAAI,KACJwE,MAAO,IAGT1E,KAAK0C,SAAS/C,GAEdK,KAAK2E,SAAW,K,oDAIhB,OAAO3E,KAAKJ,MAAMM,K,+BAGXN,GACHA,IACFI,KAAKJ,MAAMoH,KAAOtE,GAAS9C,EAAMoH,MACjChH,KAAKJ,MAAMM,GAAKwC,GAAS9C,EAAMM,IAC/BF,KAAKJ,MAAM8E,MAAQhC,GAAS9C,EAAM8E,MAAO,O,mCAIhCE,GACX5E,KAAK2E,SAAWC,I,iCAIhB,MAAM,UAAN,OAAiB5E,KAAK6E,UAAtB,O,gCAIA,OAAO7E,KAAKJ,MAAMoH,O,8BAIlB,MAAO,CAAClF,MAAO9B,KAAKJ,W,KAIxBiK,GAAO7D,MAAQ,SAASlE,GACtB,OAAO,IAAI+H,GAAO/H,IAGpBmE,IAAIC,cAAc,SAAU2D,IAEbA,UCpDf,SAASC,KACP,IAAIrD,EAAMC,MACV,MAAO,IAAMD,EAAIE,UAAUF,EAAIrG,OAAO,G,IAGlC2J,G,WACJ,WAAYpK,GAAO,oBACjBK,KAAKJ,MAAQ,CACXiH,SAAU,I,yDAIDjC,GAEX,IAAK,IAAI/C,KADT7B,KAAK2E,SAAWC,EACA5E,KAAKJ,MAAMiH,SACzB7G,KAAKJ,MAAMiH,SAAShF,GAAKkF,aAAanC,K,0BAItCoF,GACF,GAAMA,aAAkBH,GAAxB,CAEA,IAAI3J,EAAK8J,EAAOtE,QAEhB,GAAIxF,EAAG,CACL,GAAIA,KAAMF,KAAKJ,MAAMiH,SACnB,MAAMV,EAAS,uBAAD,OAAwB6D,IAGxChK,KAAKJ,MAAMiH,SAAS3G,GAAM8J,MAExB,CAGF,IAFA,IAAIvD,EAAMqD,KAEHrD,KAAOzG,KAAKJ,MAAMiH,UACvBJ,EAAMqD,KAGRE,EAAOpK,MAAMM,GAAKuG,EAClBzG,KAAKJ,MAAMiH,SAASJ,GAAOuD,M,0BAI3B9J,GACF,IAAI8J,EAAShK,KAAKJ,MAAMiH,SAAS3G,GAEjC,GAAe,OAAX8J,EACF,MAAMzD,EAAa,qBAAD,OAAsBrG,IAG1C,OAAO8J,I,8BAIP,MAAO,CAAClI,MAAO9B,KAAKJ,MAAMiH,c,KAI9BkD,GAAQ/D,MAAQ,SAASlE,GACvB,IAAIwC,EAAU,IAAIyF,GAElB,OADAzF,EAAQ1E,MAAQkC,EACTwC,GAGT2B,IAAIC,cAAc,UAAW6D,IAEdA,UCtEf,SAASrH,GAASmB,GAAe,IAAVC,EAAS,uDAAL,KACzB,OAAID,GAGKC,E,IAILmG,G,WACJ,WAAYtK,GAAO,oBACjBK,KAAKJ,MAAQ,CACXgE,KAAM,KACN1D,GAAI,KACJoE,QAAS,IAGXtE,KAAK0C,SAAS/C,GAEdK,KAAK2E,SAAW,K,oDAIhB,OAAO3E,KAAKJ,MAAMM,K,+BAGXN,GACHA,IACFI,KAAKJ,MAAMgE,KAAOlB,GAAS9C,EAAMgE,MACjC5D,KAAKJ,MAAMM,GAAKwC,GAAS9C,EAAMM,IAC/BF,KAAKJ,MAAM0E,QAAU5B,GAAS9C,EAAM0E,QAAS,O,mCAIpCM,GACX5E,KAAK2E,SAAWC,I,iCAIhB,MAAM,QAAN,OAAe5E,KAAKkK,UAApB,O,gCAIA,OAAOlK,KAAKJ,MAAMgE,O,8BAIlB,MAAO,CAAC9B,MAAO9B,KAAKJ,W,KAIxBqK,GAAKjE,MAAQ,SAASlE,GACpB,OAAO,IAAImI,GAAKnI,IAGlBmE,IAAIC,cAAc,OAAQ+D,IAEXA,UCpDf,SAASE,KACP,IAAI1D,EAAMC,MACV,MAAO,IAAMD,EAAIE,UAAUF,EAAIrG,OAAO,G,IAGlCgK,G,WACJ,WAAYzK,GAAO,oBACjBK,KAAKJ,MAAQ,CACXiH,SAAU,I,yDAIDjC,GAEX,IAAK,IAAI/C,KADT7B,KAAK2E,SAAWC,EACA5E,KAAKJ,MAAMiH,SACzB7G,KAAKJ,MAAMiH,SAAShF,GAAKkF,aAAanC,K,0BAItCyF,GACF,GAAMA,aAAgBJ,GAAtB,CAEA,IAAI/J,EAAKmK,EAAK3E,QAEd,GAAIxF,EAAG,CACL,GAAIA,KAAMF,KAAKJ,MAAMiH,SACnB,MAAMV,EAAS,qBAAD,OAAsBkE,IAGtCrK,KAAKJ,MAAMiH,SAAS3G,GAAMmK,MAExB,CAGF,IAFA,IAAI5D,EAAM0D,KAEH1D,KAAOzG,KAAKJ,MAAMiH,UACvBJ,EAAM0D,KAGRE,EAAKzK,MAAMM,GAAKuG,EAChBzG,KAAKJ,MAAMiH,SAASJ,GAAO4D,M,0BAI3BnK,GACF,IAAImK,EAAOrK,KAAKJ,MAAMiH,SAAS3G,GAE/B,GAAa,OAATmK,EACF,MAAM9D,EAAa,mBAAD,OAAoBrG,IAGxC,OAAOmK,I,8BAIP,MAAO,CAACvI,MAAO9B,KAAKJ,MAAMiH,c,KAI9BuD,GAAMpE,MAAQ,SAASlE,GACrB,IAAI4C,EAAQ,IAAI0F,GAEhB,OADA1F,EAAM9E,MAAMiH,SAAW/E,EAChB4C,GAGTuB,IAAIC,cAAc,QAASkE,IAEZA,UCtEf,SAAS1H,GAASmB,GAAe,IAAVC,EAAS,uDAAL,KACvB,OAAID,GAGKC,E,IAIPwG,G,WACJ,WAAYxI,GAAO,oBACjB9B,KAAKJ,MAAQ,CACX2K,MAAO,KACPC,IAAK,MAGPxK,KAAK0C,SAASZ,G,qDAGPlC,GACP,GAAIA,EAAM,CACR,GAAc,SAAVA,EAAmB,OACvBI,KAAKJ,MAAM2K,MAAQ7H,GAAS9C,EAAM2K,OAClCvK,KAAKJ,MAAM4K,IAAM9H,GAAS9C,EAAM4K,Q,8BAKlC,OAAOxK,KAAKJ,U,KAIhB0K,GAAUtE,MAAQ,SAASlE,GACzB,OAAO,IAAIwI,GAAUxI,IAGvBmE,IAAIC,cAAc,YAAaoE,IAEhBA,IC7BTG,G,WACF,WAAY9K,GAAO,oBACfK,KAAKJ,MAAQD,E,2DAGF,IAAD,OACN+K,EAAU,SAACxK,GAAM,OAAO,EAAKG,IAAIH,IAEjCN,EAAQ,GAoDZ,IAAK,IAAIiC,KAlDH7B,KAAKJ,MAAMkI,kBAAkBlB,EAI/BhH,EAAMkI,OAAS9H,KAAKJ,MAAMkI,OAH3BlI,EAAMkI,OAAS,IAAIlB,EAMhB5G,KAAKJ,MAAMwI,sBAAsBH,EAInCrI,EAAMwI,WAAapI,KAAKJ,MAAMwI,WAH9BxI,EAAMwI,WAAa,IAAIH,EAMrBjI,KAAKJ,MAAMyJ,oBAAoBR,GAGjCjJ,EAAMyJ,SAAWrJ,KAAKJ,MAAMyJ,SAF5BzJ,EAAMyJ,SAAW,IAAIR,GAKnB7I,KAAKJ,MAAMe,qBAAqB6I,GAIlC5J,EAAMe,UAAYX,KAAKJ,MAAMe,UAH7Bf,EAAMe,UAAY,IAAI6I,GAMpBxJ,KAAKJ,MAAMwE,wBAAwBuF,GAIrC/J,EAAMwE,aAAepE,KAAKJ,MAAMwE,aAHhCxE,EAAMwE,aAAe,IAAIuF,GAMvB3J,KAAKJ,MAAM0E,mBAAmByF,GAIhCnK,EAAM0E,QAAUtE,KAAKJ,MAAM0E,QAH3B1E,EAAM0E,QAAU,IAAIyF,GAMlB/J,KAAKJ,MAAM8E,iBAAiB0F,GAI9BxK,EAAM8E,MAAQ1E,KAAKJ,MAAM8E,MAHzB9E,EAAM8E,MAAQ,IAAI0F,GAMtBpK,KAAKJ,MAAQA,EAEGI,KAAKJ,MACnBI,KAAKJ,MAAMiC,GAAKkF,aAAa2D,K,kCAK/B,OAAO1K,KAAKJ,MAAMkI,S,sCAIlB,OAAO9H,KAAKJ,MAAMwI,a,oCAIpB,OAAOpI,KAAKJ,MAAMyJ,W,wCAIlB,OAAOrJ,KAAKJ,MAAMwE,e,qCAIlB,OAAOpE,KAAKJ,MAAMe,Y,mCAIlB,OAAOX,KAAKJ,MAAM0E,U,iCAIlB,OAAOtE,KAAKJ,MAAM8E,Q,uCAGHqE,GACf,OAAO/I,KAAK2K,cAAcC,iBAAiB7B,K,iCAGqB,IAAD,yDAAH,GAAG,IAAvD5B,cAAuD,MAAhD,KAAgD,MAA1CE,mBAA0C,MAA9B,KAA8B,MAAxBD,oBAAwB,MAAX,KAAW,EAK/D,GAJID,IACFA,EAASnH,KAAK6K,YAAYC,KAAK3D,IAG7BE,EAAY,CACZ,IAAInH,EAAKmH,EAAY3B,QACjBsD,EAAchJ,KAAK4K,iBAAiBvD,GAGxC,IAAK,IAAI0D,KAFT1D,EAAc,IACFnH,GAAM,EACK8I,EAAY,CAC/B,IAAI1H,EAAO0H,EAAY+B,GACvB1D,EAAY/F,EAAKoE,SAAW,GAIpC,IAAIvF,EAAQH,KAAK6K,YAAYG,SAAS,CAAC7D,OAAOA,EACPE,YAAYA,EACZD,aAAaA,IACpDjH,EAAMqH,IAAIxH,KAAKiL,gBAAgBD,SAAS,CAAC5D,aAAaA,EACbC,YAAYA,IAAchH,OAEnE,IAAIjB,EAAQY,KAAK2K,cAAcO,WAE/B,MAAO,CAAC,MAAS/K,EAAO,MAASf,K,0BAG/Bc,GACA,MAAc,MAAVA,EAAG,GACIF,KAAK2K,cAActK,IAAIH,GAEf,MAAVA,EAAG,GACDF,KAAK6K,YAAYxK,IAAIH,GAEb,MAAVA,EAAG,GACDF,KAAKiL,gBAAgB5K,IAAIH,GAEjB,MAAVA,EAAG,GACDF,KAAKY,eAAeP,IAAIH,GAEhB,MAAVA,EAAG,GACDF,KAAKmL,kBAAkB9K,IAAIH,GAEnB,MAAVA,EAAG,GACDF,KAAKoL,aAAa/K,IAAIH,GAEd,MAAVA,EAAG,GACDF,KAAKqL,WAAWhL,IAAIH,GAGpBA,I,8BAKX,MAAO,CAAC4B,MAAO9B,KAAKJ,W,KAI5B6K,GAAOzE,MAAQ,SAASlE,GACpB,IAAIwJ,EAAS,IAAIb,GAIjB,OAHAa,EAAO1L,MAAQkC,EACfwJ,EAAOvE,eAEAuE,GAGXrF,IAAIC,cAAc,SAAUuE,IAEbA,U,+NCpKf,SAASc,GAAe5L,GACtB,IAAMqJ,EAAcrJ,EAAMqJ,YACpB1F,EAAQ3D,EAAM2D,MACdvD,EAAcJ,EAAMI,YAC1B,IAAKiJ,GAAsC,IAAvBA,EAAY5I,OAC9B,OAAO,KAGT,IAAMoL,EAAYxC,EAAYyC,KAAI,SAAC1C,GACjC,IAAI2C,EAAI3C,EACJ/B,EAAO+B,EAAKlE,UAEhB,OAAI9E,EACM,wBAAI8B,IAAKmF,GACP,4BAAQ2E,KAAK,IAAIC,QAAS,WAAK7L,EAAY2L,KACxC1E,IAGL,wBAAInF,IAAKmF,GAAOA,MAI5B,OAAQ,6BAAM1D,EAAM,6BAAK,4BAAKkI,IAGhC,SAASK,GAAWlM,GAClB,IAAMmM,EAASnM,EAAMmM,OACfxI,EAAQ3D,EAAM2D,MACdvD,EAAcJ,EAAMI,YAC1B,IAAK+L,GAA4B,IAAlBA,EAAO1L,OACpB,OAAO,KAGT,IAAMoL,EAAYM,EAAOL,KAAI,SAAC1C,GAC5B,IAAI2C,EAAI3C,EACJ/B,EAAO+B,EASX,OAPIA,EAAKlE,QACPmC,EAAO+B,EAAKlE,UAELkE,EAAKrD,QACZsB,EAAO+B,EAAKrD,SAGV3F,EACM,wBAAI8B,IAAKmF,GACP,4BAAQ2E,KAAK,IAAIC,QAAS,WAAK7L,EAAY2L,KACxC1E,IAGL,wBAAInF,IAAKmF,GAAOA,MAI5B,OAAQ,6BAAM1D,EAAM,6BAAK,4BAAKkI,I,IAG1BO,G,YACJ,WAAYpM,GAAO,IAAD,sBAChB,4CAAMA,IAEN,IAAI2D,EAAQ,4BACRI,EAAQ,kSACRE,EAAQ,6BAAK,mJAEA,4BAAQ+H,KAAK,IAAIC,QAAS,WAAK,EAAKI,iBAApC,kBAGbV,EAASrF,IAAIgG,MAAMC,GACjBZ,aAAkBb,KACtB0B,QAAQC,IAAI,oBACZD,QAAQC,IAAId,GACZA,EAAS,IAAIb,IAGf0B,QAAQC,IAAId,GAjBI,OAuBhB,EAAK1L,MAAQ,CACXyM,aAAc,CAAC,MAAS/I,EAAO,MAASI,EAAO,KAAQE,GACvD0I,aAAc,CAAC,MAAShJ,EAAO,MAASI,EAAO,KAAQE,GACvD0H,OAAQA,EACRrL,MAAOqL,EAAOiB,SAAS,CAACpF,OANb,SAM4BC,aARtB,KASOoF,cARN,OASlBpF,aAViB,KAWjBoF,cAVkB,KAWlBrF,OAVW,UArBG,E,0EAmCL7F,GACX,IAEI6F,EAASnH,KAAKJ,MAAMuH,OAGpBlH,EAFSD,KAAKJ,MAAM0L,OAELiB,SAAS,CAACpF,OAAOA,EAAQE,YAL1B,KAMWD,aALV,OAOnBpH,KAAK0C,SAAS,CAACzC,MAAMA,EAAOoH,YARV,KASHD,aARI,S,iCAWV9F,GACT,IAAI8F,EAAepH,KAAKJ,MAAMwH,aAC1BC,EAAcrH,KAAKJ,MAAMyH,YACzBF,EAASnH,KAAKJ,MAAMuH,OAKtBE,EAFE/F,IAAS+F,EAEG,KAGA/F,EAIhB,IAAIrB,EAXSD,KAAKJ,MAAM0L,OAWLiB,SAAS,CAACpF,OAAOA,EACPC,aAAaA,EACbC,YAAaA,IAE1CrH,KAAK0C,SAAS,CAAC2E,YAAaA,EAAapH,MAAOA,M,kCAGtCsB,GACV,IAAI6F,EAAepH,KAAKJ,MAAMwH,aAC1BC,EAAcrH,KAAKJ,MAAMyH,YACzBF,EAASnH,KAAKJ,MAAMuH,OAKtBC,EAFE7F,IAAU6F,EAEG,KAGA7F,EAIjB,IAAItB,EAXSD,KAAKJ,MAAM0L,OAWLiB,SAAS,CAACpF,OAAOA,EACPC,aAAaA,EACbC,YAAaA,IAE1CrH,KAAK0C,SAAS,CAAC0E,aAAcA,EAAcnH,MAAOA,M,mCAGvC8I,GAAM,IAAD,OACZ/B,EAAO,UACP5C,EAAe,GACfzD,EAAY,GAGZqI,EADShJ,KAAKJ,MAAM0L,OACCV,iBAAiB7B,GAE1C,GAAIA,EAAKoC,gBAAgB,CACvB,IAAIsB,EAAI1D,EAAKoC,kBACb,IAAK,IAAItH,KAAO4I,EACdrI,EAAac,KAAKuH,EAAE5I,GAAK,IAI7B,GAAIkF,EAAKnI,aAAa,CACpB,IAAI2G,EAAIwB,EAAKnI,eACb,IAAK,IAAIiD,KAAO0D,EACd5G,EAAUuE,KAAKqC,EAAE1D,GAAK,IAQ1B,OAJIkF,EAAKlE,UACPmC,EAAO+B,EAAKlE,WAIZ,6BACE,4BAAQ8G,KAAK,IAAIC,QAAS,WAAK,EAAKc,WAAW3D,KAC5C/B,GAEH,kBAAC6E,GAAD,CAAYvI,MAAM,eACNwI,OAAQ1H,EACRrE,YAAa,SAACgJ,GAAQ,EAAK4D,YAAY5D,MACnD,kBAAC8C,GAAD,CAAYvI,MAAM,YACNwI,OAAQnL,EACRZ,YAAa,SAACgJ,GAAQ,EAAK4D,YAAY5D,MACnD,kBAACwC,GAAD,CAAgBjI,MAAM,cACZ0F,YAAaA,EACbjJ,YAAa,SAACgJ,GAAQ,EAAK6D,SAAS7D,S,+BAK3CA,GAAM,IAAD,OACZoD,QAAQC,IAAI,YACZD,QAAQC,IAAIrD,GACZ,IAAI8D,E,2WAAO,IAAO7M,KAAKJ,MAAMyM,cAE7B,GAAItD,aAAgBhF,EAClB8I,EAAQvJ,MAAQ,SAChBuJ,EAAQjJ,KAAO5D,KAAK8M,aAAa/D,GACjC8D,EAAQnJ,MAAQ,6OAEb,GAAIqF,aAAgBhB,EACvB8E,EAAQvJ,MAAQ,WAChBuJ,EAAQjJ,KAAO5D,KAAK8M,aAAa/D,GACjC8D,EAAQnJ,MAAQ,iIAEb,GAAIqF,aAAgBV,EAAQ,CAC/BwE,EAAQvJ,MAAQ,UAEhB,IAAIiF,EAASQ,EAAKgE,YAClB,GAAIxE,EAAO1D,QAAQ,CACjB,IAAIvD,EAAOiH,EACXA,EAAS,4BAAQoD,KAAK,IAAIC,QAAS,kBAAI,EAAKgB,SAAStL,KACxCiH,EAAO1D,WAItB,IAAI2D,EAAWO,EAAKiE,cACpB,GAAIxE,EAAS3D,QAAQ,CACnB,IAAIvD,EAAOkH,EACXA,EAAW,4BAAQmD,KAAK,IAAIC,QAAS,kBAAI,EAAKgB,SAAStL,KACzCkH,EAAS3D,WAIzBgI,EAAQjJ,KAAO,8CAAoB2E,EAApB,OAAgCC,GAC/CqE,EAAQnJ,MAAQ,kJAGlB1D,KAAK0C,SAAS,CAAC4J,aAAaO,M,kCAGlB3M,GACV,GAAKA,EAAL,CAKA,IAEM6I,EAFS/I,KAAKJ,MAAM0L,OAENjL,IAAIH,GAExBF,KAAK4M,SAAS7D,QARZ/I,KAAK0C,SAAS,CAAC4J,aAAatM,KAAKJ,MAAMyM,iB,+BAWlC,IAAD,OACFxL,EAAOb,KAAKJ,MAAM0M,aAClBjF,EAAcrH,KAAKJ,MAAMyH,YACzBD,EAAepH,KAAKJ,MAAMwH,aAE1B6F,EAAc,KAMlB,GAJI5F,IACF4F,EAAW,UAAM5F,IAGfD,EAAa,CACf,IAAIxD,EAAI,UAAMwD,GAEZ6F,EADEA,EACS,UAAMA,EAAN,gBAAyBrJ,GAGtBA,EAQlB,OAJIqJ,IACFA,EAAW,sBAAkBA,EAAlB,MAIX,6BACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAanN,MAAOD,KAAKJ,MAAMK,MAClBF,YAAa,SAACG,GAAD,OAAM,EAAKmN,YAAYnN,OAEnD,kBAACkN,EAAA,EAAD,CAAKE,GAAG,KACN,kBAAC,EAAD,CAAShK,MAAOzC,EAAKyC,MACZI,MAAO7C,EAAK6C,MACZE,KAAM/C,EAAK+C,SAGxB,kBAACuJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,uBAAG/J,MAAM,UACN4J,EADH,mBAC+B,uBAAGtB,KAAK,wCAAR,sB,GAzOrBhJ,IAAMC,WAmPfmJ","file":"static/js/11.dc8a9380.chunk.js","sourcesContent":["import React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport vis from \"vis-network\";\n\nconst fast_physics = {\n  enabled: true,\n  timestep: 0.5,\n};\n\nconst slow_physics = {...fast_physics};\nslow_physics.timestep = 0.1;\n\nconst options = {\n  height: \"600px\",\n  width: \"100%\",\n  layout:{\n    randomSeed: 42,\n  },\n  manipulation:{\n    enabled: false,\n    initiallyActive: false,\n  },\n  interaction:{\n    navigationButtons: true,\n  },\n  edges:{\n    shadow: false,\n    smooth: {\n      enabled: true,\n      type: \"continuous\",\n      roundness: 0.3,\n    },\n    width: 0.5,\n  },\n  physics: fast_physics,\n};\n\nclass SocialGraph extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      network: {},\n    };\n  }\n\n  handleClick(params) {\n    let emitClicked = this.props.emitClicked;\n\n    if (emitClicked)\n    {\n      let graph = this.props.graph;\n\n      let id = null;\n\n      if (params.nodes.length > 0)\n      {\n        let node = graph.nodes.get(params.nodes[0]);\n        id = node.id;\n      }\n      else if (params.edges.length > 0)\n      {\n        let edge = graph.edges.get(params.edges[0]);\n        id = edge.id;\n      }\n\n      emitClicked(id);\n    }\n  }\n\n  onClick(){\n    let network = this.state.network;\n    let graph = this.props.graph;\n\n    const view_position = network.getViewPosition();\n    const view_scale = network.getScale();\n\n    network.setOptions( { physics: false } );\n\n    let positions = network.getPositions();\n\n    let data = {};\n\n    let filters = [\"director\", \"investor\", \"unknown\", null];\n\n    var filter = filters[Math.floor(Math.random() * filters.length)];\n\n    const nodesFilter = node => {\n      if (node.group === \"brunel\"){ return true;}\n      if (filter){\n        return node.group === filter;\n      }\n      else{\n        return true;\n      }\n    };\n\n    const edgesFilter = edge => {\n      return true;\n    };\n\n    const nodesView = new vis.DataView(graph.nodes, { filter:nodesFilter} );\n    const edgesView = new vis.DataView(graph.edges, { filter:edgesFilter} );\n\n    if (nodesView.length > 0){\n      data[\"nodes\"] = nodesView.get();\n    }\n    else{\n      data[\"nodes\"] = [];\n    }\n\n    if (edgesView.length > 0){\n      data[\"edges\"] = edgesView.get();\n    }\n    else {\n      data[\"edges\"] = [];\n    }\n\n    network.setData(data);\n\n    for (const [key, value] of Object.entries(positions))\n    {\n      network.moveNode(key, value.x, value.y);\n    }\n\n    network.moveTo({position:view_position, scale:view_scale});\n\n    setTimeout(function()\n               {network.setOptions({physics: slow_physics})}, 100 );\n\n    setTimeout(function()\n               {network.setOptions({physics: fast_physics})}, 350 );\n  }\n\n  render(){\n    let graph = this.props.graph;\n\n    if (graph){\n      let events = {click: (params) => {this.handleClick(params)}};\n\n      return (<div>\n              <Graph graph={{nodes:graph.nodes.get(),\n                             edges:graph.edges.get()}}\n                     options={options}\n                     events={events}\n                     getNetwork={network =>\n                                  this.setState({network:network})} />\n            </div>);\n    }\n    else{\n      return (<div>No data to display!!!</div>);\n    }\n  }\n};\n\nexport default SocialGraph;\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, CardImg } from 'reactstrap';\n\nfunction InfoBox(props) {\n  return (\n    <Card body outline color=\"secondary\" style={{height:\"600px\", overflowY:\"scroll\"}}>\n        <CardHeader align=\"center\">{props.title}</CardHeader>\n        <CardImg top width=\"100%\" src={props.image} />\n        <CardBody>\n        {props.text}\n        </CardBody>\n    </Card>\n  );\n};\n\nexport default InfoBox;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Person {\n  constructor(props){\n    this.state = {\n      titles: [],\n      firstnames: [],\n      surnames: [],\n      suffixes: [],\n      id: null,\n      positions: {},\n      affiliations: {},\n      projects: {},\n      sources: [],\n      scores: {},\n      alive: null,\n      gender: null,\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.titles = setState(state.titles);\n      this.state.firstnames = setState(state.firstnames);\n      this.state.surnames = setState(state.surnames);\n      this.state.suffixes = setState(state.suffixes);\n      this.state.id = setState(state.id);\n      this.state.positions = setState(state.positions, {});\n      this.state.affiliations = setState(state.affiliations, {});\n      this.state.projects = setState(state.projects, {});\n      this.state.sources = setState(state.sources, []);\n      this.state.alive = setState(state.alive);\n      this.state.gender = setState(state.gender);\n      this.state.scores = setState(state.scores, {});\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Person(${this.getName()})`;\n  }\n\n  getFirstName(){\n    if (this.state.firstnames){\n      return this.state.firstnames.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getTitle(){\n    if (this.state.titles){\n      return this.state.titles.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getSurname(){\n    if (this.state.surnames){\n      return this.state.surnames.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getSuffix(){\n    if (this.state.suffixes){\n      return this.state.suffixes.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getName(){\n    var parts = [];\n\n    let part = this.getTitle();\n    if (part){\n      parts.push(part);\n    }\n\n    part = this.getFirstName();\n    if (part){\n      parts.push(part);\n    }\n\n    part = this.getSurname();\n    if (part){\n      parts.push(part);\n    }\n\n    part = this.getSuffix();\n    if (part){\n      parts.push(part);\n    }\n\n    if (parts.length > 0){\n       return parts.join(\" \");\n    }\n    else{\n      return \"null\";\n    }\n  }\n\n  inGroup(group){\n    return (group in this.state.positions || group in this.state.affiliations);\n  }\n\n  getPositions(){\n    let result = [];\n\n    for (let key in this.state.positions){\n      let value = this.state.positions[key];\n      if (this._getHook){\n        result.push( [this._getHook(key), value] );\n      }\n      else{\n        result.push( [key, value] );\n      }\n    }\n\n    return result;\n  }\n\n  getAffiliations(){\n    let result = [];\n\n    for (let key in this.state.affiliations){\n      let value = this.state.affiliations[key];\n      if (this._getHook){\n        result.push( [this._getHook(key), value] );\n      }\n      else{\n        result.push( [key, value] );\n      }\n    }\n\n    return result;\n  }\n\n  getScores(){\n    return this.state.scores;\n  }\n\n  getBorn(){\n    if (this.state.alive){\n      return this.state.alive.getStart();\n    }\n    else{\n      return null;\n    }\n  }\n\n  getDied(){\n    if (this.state.alive){\n      return this.state.alive.getEnd();\n    }\n    else{\n      return null;\n    }\n  }\n\n  getNode(is_anchor=false){\n    let node = {id: this.getID(),\n                label: this.getName(),\n                title: this.getName(),\n                shape: \"dot\",\n               };\n\n    let weight = 10.0;\n\n    if (this.state.scores){\n      weight = this.state.scores.weight;\n      if (!weight){\n        weight = 10.0;\n      }\n    }\n\n    if (weight < 5.0){\n      weight = 5.0;\n    }\n    else if (weight > 20.0){\n      weight = 20.0;\n    }\n\n    node[\"size\"] = weight;\n\n    let keys = Object.keys(this.state.affiliations);\n\n    if (keys.length > 0){\n      node[\"group\"] = keys.sort().join(\":\");\n    }\n    else{\n      node[\"group\"] = \"unknown\";\n    }\n\n    if (is_anchor){\n      node[\"shape\"] = \"star\";\n      node[\"physics\"] = false;\n      node[\"group\"] = \"anchor\";\n      node[\"size\"] = 20.0;\n    }\n\n    return node;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPerson.unDry = function(value){\n  return new Person(value);\n}\n\nDry.registerClass(\"Person\", Person);\n\nexport default Person;\n","\nclass KeyError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, KeyError)\n    }\n}\n\nclass ValueError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, ValueError)\n    }\n}\n\nclass DuplicateError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, DuplicateError)\n    }\n}\n\nclass MissingError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, MissingError)\n    }\n}\n\nexport {KeyError, ValueError, DuplicateError, MissingError};\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\nimport vis from \"vis-network\";\n\nimport Person from \"./Person\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_person_uid(){\n  let uid = uuidv4();\n  return \"P\" + uid.substring(uid.length-7);\n}\n\nclass People {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n\n    this._getHook = null;\n\n    this.load(props);\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  find(name){\n    for (let key in this.state.registry){\n      let person = this.state.registry[key];\n      if (person.getName().search(name) !== -1){\n        return key;\n      }\n    }\n\n    return null;\n  }\n\n  add(person){\n    if (!(person instanceof Person)){ return;}\n\n    let id = person.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Person ID ${person}`);\n      }\n\n      this.state.registry[id] = person;\n    }\n    else{\n      let uid = _generate_person_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_person_uid();\n      }\n\n      person.state.id = uid;\n      this.state.registry[uid] = person;\n    }\n  }\n\n  getNodes({anchor=null, group_filter=null, node_filter=null} = {}){\n    let nodes = new vis.DataSet();\n\n    if (group_filter){\n      group_filter = group_filter.getID();\n    }\n\n    for (let person in this.state.registry){\n      let p = this.state.registry[person];\n      if (person === anchor){\n        nodes.add(p.getNode({is_anchor:true}));\n      }\n      else if (node_filter){\n        if (p.getID() in node_filter){\n          if (group_filter){\n            if (p.inGroup(group_filter)){\n              nodes.add(p.getNode());\n            }\n          }\n          else{\n            nodes.add(p.getNode());\n          }\n        }\n      }\n      else if (group_filter){\n        if (p.inGroup(group_filter)){\n          nodes.add(p.getNode());\n        }\n      }\n      else{\n        nodes.add(p.getNode());\n      }\n    }\n\n    return nodes;\n  }\n\n  get(id){\n    let person = this.state.registry[id];\n\n    if (person === null){\n      throw MissingError(`No Person with ID ${id}`);\n    }\n\n    return person;\n  }\n\n  load(data){\n    if (data){\n      if (data.array){ data = data.array; }\n      data.forEach(element => {\n        let person = Person.load(element);\n        this.add(person);\n      });\n    }\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPeople.unDry = function(value){\n  let people = new People();\n  people.state = value;\n  return people;\n}\n\nDry.registerClass(\"People\", People);\n\nexport default People;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Business {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      projects: {},\n      sources: [],\n      scores: {},\n      affiliations: {},\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.affiliations = setState(state.affiliations, {});\n      this.state.projects = setState(state.projects, {});\n      this.state.sources = setState(state.sources, []);\n      this.state.scores = setState(state.scores, {});\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Business(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  inGroup(group){\n    return group in this.state.affiliations;\n  }\n\n  getAffiliations(){\n    let result = [];\n\n    for (let key in this.state.affiliations){\n      let value = this.state.affiliations[key];\n      if (this._getHook){\n        result.push( [this._getHook(key), value] );\n      }\n      else{\n        result.push( [key, value] );\n      }\n    }\n\n    return result;\n  }\n\n  getScores(){\n    return this.state.scores;\n  }\n\n  getNode(is_anchor=false){\n    let node = {\n      id: this.getID(),\n      label: this.getName(),\n      title: this.getName(),\n      shape: \"dot\",\n     };\n\n    let weight = 1.0;\n\n    if (this.state.scores){\n      weight = this.state.scores.weight;\n      if (!weight){\n        weight = 1.0;\n      }\n    }\n\n    if (weight < 5.0){\n      weight = 5.0;\n    }\n    else if (weight > 20.0){\n      weight = 20.0;\n    }\n\n    node[\"size\"] = weight;\n\n    let keys = Object.keys(this.state.affiliations);\n\n    if (keys.length > 0){\n      node[\"group\"] = keys.sort().join(\":\");\n    }\n\n    if (is_anchor){\n      node[\"shape\"] = \"star\";\n      node[\"physics\"] = false;\n      node[\"group\"] = \"anchor\";\n      node[\"size\"] = 20.0;\n    }\n\n    return node;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nBusiness.unDry = function(value){\n  return new Business(value);\n}\n\nDry.registerClass(\"Business\", Business);\n\nexport default Business;\n","\nimport Dry from 'json-dry';\nimport vis from 'vis-network';\nimport uuidv4 from 'uuid';\n\nimport Business from \"./Business\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_business_uid(){\n  let uid = uuidv4();\n  return \"B\" + uid.substring(uid.length-7);\n}\n\nclass Businesses {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(business){\n    if (!(business instanceof Business)){ return;}\n\n    let id = business.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Business ID ${Business}`);\n      }\n\n      this.state.registry[id] = business;\n    }\n    else{\n      let uid = _generate_business_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_business_uid();\n      }\n\n      business.state.id = uid;\n      this.state.registry[uid] = business;\n    }\n  }\n\n  get(id){\n    let business = this.state.registry[id];\n\n    if (business === null){\n      throw MissingError(`No Business with ID ${id}`);\n    }\n\n    return business;\n  }\n\n\n  getNodes({anchor=null, group_filter=null, node_filter=null} = {}){\n    let nodes = new vis.DataSet();\n\n    if (group_filter){\n      group_filter = group_filter.getID();\n    }\n\n    for (let business in this.state.registry){\n      let b = this.state.registry[business];\n      if (business === anchor){\n        nodes.add(b.getNode({is_anchor:true}));\n      }\n      else if (node_filter){\n        if (b.getID() in node_filter){\n          if (group_filter){\n            if (b.inGroup(group_filter)){\n              nodes.add(b.getNode());\n            }\n          }\n          else{\n            nodes.add(b.getNode());\n          }\n        }\n      }\n      else if (group_filter){\n        if (b.inGroup(group_filter)){\n          nodes.add(b.getNode());\n        }\n      }\n      else{\n        nodes.add(b.getNode());\n      }\n    }\n\n    return nodes;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nBusinesses.unDry = function(value){\n  let businesses = new Businesses();\n  businesses.state = value;\n  return businesses;\n}\n\nDry.registerClass(\"Businesses\", Businesses);\n\nexport default Businesses;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Message {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      date: null,\n      sender: null,\n      receiver: null,\n      scores: {},\n    };\n\n    this.setState(props);\n    this._getHook = null;\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  getSender(){\n    if (this._getHook){\n      return this._getHook(this.state.sender);\n    }\n    else {\n      return this.state.sender;\n    }\n  }\n\n  getReceiver(){\n    if (this._getHook){\n      return this._getHook(this.state.receiver);\n    }\n    else {\n      return this.state.receiver;\n    }\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.date = setState(state.date);\n      this.state.sender = setState(state.sender);\n      this.state.receiver = setState(state.receiver);\n      this.state.scores = setState(state.scores, {});\n    }\n  }\n\n  toString(){\n    return `Message(name=${this.state.name} ` +\n           `${this.state.sender}=>${this.state.receiver})`;\n  }\n\n  toEdge(){\n    let weight = 1.0;\n\n    if (this.state.scores){\n      weight = this.state.scores.weight;\n\n      if (!weight){\n        weight = 1.0;\n      }\n    }\n\n    let color = 'red';\n\n    if (weight > 10.0){\n      weight = 10.0;\n    }\n    else if (weight >= 4){\n      color = 'black';\n    }\n    else if (weight > 1.0){\n      color = 'gray';\n    }\n    else{\n      color = 'gray';\n      weight = 1.0;\n    }\n\n    let edge = {\n      id:this.getID(),\n      from:this.state.sender,\n      to:this.state.receiver,\n      size:weight,\n      color:color,\n    };\n\n    return edge;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nMessage.unDry = function(value){\n  return new Message(value);\n}\n\nMessage.load = function(data, people=null){\n  return new Message({name: data.name});\n}\n\nDry.registerClass(\"Message\", Message);\n\nexport default Message;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\nimport vis from \"vis-network\";\n\nimport Message from \"./Message\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_message_uid(){\n  let uid = uuidv4();\n  return \"M\" + uid.substring(uid.length-7);\n}\n\nclass Messages {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(message){\n    if (!(message instanceof Message)){ return;}\n\n    let id = message.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Message ID ${message}`);\n      }\n\n      this.state.registry[id] = message;\n    }\n    else{\n      let uid = _generate_message_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_message_uid();\n      }\n\n      message.state.id = uid;\n      this.state.registry[uid] = message;\n    }\n  }\n\n  get(id){\n    let message = this.state.registry[id];\n\n    if (message === null){\n      throw MissingError(`No Message with ID ${id}`);\n    }\n\n    return message;\n  }\n\n  getConnectionsTo(item){\n    let id = item.getID();\n\n    let connections = [];\n    let seen = {};\n\n    for (let key in this.state.registry){\n      let message = this.state.registry[key];\n      let n = null;\n\n      if (message.state.sender === id){\n        n = this._getHook(message.state.receiver);\n      }\n      else if (message.state.receiver === id){\n        n = this._getHook(message.state.sender);\n      }\n\n      if (n){\n        let n_id = n.getID();\n        if (!(n_id in seen)){\n          connections.push(n);\n          seen[n_id] = 1;\n        }\n      }\n    }\n\n    return connections;\n  }\n\n  getEdges(){\n    let edges = new vis.DataSet();\n\n    for (let key in this.state.registry){\n      let message = this.state.registry[key];\n      edges.add(message.toEdge());\n    }\n\n    return edges;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nMessages.unDry = function(value){\n  let messages = new Messages();\n  messages.state = value;\n  return messages;\n}\n\nDry.registerClass(\"Messages\", Messages);\n\nexport default Messages;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Position {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      sources: [],\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.sources = setState(state.sources, []);\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Position(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPosition.unDry = function(value){\n  return new Position(value);\n}\n\nDry.registerClass(\"Position\", Position);\n\nexport default Position;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Position from \"./Position\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_position_uid(){\n  let uid = uuidv4();\n  return \"Q\" + uid.substring(uid.length-7);\n}\n\nclass Positions {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(position){\n    if (!(position instanceof Position)){ return;}\n\n    let id = position.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Position ID ${position}`);\n      }\n\n      this.state.registry[id] = position;\n    }\n    else{\n      let uid = _generate_position_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_position_uid();\n      }\n\n      position.state.id = uid;\n      this.state.registry[uid] = position;\n    }\n  }\n\n  get(id){\n    let position = this.state.registry[id];\n\n    if (position === null){\n      throw MissingError(`No Position with ID ${id}`);\n    }\n\n    return position;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nPositions.unDry = function(value){\n  let positions = new Positions();\n  positions.state = value;\n  return positions;\n}\n\nDry.registerClass(\"Positions\", Positions);\n\nexport default Positions;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Affiliation {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      sources: [],\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.sources = setState(state.sources, []);\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Affiliation(${this.getName()})`;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nAffiliation.unDry = function(value){\n  return new Affiliation(value);\n}\n\nDry.registerClass(\"Affiliation\", Affiliation);\n\nexport default Affiliation;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Affiliation from \"./Affiliation\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_affiliation_uid(){\n  let uid = uuidv4();\n  return \"A\" + uid.substring(uid.length-7);\n}\n\nclass Affiliations {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(affiliation){\n    if (!(affiliation instanceof Affiliation)){ return;}\n\n    let id = affiliation.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Affiliation ID ${affiliation}`);\n      }\n\n      this.state.registry[id] = affiliation;\n    }\n    else{\n      let uid = _generate_affiliation_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_affiliation_uid();\n      }\n\n      affiliation.state.id = uid;\n      this.state.registry[uid] = affiliation;\n    }\n  }\n\n  get(id){\n    let affiliation = this.state.registry[id];\n\n    if (affiliation === null){\n      throw MissingError(`No Affiliation with ID ${id}`);\n    }\n\n    return affiliation;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nAffiliations.unDry = function(value){\n  let affiliations = new Affiliations();\n  affiliations.state = value;\n  return affiliations;\n}\n\nDry.registerClass(\"Affiliations\", Affiliations);\n\nexport default Affiliations;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Source {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Source(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nSource.unDry = function(value){\n  return new Source(value);\n}\n\nDry.registerClass(\"Source\", Source);\n\nexport default Source;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Source from \"./Source\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_source_uid(){\n  let uid = uuidv4();\n  return \"S\" + uid.substring(uid.length-7);\n}\n\nclass Sources {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(source){\n    if (!(source instanceof Source)){ return;}\n\n    let id = source.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Source ID ${source}`);\n      }\n\n      this.state.registry[id] = source;\n    }\n    else{\n      let uid = _generate_source_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_source_uid();\n      }\n\n      source.state.id = uid;\n      this.state.registry[uid] = source;\n    }\n  }\n\n  get(id){\n    let source = this.state.registry[id];\n\n    if (source === null){\n      throw MissingError(`No Source with ID ${id}`);\n    }\n\n    return source;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nSources.unDry = function(value){\n  let sources = new Sources();\n  sources.state = value;\n  return sources;\n}\n\nDry.registerClass(\"Sources\", Sources);\n\nexport default Sources;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Note {\n  constructor(props){\n    this.state = {\n      text: null,\n      id: null,\n      sources: [],\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.text = setState(state.text);\n      this.state.id = setState(state.id);\n      this.state.sources = setState(state.sources, []);\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Note(${this.getText()})`;\n  }\n\n  getText(){\n    return this.state.text;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nNote.unDry = function(value){\n  return new Note(value);\n}\n\nDry.registerClass(\"Note\", Note);\n\nexport default Note;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Note from \"./Note\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_note_uid(){\n  let uid = uuidv4();\n  return \"N\" + uid.substring(uid.length-7);\n}\n\nclass Notes {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(note){\n    if (!(note instanceof Note)){ return;}\n\n    let id = note.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Note ID ${note}`);\n      }\n\n      this.state.registry[id] = note;\n    }\n    else{\n      let uid = _generate_note_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_note_uid();\n      }\n\n      note.state.id = uid;\n      this.state.registry[uid] = note;\n    }\n  }\n\n  get(id){\n    let note = this.state.registry[id];\n\n    if (note === null){\n      throw MissingError(`No Note with ID ${id}`);\n    }\n\n    return note;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nNotes.unDry = function(value){\n  let notes = new Notes();\n  notes.state.registry = value;\n  return notes;\n}\n\nDry.registerClass(\"Notes\", Notes);\n\nexport default Notes;\n","\nimport Dry from 'json-dry';\n\nfunction setState(val, def=null){\n    if (val){\n      return val;\n    } else {\n      return def;\n    }\n  }\n\nclass DateRange{\n  constructor(value){\n    this.state = {\n      start: null,\n      end: null\n    }\n\n    this.setState(value);\n  }\n\n  setState(state){\n    if (state){\n      if (state === \"null\"){ return; }\n      this.state.start = setState(state.start);\n      this.state.end = setState(state.end);\n    }\n  }\n\n  toDry(){\n    return this.state;\n  }\n}\n\nDateRange.unDry = function(value){\n  return new DateRange(value);\n}\n\nDry.registerClass(\"DateRange\", DateRange);\n\nexport default DateRange;\n","\nimport Dry from 'json-dry';\nimport People from './People';\nimport Businesses from './Businesses';\nimport Messages from './Messages';\nimport Positions from './Positions';\nimport Affiliations from './Affiliations';\nimport Sources from './Sources';\nimport Notes from './Notes';\nimport DateRange from './DateRange';\n\nclass Social {\n    constructor(props){\n        this.state = props;\n    }\n\n    _updateHooks(){\n        let getHook = (id)=>{return this.get(id);};\n\n        let state = {};\n\n        if (!(this.state.people instanceof People)){\n           state.people = new People();\n        }\n        else{\n            state.people = this.state.people;\n        }\n\n        if (!(this.state.businesses instanceof Businesses)){\n            state.businesses = new Businesses();\n        }\n        else{\n            state.businesses = this.state.businesses;\n        }\n\n        if (!(this.state.messages instanceof Messages)){\n            state.messages = new Messages();\n        }else{\n            state.messages = this.state.messages;\n        }\n\n        if (!(this.state.positions instanceof Positions)){\n            state.positions = new Positions();\n        }\n        else{\n            state.positions = this.state.positions;\n        }\n\n        if (!(this.state.affiliations instanceof Affiliations)){\n            state.affiliations = new Affiliations();\n        }\n        else{\n            state.affiliations = this.state.affiliations;\n        }\n\n        if (!(this.state.sources instanceof Sources)){\n            state.sources = new Sources();\n        }\n        else{\n            state.sources = this.state.sources;\n        }\n\n        if (!(this.state.notes instanceof Notes)){\n            state.notes = new Notes();\n        }\n        else{\n            state.notes = this.state.notes;\n        }\n\n        this.state = state;\n\n        for (let key in this.state){\n          this.state[key]._updateHooks(getHook);\n        }\n    }\n\n    getPeople(){\n        return this.state.people;\n    }\n\n    getBusinesses(){\n        return this.state.businesses;\n    }\n\n    getMessages(){\n      return this.state.messages;\n    }\n\n    getAffiliations(){\n      return this.state.affiliations;\n    }\n\n    getPositions(){\n      return this.state.positions;\n    }\n\n    getSources(){\n      return this.state.sources;\n    }\n\n    getNotes(){\n      return this.state.notes;\n    }\n\n    getConnectionsTo(item){\n      return this.getMessages().getConnectionsTo(item);\n    }\n\n    getGraph({anchor=null, node_filter=null, group_filter=null} = {}){\n      if (anchor){\n        anchor = this.getPeople().find(anchor);\n      }\n\n      if (node_filter){\n          let id = node_filter.getID();\n          let connections = this.getConnectionsTo(node_filter);\n          node_filter = {};\n          node_filter[id] = 1;\n          for (let connection in connections){\n              let node = connections[connection];\n              node_filter[node.getID()] = 1;\n          }\n      }\n\n      let nodes = this.getPeople().getNodes({anchor:anchor,\n                                             node_filter:node_filter,\n                                             group_filter:group_filter});\n      nodes.add(this.getBusinesses().getNodes({group_filter:group_filter,\n                                               node_filter:node_filter}).get());\n\n      let edges = this.getMessages().getEdges();\n\n      return {\"nodes\": nodes, \"edges\": edges};\n    }\n\n    get(id){\n        if (id[0] === \"M\"){\n            return this.getMessages().get(id);\n        }\n        else if (id[0] === \"P\"){\n            return this.getPeople().get(id);\n        }\n        else if (id[0] === \"B\"){\n            return this.getBusinesses().get(id);\n        }\n        else if (id[0] === \"Q\"){\n            return this.getPositions().get(id);\n        }\n        else if (id[0] === \"A\"){\n            return this.getAffiliations().get(id);\n        }\n        else if (id[0] === \"S\"){\n            return this.getSources().get(id);\n        }\n        else if (id[0] === \"N\"){\n            return this.getNotes().get(id);\n        }\n        else {\n            return id;\n        }\n    }\n\n    toDry(){\n        return {value: this.state};\n    }\n}\n\nSocial.unDry = function(value){\n    let social = new Social();\n    social.state = value;\n    social._updateHooks();\n\n    return social;\n}\n\nDry.registerClass(\"Social\", Social);\n\nexport default Social;\n","import React from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\n\nimport Dry from 'json-dry';\nimport SocialGraph from \"./SocialGraph\";\nimport InfoBox from \"./InfoBox\";\n\nimport graph_data from './data.json';\nimport Social from './Social';\nimport Person from './Person';\nimport Business from './Business';\nimport Message from './Message';\n\nfunction ConnectionList(props){\n  const connections = props.connections;\n  const title = props.title;\n  const emitClicked = props.emitClicked;\n  if (!connections || connections.length === 0){\n    return null;\n  }\n\n  const listitems = connections.map((item) =>{\n    let i = item;\n    let name = item.getName();\n\n    if (emitClicked){\n      return (<li key={name}>\n                <button href=\"#\" onClick={()=>{emitClicked(i);}}>\n                  {name}</button></li>);\n    }\n    else{\n      return (<li key={name}>{name}</li>);\n    }\n  });\n\n  return (<div>{title}<br/><ul>{listitems}</ul></div>);\n}\n\nfunction GroupsList(props){\n  const groups = props.groups;\n  const title = props.title;\n  const emitClicked = props.emitClicked;\n  if (!groups || groups.length === 0){\n    return null;\n  }\n\n  const listitems = groups.map((item) => {\n    let i = item;\n    let name = item;\n\n    if (item.getName){\n      name = item.getName();\n    }\n    else if (item.getID){\n      name = item.getID();\n    }\n\n    if (emitClicked){\n      return (<li key={name}>\n                <button href=\"#\" onClick={()=>{emitClicked(i);}}>\n                  {name}</button></li>);\n    }\n    else{\n      return (<li key={name}>{name}</li>);\n    }\n  });\n\n  return (<div>{title}<br/><ul>{listitems}</ul></div>);\n}\n\nclass SocialApp extends React.Component {\n  constructor(props){\n    super(props);\n\n    let title = \"Isambard's Social Network\";\n    let image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Robert_Howlett_-_Isambard_Kingdom_Brunel_and_the_launching_chains_of_the_Great_Eastern_-_Google_Art_Project.jpg/256px-Robert_Howlett_-_Isambard_Kingdom_Brunel_and_the_launching_chains_of_the_Great_Eastern_-_Google_Art_Project.jpg\";\n    let text = (<div><div>This is an interactive viewer of Isambard Kingdom Brunel's\n                     social network. Please click in the nodes and have fun!</div>\n                     <button href=\"#\" onClick={()=>{this.resetFilters()}}>Reset Filters</button>\n                </div>);\n\n    let social = Dry.parse(graph_data);\n    if (!(social instanceof Social )){\n      console.log(\"Could not parse!\");\n      console.log(social);\n      social = new Social();\n    }\n\n    console.log(social);\n\n    let group_filter = null;\n    let person_filter = null;\n    let anchor = \"Brunel\";\n\n    this.state = {\n      default_data: {\"title\": title, \"image\": image, \"text\": text},\n      infobox_data: {\"title\": title, \"image\": image, \"text\": text},\n      social: social,\n      graph: social.getGraph({anchor:anchor, group_filter:group_filter,\n                              person_filter: person_filter}),\n      group_filter: group_filter,\n      person_filter: person_filter,\n      anchor: anchor,\n    };\n  }\n\n  resetFilters(node){\n    let node_filter = null;\n    let group_filter = null;\n    let anchor = this.state.anchor;\n    let social = this.state.social;\n\n    let graph = social.getGraph({anchor:anchor, node_filter:node_filter,\n                                 group_filter:group_filter});\n\n    this.setState({graph:graph, node_filter:node_filter,\n                   group_filter:group_filter});\n  }\n\n  selectNode(node){\n    let group_filter = this.state.group_filter;\n    let node_filter = this.state.node_filter;\n    let anchor = this.state.anchor;\n    let social = this.state.social;\n\n    if (node === node_filter){\n      // switch off the current filter\n      node_filter = null;\n    }\n    else{\n      node_filter = node;\n    }\n\n    //create a new graph with this filter\n    let graph = social.getGraph({anchor:anchor,\n                                 group_filter:group_filter,\n                                 node_filter: node_filter});\n\n    this.setState({node_filter: node_filter, graph: graph});\n  }\n\n  selectGroup(group){\n    let group_filter = this.state.group_filter;\n    let node_filter = this.state.node_filter;\n    let anchor = this.state.anchor;\n    let social = this.state.social;\n\n    if (group === group_filter){\n      // switch off the current filter\n      group_filter = null;\n    }\n    else{\n      group_filter = group;\n    }\n\n    //create a new graph with this filter\n    let graph = social.getGraph({anchor:anchor,\n                                 group_filter:group_filter,\n                                 node_filter: node_filter});\n\n    this.setState({group_filter: group_filter, graph: graph});\n  }\n\n  getBiography(item){\n    let name = \"unknown\";\n    let affiliations = [];\n    let positions = [];\n\n    let social = this.state.social;\n    let connections = social.getConnectionsTo(item);\n\n    if (item.getAffiliations){\n      let a = item.getAffiliations();\n      for (let val in a){\n        affiliations.push(a[val][0]);\n      }\n    }\n\n    if (item.getPositions){\n      let p = item.getPositions();\n      for (let val in p){\n        positions.push(p[val][0]);\n      }\n    }\n\n    if (item.getName){\n      name = item.getName();\n    }\n\n    return (\n      <div>\n        <button href=\"#\" onClick={()=>{this.selectNode(item);}}>\n          {name}\n        </button>\n        <GroupsList title=\"Affiliations\"\n                    groups={affiliations}\n                    emitClicked={(item)=>{this.selectGroup(item);}}/>\n        <GroupsList title=\"Positions\"\n                    groups={positions}\n                    emitClicked={(item)=>{this.selectGroup(item);}}/>\n        <ConnectionList title=\"Connections\"\n                  connections={connections}\n                  emitClicked={(item)=>{this.showInfo(item);}}/>\n      </div>\n    );\n  }\n\n  showInfo(item){\n    console.log(\"showInfo\");\n    console.log(item);\n    let newdata = {...this.state.default_data};\n\n    if (item instanceof Person){\n      newdata.title = \"Person\";\n      newdata.text = this.getBiography(item);\n      newdata.image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Illustrirte_Zeitung_%281843%29_21_332_1_Das_vom_Stapellaufen_des_Great-Britain.PNG/640px-Illustrirte_Zeitung_%281843%29_21_332_1_Das_vom_Stapellaufen_des_Great-Britain.PNG\";\n    }\n    else if (item instanceof Business){\n      newdata.title = \"Business\";\n      newdata.text = this.getBiography(item);\n      newdata.image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0d/SS_Great_Britain_diagram.jpg/320px-SS_Great_Britain_diagram.jpg\";\n    }\n    else if (item instanceof Message){\n      newdata.title = \"Message\";\n\n      let sender = item.getSender();\n      if (sender.getName){\n        let node = sender;\n        sender = <button href=\"#\" onClick={()=>this.showInfo(node)}>\n                    {sender.getName()}\n                 </button>;\n      }\n\n      let receiver = item.getReceiver();\n      if (receiver.getName){\n        let node = receiver;\n        receiver = <button href=\"#\" onClick={()=>this.showInfo(node)}>\n                     {receiver.getName()}\n                   </button>;\n      }\n\n      newdata.text = <span>Message from {sender} to {receiver}</span>;\n      newdata.image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/SS_Great_Britain_transverse_section.jpg/320px-SS_Great_Britain_transverse_section.jpg\";\n    }\n\n    this.setState({infobox_data:newdata});\n  }\n\n  slotClicked(id){\n    if (!id){\n      this.setState({infobox_data:this.state.default_data});\n      return;\n    }\n\n    const social = this.state.social;\n\n    const item = social.get(id);\n\n    this.showInfo(item);\n  }\n\n  render(){\n    let data = this.state.infobox_data;\n    let node_filter = this.state.node_filter;\n    let group_filter = this.state.group_filter;\n\n    let filter_text = null;\n\n    if (node_filter){\n      filter_text = `${node_filter}`;\n    }\n\n    if (group_filter){\n      let text = `${group_filter}`;\n      if (filter_text){\n        filter_text = `${filter_text} and ${text}`;\n      }\n      else{\n        filter_text = text;\n      }\n    }\n\n    if (filter_text){\n      filter_text = `Filtered by ${filter_text}.`;\n    }\n\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <SocialGraph graph={this.state.graph}\n                           emitClicked={(id)=>this.slotClicked(id)} />\n            </Col>\n            <Col xs=\"4\">\n              <InfoBox title={data.title}\n                       image={data.image}\n                       text={data.text} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <p align=\"center\">\n                {filter_text} See the source <a href=\"https://github.com/chryswoods/brunel\">on GitHub</a>\n              </p>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n};\n\nexport default SocialApp;\n"],"sourceRoot":""}