{"version":3,"sources":["../node_modules/reactstrap/es/CardText.js","version6/SocialGraph.js","version6/InfoBox.js","version6/Person.js","version6/Errors.js","version6/People.js","version6/Message.js","version6/Messages.js","version6/SocialApp.js"],"names":["propTypes","tag","className","string","cssModule","object","CardText","props","Tag","attributes","classes","createElement","defaultProps","fast_physics","enabled","timestep","slow_physics","options","height","width","layout","randomSeed","manipulation","initiallyActive","interaction","navigationButtons","edges","shadow","smooth","type","roundness","physics","SocialGraph","state","network","params","getClickedData","this","graph","data","nodes","length","node","get","title","JSON","stringify","edge","view_position","getViewPosition","view_scale","getScale","setOptions","positions","getPositions","filters","filter","Math","floor","random","nodesView","vis","DataView","group","edgesView","setData","Object","entries","key","value","moveNode","x","y","moveTo","position","scale","setTimeout","events","click","handleClick","getNetwork","setState","onClick","React","Component","InfoBox","Card","body","outline","color","style","CardHeader","align","CardImg","top","src","image","CardBody","text","val","def","Person","name","id","affiliations","projects","sources","dob","dod","gender","unDry","load","Dry","registerClass","KeyError","args","Error","captureStackTrace","MissingError","_generate_person_uid","uid","uuidv4","substring","People","registry","person","getID","array","forEach","element","add","people","Message","date","sender","receiver","_generate_message_uid","Messages","message","messages","SocialApp","DataSet","graph_data","default_data","infobox_data","newdata","Container","Row","Col","setInfoBoxData","xs","href"],"mappings":"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","file":"static/js/9.d2f0cac2.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.propTypes = propTypes;\nCardText.defaultProps = defaultProps;\nexport default CardText;","import React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport vis from \"vis-network\";\n\nconst fast_physics = {\n  enabled: true,\n  timestep: 0.5,\n};\n\nconst slow_physics = {...fast_physics};\nslow_physics.timestep = 0.1;\n\nconst options = {\n  height: \"600px\",\n  width: \"100%\",\n  layout:{\n    randomSeed: 42,\n  },\n  manipulation:{\n    enabled: false,\n    initiallyActive: false,\n  },\n  interaction:{\n    navigationButtons: true,\n  },\n  edges:{\n    shadow: false,\n    smooth: {\n      enabled: true,\n      type: \"continuous\",\n      roundness: 0.3,\n    },\n    width: 0.5,\n  },\n  physics: fast_physics,\n};\n\nclass SocialGraph extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      network: {},\n    };\n  }\n\n  handleClick(params) {\n    let getClickedData = this.props.getClickedData;\n\n    if (getClickedData)\n    {\n      let graph = this.props.graph;\n\n      let data = {};\n\n      if (params.nodes.length > 0)\n      {\n        let node = graph.nodes.get(params.nodes[0]);\n        data[\"title\"] = node.title;\n        data[\"text\"] = JSON.stringify(node);\n        data[\"image\"] = \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Illustrirte_Zeitung_%281843%29_21_332_1_Das_vom_Stapellaufen_des_Great-Britain.PNG/640px-Illustrirte_Zeitung_%281843%29_21_332_1_Das_vom_Stapellaufen_des_Great-Britain.PNG\";\n      }\n      else if (params.edges.length > 0)\n      {\n        let edge = graph.edges.get(params.edges[0]);\n        data[\"title\"] = \"EDGE\";\n        data[\"text\"] = JSON.stringify(edge);\n        data[\"image\"] = \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/SS_Great_Britain_transverse_section.jpg/320px-SS_Great_Britain_transverse_section.jpg\";\n      }\n\n      getClickedData(data);\n    }\n  }\n\n  onClick(){\n    let network = this.state.network;\n    let graph = this.props.graph;\n\n    const view_position = network.getViewPosition();\n    const view_scale = network.getScale();\n\n    network.setOptions( { physics: false } );\n\n    let positions = network.getPositions();\n\n    let data = {};\n\n    let filters = [\"director\", \"investor\", \"unknown\", null];\n\n    var filter = filters[Math.floor(Math.random() * filters.length)];\n\n    const nodesFilter = node => {\n      if (node.group === \"brunel\"){ return true;}\n      if (filter){\n        return node.group === filter;\n      }\n      else{\n        return true;\n      }\n    };\n\n    const edgesFilter = edge => {\n      return true;\n    };\n\n    const nodesView = new vis.DataView(graph.nodes, { filter:nodesFilter} );\n    const edgesView = new vis.DataView(graph.edges, { filter:edgesFilter} );\n\n    if (nodesView.length > 0){\n      data[\"nodes\"] = nodesView.get();\n    }\n    else{\n      data[\"nodes\"] = [];\n    }\n\n    if (edgesView.length > 0){\n      data[\"edges\"] = edgesView.get();\n    }\n    else {\n      data[\"edges\"] = [];\n    }\n\n    network.setData(data);\n\n    for (const [key, value] of Object.entries(positions))\n    {\n      network.moveNode(key, value.x, value.y);\n    }\n\n    network.moveTo({position:view_position, scale:view_scale});\n\n    setTimeout(function()\n               {network.setOptions({physics: slow_physics})}, 100 );\n\n    setTimeout(function()\n               {network.setOptions({physics: fast_physics})}, 350 );\n  }\n\n  render(){\n    let graph = this.props.graph;\n\n    if (graph){\n      let events = {click: (params) => {this.handleClick(params)}};\n\n      return (<div>\n              <Graph graph={{nodes:graph.nodes.get(),\n                             edges:graph.edges.get()}}\n                     options={options}\n                     events={events}\n                     getNetwork={network =>\n                                  this.setState({network:network})} />\n              <button className='graph-buttton'\n                      onClick={() => {this.onClick()}}>\n                Click Me! Hello\n              </button>\n            </div>);\n    }\n    else{\n      return (<div>No data to display!!!</div>);\n    }\n  }\n};\n\nexport default SocialGraph;\n","import React from \"react\";\nimport { Card, CardText, CardHeader, CardBody, CardImg } from 'reactstrap';\n\nfunction InfoBox(props) {\n  return (\n    <Card body outline color=\"secondary\" style={{height:\"600px\"}}>\n        <CardHeader align=\"center\">{props.title}</CardHeader>\n        <CardImg top width=\"100%\" src={props.image} />\n        <CardBody>\n        <CardText>\n            {props.text}\n        </CardText>\n        </CardBody>\n    </Card>\n  );\n};\n\nexport default InfoBox;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Person {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      positions: {},     //should be a dictionary of positions...\n      affiliations: {},  //should be a list of dated affiliation IDs\n      projects: {},      //should be a list of dated project IDs\n      sources: [],       //should be a list of source IDs\n      dob: null,         // date of birth\n      dod: null,         // date of death\n      gender: null,\n    };\n\n    this.setState(props);\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.positions = setState(state.positions, {});\n      this.state.affiliations = setState(state.affiliations, {});\n      this.state.projects = setState(state.projects, {});\n      this.state.sources = setState(state.sources, []);\n      this.state.dob = setState(state.dob);\n      this.state.dod = setState(state.dod);\n      this.state.gender = setState(state.gender);\n    }\n  }\n\n  toString(){\n    return `Person(name=${this.state.name} state=${this.state})`;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPerson.unDry = function(value){\n  return new Person(value);\n}\n\nPerson.load = function(data){\n  return new Person({name: data.name});\n}\n\nDry.registerClass(\"Person\", Person);\n\nexport default Person;\n","\nclass KeyError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, KeyError)\n    }\n}\n\nclass ValueError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, ValueError)\n    }\n}\n\nclass DuplicateError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, DuplicateError)\n    }\n}\n\nclass MissingError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, MissingError)\n    }\n}\n\nexport {KeyError, ValueError, DuplicateError, MissingError};\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Person from \"./Person\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_person_uid(){\n  let uid = uuidv4();\n  return uid.substring(uid.length-8);\n}\n\nclass People {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n\n    this.load(props);\n  };\n\n  add(person){\n    if (!(person instanceof Person)){ return;}\n\n    let id = person.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Person ID ${person}`);\n      }\n\n      this.state.registry[id] = person;\n    }\n    else{\n      let uid = _generate_person_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_person_uid();\n      }\n\n      person.state.id = uid;\n      this.state.registry[uid] = person;\n    }\n  }\n\n  get(id){\n    let person = this.state.registry[id];\n\n    if (person === null){\n      throw MissingError(`No Person with ID ${id}`);\n    }\n\n    return person;\n  }\n\n  load(data){\n    if (data){\n      if (data.array){ data = data.array; }\n      data.forEach(element => {\n        let person = Person.load(element);\n        this.add(person);\n      });\n    }\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPeople.unDry = function(value){\n  let people = new People();\n  people.state = value;\n  return people;\n}\n\nDry.registerClass(\"People\", People);\n\nexport default People;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Message {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      date: null,\n      sender: null,     // should be a Person ID\n      receiver: null,   // should be a Person ID\n    };\n\n    this.setState(props);\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.date = setState(state.date);\n      this.state.sender = setState(state.sender);\n      this.state.receiver = setState(state.receiver);\n    }\n  }\n\n  toString(){\n    return `Message(name=${this.state.name} ` +\n           `${this.state.sender}=>${this.state.receiver})`;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nMessage.unDry = function(value){\n  return new Message(value);\n}\n\nMessage.load = function(data, people=null){\n  return new Message({name: data.name});\n}\n\nDry.registerClass(\"Message\", Message);\n\nexport default Message;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Message from \"./Message\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_message_uid(){\n  let uid = uuidv4();\n  return uid.substring(uid.length-8);\n}\n\nclass Messages {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n\n    this.load(props);\n  };\n\n  add(message){\n    if (!(message instanceof Message)){ return;}\n\n    let id = message.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Message ID ${message}`);\n      }\n\n      this.state.registry[id] = message;\n    }\n    else{\n      let uid = _generate_message_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_message_uid();\n      }\n\n      message.state.id = uid;\n      this.state.registry[uid] = message;\n    }\n  }\n\n  get(id){\n    let message = this.state.registry[id];\n\n    if (message === null){\n      throw MissingError(`No Message with ID ${id}`);\n    }\n\n    return message;\n  }\n\n  load(data, people=null){\n    if (data){\n      if (data.array){ data = data.array; }\n      data.forEach(element => {\n        let message = Message.load(element, people);\n        this.add(message);\n      });\n    }\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nMessages.unDry = function(value){\n  let messages = new Messages();\n  messages.state.registry = value;\n  return messages;\n}\n\nDry.registerClass(\"Messages\", Messages);\n\nexport default Messages;\n","import React from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\nimport vis from \"vis-network\";\n\nimport SocialGraph from \"./SocialGraph\";\nimport InfoBox from \"./InfoBox\";\nimport People from \"./People\";\n\nimport graph_data from './data.json';\nimport Messages from \"./Messages\";\n\nclass SocialApp extends React.Component {\n  constructor(props){\n    super(props);\n\n    let title = \"Isambard's Social Network\";\n    let image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Robert_Howlett_-_Isambard_Kingdom_Brunel_and_the_launching_chains_of_the_Great_Eastern_-_Google_Art_Project.jpg/256px-Robert_Howlett_-_Isambard_Kingdom_Brunel_and_the_launching_chains_of_the_Great_Eastern_-_Google_Art_Project.jpg\";\n    let text = \"This is an interactive viewer of Isambard Kingdom Brunel's social network. Please click on the nodes and have fun!\";\n\n    var nodes = new vis.DataSet({});\n    nodes.add(graph_data.nodes);\n\n    var edges = new vis.DataSet({});\n    edges.add(graph_data.edges);\n\n    let graph = {\"nodes\": nodes, \"edges\": edges};\n\n    let people = new People(graph_data.nodes);\n    let messages = new Messages(graph_data.edges, people);\n\n    this.state = {\n      default_data: {\"title\": title, \"image\": image, \"text\": text},\n      infobox_data: {\"title\": title, \"image\": image, \"text\": text},\n      graph: graph,\n      people: people,\n      messages: messages,\n    };\n  }\n\n  setInfoBoxData(data){\n    let newdata = {...this.state.default_data};\n\n    if (data.text)\n    {\n      newdata.text = data.text;\n    }\n\n    if (data.image)\n    {\n      newdata.image = data.image;\n    }\n\n    if (data.title)\n    {\n      newdata.title = data.title;\n    }\n\n    this.setState({infobox_data:newdata});\n  }\n\n  render(){\n    let data = this.state.infobox_data;\n\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <SocialGraph graph={this.state.graph}\n                           getClickedData={(data)=>this.setInfoBoxData(data)} />\n            </Col>\n            <Col xs=\"4\">\n              <InfoBox title={data.title}\n                       image={data.image}\n                       text={data.text} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <p align=\"center\">\n                See the source <a href=\"https://github.com/chryswoods/brunel\">on GitHub</a>\n              </p>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n};\n\nexport default SocialApp;\n"],"sourceRoot":""}