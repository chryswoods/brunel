{"version":3,"sources":["version7/SocialGraph.js","version7/InfoBox.js","version7/Person.js","version7/Errors.js","version7/People.js","version7/Business.js","version7/Businesses.js","version7/Message.js","version7/Messages.js","version7/Position.js","version7/Positions.js","version7/Affiliation.js","version7/Affiliations.js","version7/Source.js","version7/Sources.js","version7/Note.js","version7/Notes.js","version7/DateRange.js","version7/Social.js","version7/SocialApp.js"],"names":["fast_physics","enabled","timestep","slow_physics","options","height","width","layout","randomSeed","manipulation","initiallyActive","interaction","navigationButtons","edges","shadow","smooth","type","roundness","physics","SocialGraph","props","state","network","params","emitClicked","this","graph","id","nodes","length","get","view_position","getViewPosition","view_scale","getScale","setOptions","positions","getPositions","data","filters","filter","Math","floor","random","nodesView","vis","DataView","node","group","edgesView","edge","setData","Object","entries","key","value","moveNode","x","y","moveTo","position","scale","setTimeout","events","click","handleClick","getNetwork","setState","className","onClick","React","Component","InfoBox","Card","body","outline","color","style","CardHeader","align","title","CardImg","top","src","image","CardBody","CardText","text","val","def","Person","titles","firstnames","surnames","suffixes","affiliations","projects","sources","scores","alive","gender","notes","_getHook","hook","getName","join","parts","part","getTitle","push","getFirstName","getSurname","getSuffix","result","getStart","getEnd","is_anchor","getID","label","shape","weight","keys","sort","unDry","Dry","registerClass","KeyError","args","Error","captureStackTrace","MissingError","_generate_person_uid","uid","uuidv4","substring","People","registry","load","_updateHooks","name","search","person","anchor","DataSet","add","getNode","array","forEach","element","people","Business","_generate_business_uid","Businesses","business","businesses","Message","date","sender","receiver","from","to","size","_generate_message_uid","Messages","message","toEdge","messages","Position","_generate_position_uid","Positions","Affiliation","_generate_affiliation_uid","Affiliations","affiliation","Source","_generate_source_uid","Sources","source","Note","getText","_generate_note_uid","Notes","note","DateRange","start","end","Social","getHook","getPeople","find","getNodes","getBusinesses","getMessages","getEdges","getAffiliations","getSources","getNotes","social","SocialApp","parse","graph_data","console","log","default_data","infobox_data","getGraph","slotClicked","bind","item","newdata","getSender","href","showInfo","getReceiver","Container","Row","Col","xs"],"mappings":"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","file":"static/js/11.64ad7b8f.chunk.js","sourcesContent":["import React from \"react\";\nimport Graph from \"react-graph-vis\";\nimport vis from \"vis-network\";\n\nconst fast_physics = {\n  enabled: true,\n  timestep: 0.5,\n};\n\nconst slow_physics = {...fast_physics};\nslow_physics.timestep = 0.1;\n\nconst options = {\n  height: \"600px\",\n  width: \"100%\",\n  layout:{\n    randomSeed: 42,\n  },\n  manipulation:{\n    enabled: false,\n    initiallyActive: false,\n  },\n  interaction:{\n    navigationButtons: true,\n  },\n  edges:{\n    shadow: false,\n    smooth: {\n      enabled: true,\n      type: \"continuous\",\n      roundness: 0.3,\n    },\n    width: 0.5,\n  },\n  physics: fast_physics,\n};\n\nclass SocialGraph extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      network: {},\n    };\n  }\n\n  handleClick(params) {\n    let emitClicked = this.props.emitClicked;\n\n    if (emitClicked)\n    {\n      let graph = this.props.graph;\n\n      let id = null;\n\n      if (params.nodes.length > 0)\n      {\n        let node = graph.nodes.get(params.nodes[0]);\n        id = node.id;\n      }\n      else if (params.edges.length > 0)\n      {\n        let edge = graph.edges.get(params.edges[0]);\n        id = edge.id;\n      }\n\n      emitClicked(id);\n    }\n  }\n\n  onClick(){\n    let network = this.state.network;\n    let graph = this.props.graph;\n\n    const view_position = network.getViewPosition();\n    const view_scale = network.getScale();\n\n    network.setOptions( { physics: false } );\n\n    let positions = network.getPositions();\n\n    let data = {};\n\n    let filters = [\"director\", \"investor\", \"unknown\", null];\n\n    var filter = filters[Math.floor(Math.random() * filters.length)];\n\n    const nodesFilter = node => {\n      if (node.group === \"brunel\"){ return true;}\n      if (filter){\n        return node.group === filter;\n      }\n      else{\n        return true;\n      }\n    };\n\n    const edgesFilter = edge => {\n      return true;\n    };\n\n    const nodesView = new vis.DataView(graph.nodes, { filter:nodesFilter} );\n    const edgesView = new vis.DataView(graph.edges, { filter:edgesFilter} );\n\n    if (nodesView.length > 0){\n      data[\"nodes\"] = nodesView.get();\n    }\n    else{\n      data[\"nodes\"] = [];\n    }\n\n    if (edgesView.length > 0){\n      data[\"edges\"] = edgesView.get();\n    }\n    else {\n      data[\"edges\"] = [];\n    }\n\n    network.setData(data);\n\n    for (const [key, value] of Object.entries(positions))\n    {\n      network.moveNode(key, value.x, value.y);\n    }\n\n    network.moveTo({position:view_position, scale:view_scale});\n\n    setTimeout(function()\n               {network.setOptions({physics: slow_physics})}, 100 );\n\n    setTimeout(function()\n               {network.setOptions({physics: fast_physics})}, 350 );\n  }\n\n  render(){\n    let graph = this.props.graph;\n\n    if (graph){\n      let events = {click: (params) => {this.handleClick(params)}};\n\n      return (<div>\n              <Graph graph={{nodes:graph.nodes.get(),\n                             edges:graph.edges.get()}}\n                     options={options}\n                     events={events}\n                     getNetwork={network =>\n                                  this.setState({network:network})} />\n              <button className='graph-buttton'\n                      onClick={() => {this.onClick()}}>\n                Click Me! Hello\n              </button>\n            </div>);\n    }\n    else{\n      return (<div>No data to display!!!</div>);\n    }\n  }\n};\n\nexport default SocialGraph;\n","import React from \"react\";\nimport { Card, CardText, CardHeader, CardBody, CardImg } from 'reactstrap';\n\nfunction InfoBox(props) {\n  return (\n    <Card body outline color=\"secondary\" style={{height:\"600px\"}}>\n        <CardHeader align=\"center\">{props.title}</CardHeader>\n        <CardImg top width=\"100%\" src={props.image} />\n        <CardBody>\n        <CardText>\n            {props.text}\n        </CardText>\n        </CardBody>\n    </Card>\n  );\n};\n\nexport default InfoBox;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Person {\n  constructor(props){\n    this.state = {\n      titles: [],\n      firstnames: [],\n      surnames: [],\n      suffixes: [],\n      id: null,\n      positions: {},\n      affiliations: {},\n      projects: {},\n      sources: [],\n      scores: {},\n      alive: null,\n      gender: null,\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.titles = setState(state.titles);\n      this.state.firstnames = setState(state.firstnames);\n      this.state.surnames = setState(state.surnames);\n      this.state.suffixes = setState(state.suffixes);\n      this.state.id = setState(state.id);\n      this.state.positions = setState(state.positions, {});\n      this.state.affiliations = setState(state.affiliations, {});\n      this.state.projects = setState(state.projects, {});\n      this.state.sources = setState(state.sources, []);\n      this.state.alive = setState(state.alive);\n      this.state.gender = setState(state.gender);\n      this.state.scores = setState(state.scores, {});\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Person(${this.getName()})`;\n  }\n\n  getFirstName(){\n    if (this.state.firstnames){\n      return this.state.firstnames.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getTitle(){\n    if (this.state.titles){\n      return this.state.titles.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getSurname(){\n    if (this.state.surnames){\n      return this.state.surnames.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getSuffix(){\n    if (this.state.suffixes){\n      return this.state.suffixes.join(\" \");\n    }\n    else{\n      return null;\n    }\n  }\n\n  getName(){\n    var parts = [];\n\n    let part = this.getTitle();\n    if (part){\n      parts.push(part);\n    }\n\n    part = this.getFirstName();\n    if (part){\n      parts.push(part);\n    }\n\n    part = this.getSurname();\n    if (part){\n      parts.push(part);\n    }\n\n    part = this.getSuffix();\n    if (part){\n      parts.push(part);\n    }\n\n    if (parts.length > 0){\n       return parts.join(\" \");\n    }\n    else{\n      return \"null\";\n    }\n  }\n\n  getPositions(){\n    let result = [];\n\n    for (let [key, value] in Object.entries(this.state.positions)){\n      result.push( [this._getHook(key), value] );\n    }\n\n    return result;\n  }\n\n  getAffiliations(){\n    let result = [];\n\n    for (let [key, value] in Object.entries(this.state.affiliations)){\n      result.push( [this._getHook(key), value] );\n    }\n\n    return result;\n  }\n\n  getScores(){\n    return this.state.scores;\n  }\n\n  getBorn(){\n    if (this.state.alive){\n      return this.state.alive.getStart();\n    }\n    else{\n      return null;\n    }\n  }\n\n  getDied(){\n    if (this.state.alive){\n      return this.state.alive.getEnd();\n    }\n    else{\n      return null;\n    }\n  }\n\n  getNode(is_anchor=false){\n    let node = {id: this.getID(),\n                label: this.getName(),\n                title: this.getName(),\n                shape: \"dot\",\n               };\n\n    let weight = 10.0;\n\n    if (this.state.scores){\n      weight = this.state.scores.weight;\n      if (!weight){\n        weight = 10.0;\n      }\n    }\n\n    if (weight < 5.0){\n      weight = 5.0;\n    }\n    else if (weight > 20.0){\n      weight = 20.0;\n    }\n\n    node[\"size\"] = weight;\n\n    let keys = Object.keys(this.state.affiliations);\n\n    if (keys.length > 0){\n      node[\"group\"] = keys.sort().join(\":\");\n    }\n    else{\n      node[\"group\"] = \"unknown\";\n    }\n\n    if (is_anchor){\n      node[\"shape\"] = \"star\";\n      node[\"physics\"] = false;\n      node[\"group\"] = \"anchor\";\n      node[\"size\"] = 20.0;\n    }\n\n    return node;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPerson.unDry = function(value){\n  return new Person(value);\n}\n\nDry.registerClass(\"Person\", Person);\n\nexport default Person;\n","\nclass KeyError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, KeyError)\n    }\n}\n\nclass ValueError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, ValueError)\n    }\n}\n\nclass DuplicateError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, DuplicateError)\n    }\n}\n\nclass MissingError extends Error {\n    constructor(...args) {\n        super(...args)\n        Error.captureStackTrace(this, MissingError)\n    }\n}\n\nexport {KeyError, ValueError, DuplicateError, MissingError};\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\nimport vis from \"vis-network\";\n\nimport Person from \"./Person\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_person_uid(){\n  let uid = uuidv4();\n  return \"P\" + uid.substring(uid.length-7);\n}\n\nclass People {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n\n    this._getHook = null;\n\n    this.load(props);\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  find(name){\n    for (let key in this.state.registry){\n      let person = this.state.registry[key];\n      if (person.getName().search(name) !== -1){\n        return key;\n      }\n    }\n\n    return null;\n  }\n\n  add(person){\n    if (!(person instanceof Person)){ return;}\n\n    let id = person.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Person ID ${person}`);\n      }\n\n      this.state.registry[id] = person;\n    }\n    else{\n      let uid = _generate_person_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_person_uid();\n      }\n\n      person.state.id = uid;\n      this.state.registry[uid] = person;\n    }\n  }\n\n  getNodes(anchor=null){\n    let nodes = new vis.DataSet();\n\n    for (let person in this.state.registry){\n      if (person === anchor){\n        nodes.add(this.state.registry[person].getNode({is_anchor:true}));\n      }\n      else{\n        nodes.add(this.state.registry[person].getNode());\n      }\n    }\n\n    return nodes;\n  }\n\n  get(id){\n    let person = this.state.registry[id];\n\n    if (person === null){\n      throw MissingError(`No Person with ID ${id}`);\n    }\n\n    return person;\n  }\n\n  load(data){\n    if (data){\n      if (data.array){ data = data.array; }\n      data.forEach(element => {\n        let person = Person.load(element);\n        this.add(person);\n      });\n    }\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPeople.unDry = function(value){\n  let people = new People();\n  people.state = value;\n  return people;\n}\n\nDry.registerClass(\"People\", People);\n\nexport default People;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Business {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      projects: {},\n      sources: [],\n      scores: {},\n      affiliations: {},\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.affiliations = setState(state.affiliations, {});\n      this.state.projects = setState(state.projects, {});\n      this.state.sources = setState(state.sources, []);\n      this.state.scores = setState(state.scores, {});\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Business(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  getAffiliations(){\n    let result = [];\n\n    for (let [key, value] in Object.entries(this.state.affiliations)){\n      result.push( [this._getHook(key), value] );\n    }\n\n    return result;\n  }\n\n  getScores(){\n    return this.state.scores;\n  }\n\n  getNode(){\n    let node = {\n      id: this.getID(),\n      label: this.getName(),\n      title: this.getName(),\n      shape: \"dot\",\n     };\n\n    let weight = 1.0;\n\n    if (this.state.scores){\n      weight = this.state.scores.weight;\n      if (!weight){\n        weight = 1.0;\n      }\n    }\n\n    if (weight < 5.0){\n      weight = 5.0;\n    }\n    else if (weight > 20.0){\n      weight = 20.0;\n    }\n\n    node[\"size\"] = weight;\n\n    let keys = Object.keys(this.state.affiliations);\n\n    if (keys.length > 0){\n      node[\"group\"] = keys.sort().join(\":\");\n    }\n\n    return node;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nBusiness.unDry = function(value){\n  return new Business(value);\n}\n\nDry.registerClass(\"Business\", Business);\n\nexport default Business;\n","\nimport Dry from 'json-dry';\nimport vis from 'vis-network';\nimport uuidv4 from 'uuid';\n\nimport Business from \"./Business\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_business_uid(){\n  let uid = uuidv4();\n  return \"B\" + uid.substring(uid.length-7);\n}\n\nclass Businesses {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(business){\n    if (!(business instanceof Business)){ return;}\n\n    let id = business.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Business ID ${Business}`);\n      }\n\n      this.state.registry[id] = business;\n    }\n    else{\n      let uid = _generate_business_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_business_uid();\n      }\n\n      business.state.id = uid;\n      this.state.registry[uid] = business;\n    }\n  }\n\n  get(id){\n    let business = this.state.registry[id];\n\n    if (business === null){\n      throw MissingError(`No Business with ID ${id}`);\n    }\n\n    return business;\n  }\n\n  getNodes(){\n    let nodes = new vis.DataSet();\n\n    for (let business in this.state.registry){\n      nodes.add(this.state.registry[business].getNode());\n    }\n\n    return nodes;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nBusinesses.unDry = function(value){\n  let businesses = new Businesses();\n  businesses.state = value;\n  return businesses;\n}\n\nDry.registerClass(\"Businesses\", Businesses);\n\nexport default Businesses;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Message {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      date: null,\n      sender: null,\n      receiver: null,\n      scores: {},\n    };\n\n    this.setState(props);\n    this._getHook = null;\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  getSender(){\n    if (this._getHook){\n      return this._getHook(this.state.sender);\n    }\n    else {\n      return this.state.sender;\n    }\n  }\n\n  getReceiver(){\n    if (this._getHook){\n      return this._getHook(this.state.receiver);\n    }\n    else {\n      return this.state.receiver;\n    }\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.date = setState(state.date);\n      this.state.sender = setState(state.sender);\n      this.state.receiver = setState(state.receiver);\n      this.state.scores = setState(state.scores, {});\n    }\n  }\n\n  toString(){\n    return `Message(name=${this.state.name} ` +\n           `${this.state.sender}=>${this.state.receiver})`;\n  }\n\n  toEdge(){\n    let weight = 1.0;\n\n    if (this.state.scores){\n      weight = this.state.scores.weight;\n\n      if (!weight){\n        weight = 1.0;\n      }\n    }\n\n    let color = 'red';\n\n    if (weight > 10.0){\n      weight = 10.0;\n    }\n    else if (weight >= 4){\n      color = 'black';\n    }\n    else if (weight > 1.0){\n      color = 'gray';\n    }\n    else{\n      color = 'gray';\n      weight = 1.0;\n    }\n\n    let edge = {\n      id:this.getID(),\n      from:this.state.sender,\n      to:this.state.receiver,\n      size:weight,\n      color:color,\n    };\n\n    return edge;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nMessage.unDry = function(value){\n  return new Message(value);\n}\n\nMessage.load = function(data, people=null){\n  return new Message({name: data.name});\n}\n\nDry.registerClass(\"Message\", Message);\n\nexport default Message;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\nimport vis from \"vis-network\";\n\nimport Message from \"./Message\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_message_uid(){\n  let uid = uuidv4();\n  return \"M\" + uid.substring(uid.length-7);\n}\n\nclass Messages {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(message){\n    if (!(message instanceof Message)){ return;}\n\n    let id = message.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Message ID ${message}`);\n      }\n\n      this.state.registry[id] = message;\n    }\n    else{\n      let uid = _generate_message_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_message_uid();\n      }\n\n      message.state.id = uid;\n      this.state.registry[uid] = message;\n    }\n  }\n\n  get(id){\n    let message = this.state.registry[id];\n\n    if (message === null){\n      throw MissingError(`No Message with ID ${id}`);\n    }\n\n    return message;\n  }\n\n  getEdges(){\n    let edges = new vis.DataSet();\n\n    for (let key in this.state.registry){\n      let message = this.state.registry[key];\n      edges.add(message.toEdge());\n    }\n\n    return edges;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nMessages.unDry = function(value){\n  let messages = new Messages();\n  messages.state = value;\n  return messages;\n}\n\nDry.registerClass(\"Messages\", Messages);\n\nexport default Messages;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Position {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      sources: [],\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.sources = setState(state.sources, []);\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Position(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nPosition.unDry = function(value){\n  return new Position(value);\n}\n\nDry.registerClass(\"Position\", Position);\n\nexport default Position;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Position from \"./Position\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_position_uid(){\n  let uid = uuidv4();\n  return \"Q\" + uid.substring(uid.length-7);\n}\n\nclass Positions {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(position){\n    if (!(position instanceof Position)){ return;}\n\n    let id = position.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Position ID ${position}`);\n      }\n\n      this.state.registry[id] = position;\n    }\n    else{\n      let uid = _generate_position_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_position_uid();\n      }\n\n      position.state.id = uid;\n      this.state.registry[uid] = position;\n    }\n  }\n\n  get(id){\n    let position = this.state.registry[id];\n\n    if (position === null){\n      throw MissingError(`No Position with ID ${id}`);\n    }\n\n    return position;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nPositions.unDry = function(value){\n  let positions = new Positions();\n  positions.state = value;\n  return positions;\n}\n\nDry.registerClass(\"Positions\", Positions);\n\nexport default Positions;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Affiliation {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      sources: [],\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.sources = setState(state.sources, []);\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Affiliation(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nAffiliation.unDry = function(value){\n  return new Affiliation(value);\n}\n\nDry.registerClass(\"Affiliation\", Affiliation);\n\nexport default Affiliation;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Affiliation from \"./Affiliation\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_affiliation_uid(){\n  let uid = uuidv4();\n  return \"A\" + uid.substring(uid.length-7);\n}\n\nclass Affiliations {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(affiliation){\n    if (!(affiliation instanceof Affiliation)){ return;}\n\n    let id = affiliation.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Affiliation ID ${affiliation}`);\n      }\n\n      this.state.registry[id] = affiliation;\n    }\n    else{\n      let uid = _generate_affiliation_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_affiliation_uid();\n      }\n\n      affiliation.state.id = uid;\n      this.state.registry[uid] = affiliation;\n    }\n  }\n\n  get(id){\n    let affiliation = this.state.registry[id];\n\n    if (affiliation === null){\n      throw MissingError(`No Affiliation with ID ${id}`);\n    }\n\n    return affiliation;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nAffiliations.unDry = function(value){\n  let affiliations = new Affiliations();\n  affiliations.state = value;\n  return affiliations;\n}\n\nDry.registerClass(\"Affiliations\", Affiliations);\n\nexport default Affiliations;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Source {\n  constructor(props){\n    this.state = {\n      name: null,\n      id: null,\n      notes: {},\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.name = setState(state.name);\n      this.state.id = setState(state.id);\n      this.state.notes = setState(state.notes, {})\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Source(${this.getName()})`;\n  }\n\n  getName(){\n    return this.state.name;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nSource.unDry = function(value){\n  return new Source(value);\n}\n\nDry.registerClass(\"Source\", Source);\n\nexport default Source;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Source from \"./Source\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_source_uid(){\n  let uid = uuidv4();\n  return \"S\" + uid.substring(uid.length-7);\n}\n\nclass Sources {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(source){\n    if (!(source instanceof Source)){ return;}\n\n    let id = source.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Source ID ${source}`);\n      }\n\n      this.state.registry[id] = source;\n    }\n    else{\n      let uid = _generate_source_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_source_uid();\n      }\n\n      source.state.id = uid;\n      this.state.registry[uid] = source;\n    }\n  }\n\n  get(id){\n    let source = this.state.registry[id];\n\n    if (source === null){\n      throw MissingError(`No Source with ID ${id}`);\n    }\n\n    return source;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nSources.unDry = function(value){\n  let sources = new Sources();\n  sources.state = value;\n  return sources;\n}\n\nDry.registerClass(\"Sources\", Sources);\n\nexport default Sources;\n","\nimport Dry from \"json-dry\";\n\nfunction setState(val, def=null){\n  if (val){\n    return val;\n  } else {\n    return def;\n  }\n}\n\nclass Note {\n  constructor(props){\n    this.state = {\n      text: null,\n      id: null,\n      sources: [],\n    };\n\n    this.setState(props);\n\n    this._getHook = null;\n  }\n\n  getID(){\n    return this.state.id;\n  }\n\n  setState(state){\n    if (state){\n      this.state.text = setState(state.text);\n      this.state.id = setState(state.id);\n      this.state.sources = setState(state.sources, []);\n    }\n  }\n\n  _updateHooks(hook){\n    this._getHook = hook;\n  }\n\n  toString(){\n    return `Note(${this.getText()})`;\n  }\n\n  getText(){\n    return this.state.text;\n  }\n\n  toDry(){\n    return {value: this.state};\n  }\n};\n\nNote.unDry = function(value){\n  return new Note(value);\n}\n\nDry.registerClass(\"Note\", Note);\n\nexport default Note;\n","\nimport Dry from 'json-dry';\nimport uuidv4 from 'uuid';\n\nimport Note from \"./Note\";\nimport { KeyError, MissingError } from './Errors';\n\nfunction _generate_note_uid(){\n  let uid = uuidv4();\n  return \"N\" + uid.substring(uid.length-7);\n}\n\nclass Notes {\n  constructor(props){\n    this.state = {\n      registry: {},\n    };\n  };\n\n  _updateHooks(hook){\n    this._getHook = hook;\n    for (let key in this.state.registry){\n      this.state.registry[key]._updateHooks(hook);\n    }\n  }\n\n  add(note){\n    if (!(note instanceof Note)){ return;}\n\n    let id = note.getID();\n\n    if (id){\n      if (id in this.state.registry){\n        throw KeyError(`Duplicate Note ID ${note}`);\n      }\n\n      this.state.registry[id] = note;\n    }\n    else{\n      let uid = _generate_note_uid();\n\n      while (uid in this.state.registry){\n        uid = _generate_note_uid();\n      }\n\n      note.state.id = uid;\n      this.state.registry[uid] = note;\n    }\n  }\n\n  get(id){\n    let note = this.state.registry[id];\n\n    if (note === null){\n      throw MissingError(`No Note with ID ${id}`);\n    }\n\n    return note;\n  }\n\n  toDry(){\n    return {value: this.state.registry};\n  }\n};\n\nNotes.unDry = function(value){\n  let notes = new Notes();\n  notes.state.registry = value;\n  return notes;\n}\n\nDry.registerClass(\"Notes\", Notes);\n\nexport default Notes;\n","\nimport Dry from 'json-dry';\n\nfunction setState(val, def=null){\n    if (val){\n      return val;\n    } else {\n      return def;\n    }\n  }\n\nclass DateRange{\n  constructor(value){\n    this.state = {\n      start: null,\n      end: null\n    }\n\n    this.setState(value);\n  }\n\n  setState(state){\n    if (state){\n      if (state === \"null\"){ return; }\n      this.state.start = setState(state.start);\n      this.state.end = setState(state.end);\n    }\n  }\n\n  toDry(){\n    return this.state;\n  }\n}\n\nDateRange.unDry = function(value){\n  return new DateRange(value);\n}\n\nDry.registerClass(\"DateRange\", DateRange);\n\nexport default DateRange;\n","\nimport Dry from 'json-dry';\nimport People from './People';\nimport Businesses from './Businesses';\nimport Messages from './Messages';\nimport Positions from './Positions';\nimport Affiliations from './Affiliations';\nimport Sources from './Sources';\nimport Notes from './Notes';\nimport DateRange from './DateRange';\n\nclass Social {\n    constructor(props){\n        this.state = props;\n    }\n\n    _updateHooks(){\n        let getHook = (id)=>{return this.get(id);};\n\n        let state = {};\n\n        if (!(this.state.people instanceof People)){\n           state.people = new People();\n        }\n        else{\n            state.people = this.state.people;\n        }\n\n        if (!(this.state.businesses instanceof Businesses)){\n            state.businesses = new Businesses();\n        }\n        else{\n            state.businesses = this.state.businesses;\n        }\n\n        if (!(this.state.messages instanceof Messages)){\n            state.messages = new Messages();\n        }else{\n            state.messages = this.state.messages;\n        }\n\n        if (!(this.state.positions instanceof Positions)){\n            state.positions = new Positions();\n        }\n        else{\n            state.positions = this.state.positions;\n        }\n\n        if (!(this.state.affiliations instanceof Affiliations)){\n            state.affiliations = new Affiliations();\n        }\n        else{\n            state.affiliations = this.state.affiliations;\n        }\n\n        if (!(this.state.sources instanceof Sources)){\n            state.sources = new Sources();\n        }\n        else{\n            state.sources = this.state.sources;\n        }\n\n        if (!(this.state.notes instanceof Notes)){\n            state.notes = new Notes();\n        }\n        else{\n            state.notes = this.state.notes;\n        }\n\n        this.state = state;\n\n        for (let key in this.state){\n          this.state[key]._updateHooks(getHook);\n        }\n    }\n\n    getPeople(){\n        return this.state.people;\n    }\n\n    getBusinesses(){\n        return this.state.businesses;\n    }\n\n    getMessages(){\n        return this.state.messages;\n    }\n\n    getAffiliations(){\n        return this.state.affiliations;\n    }\n\n    getPositions(){\n        return this.state.positions;\n    }\n\n    getSources(){\n      return this.state.sources;\n    }\n\n    getNotes(){\n      return this.state.notes;\n    }\n\n    getGraph(){\n      let anchor = this.getPeople().find(\"Brunel\");\n\n      let nodes = this.getPeople().getNodes(anchor);\n      nodes.add(this.getBusinesses().getNodes().get());\n\n      let edges = this.getMessages().getEdges();\n\n      return {\"nodes\": nodes, \"edges\": edges};\n    }\n\n    get(id){\n        if (id[0] === \"M\"){\n            return this.getMessages().get(id);\n        }\n        else if (id[0] === \"P\"){\n            return this.getPeople().get(id);\n        }\n        else if (id[0] === \"B\"){\n            return this.getBusinesses().get(id);\n        }\n        else if (id[0] === \"Q\"){\n            return this.getPositions().get(id);\n        }\n        else if (id[0] === \"A\"){\n            return this.getAffiliations().get(id);\n        }\n        else if (id[0] === \"S\"){\n            return this.getSources().get(id);\n        }\n        else if (id[0] === \"N\"){\n            return this.getNotes().get(id);\n        }\n        else {\n            return id;\n        }\n    }\n\n    toDry(){\n        return {value: this.state};\n    }\n}\n\nSocial.unDry = function(value){\n    let social = new Social();\n    social.state = value;\n    social._updateHooks();\n\n    return social;\n}\n\nDry.registerClass(\"Social\", Social);\n\nexport default Social;\n","import React from \"react\";\nimport { Container, Row, Col } from 'reactstrap';\n\nimport Dry from 'json-dry';\nimport SocialGraph from \"./SocialGraph\";\nimport InfoBox from \"./InfoBox\";\n\nimport graph_data from './data.json';\nimport Social from './Social';\nimport Person from './Person';\nimport Business from './Business';\nimport Message from './Message';\n\nclass SocialApp extends React.Component {\n  constructor(props){\n    super(props);\n\n    let title = \"Isambard's Social Network\";\n    let image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Robert_Howlett_-_Isambard_Kingdom_Brunel_and_the_launching_chains_of_the_Great_Eastern_-_Google_Art_Project.jpg/256px-Robert_Howlett_-_Isambard_Kingdom_Brunel_and_the_launching_chains_of_the_Great_Eastern_-_Google_Art_Project.jpg\";\n    let text = \"This is an interactive viewer of Isambard Kingdom Brunel's social network. Please click on the nodes and have fun!\";\n\n    let social = Dry.parse(graph_data);\n    if (!(social instanceof Social )){\n      console.log(\"Could not parse!\");\n      console.log(social);\n      social = new Social();\n    }\n\n    this.state = {\n      default_data: {\"title\": title, \"image\": image, \"text\": text},\n      infobox_data: {\"title\": title, \"image\": image, \"text\": text},\n      social: social,\n      graph: social.getGraph(),\n    };\n\n    this.slotClicked = this.slotClicked.bind(this);\n  }\n\n  showInfo(item){\n    let newdata = {...this.state.infobox_data};\n\n    if (item instanceof Person){\n      newdata.title = \"Person\";\n      newdata.text = item.getName();\n      newdata.image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/db/Illustrirte_Zeitung_%281843%29_21_332_1_Das_vom_Stapellaufen_des_Great-Britain.PNG/640px-Illustrirte_Zeitung_%281843%29_21_332_1_Das_vom_Stapellaufen_des_Great-Britain.PNG\";\n    }\n    else if (item instanceof Business){\n      newdata.title = \"Business\";\n      newdata.text = item.getName();\n      newdata.image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/0d/SS_Great_Britain_diagram.jpg/320px-SS_Great_Britain_diagram.jpg\";\n    }\n    else if (item instanceof Message){\n      newdata.title = \"Message\";\n\n      let sender = item.getSender();\n      if (sender.getName){\n        let node = sender;\n        sender = <button href=\"#\" onClick={()=>this.showInfo(node)}>\n                    {sender.getName()}\n                 </button>;\n      }\n\n      let receiver = item.getReceiver();\n      if (receiver.getName){\n        let node = receiver;\n        receiver = <button href=\"#\" onClick={()=>this.showInfo(node)}>\n                     {receiver.getName()}\n                   </button>;\n      }\n\n      newdata.text = <span>Message from {sender} to {receiver}</span>;\n      newdata.image = \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/3b/SS_Great_Britain_transverse_section.jpg/320px-SS_Great_Britain_transverse_section.jpg\";\n    }\n\n    this.setState({infobox_data:newdata});\n  }\n\n  slotClicked(id){\n    if (!id){\n      return;\n    }\n\n    const social = this.state.social;\n\n    const item = social.get(id);\n\n    this.showInfo(item);\n  }\n\n  render(){\n    let data = this.state.infobox_data;\n\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col>\n              <SocialGraph graph={this.state.graph}\n                           emitClicked={(id)=>this.slotClicked(id)} />\n            </Col>\n            <Col xs=\"4\">\n              <InfoBox title={data.title}\n                       image={data.image}\n                       text={data.text} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <p align=\"center\">\n                See the source <a href=\"https://github.com/chryswoods/brunel\">on GitHub</a>\n              </p>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n};\n\nexport default SocialApp;\n"],"sourceRoot":""}